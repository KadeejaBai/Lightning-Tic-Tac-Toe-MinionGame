{"version":3,"file":"lightning.min.js","sources":["../src/tree/StageUtils.mjs","../src/tree/Utils.mjs","../src/tree/Base.mjs","../src/flex/layout/SpacingCalculator.mjs","../src/flex/layout/ContentAligner.mjs","../src/flex/FlexUtils.mjs","../src/flex/layout/line/SizeShrinker.mjs","../src/flex/layout/line/SizeGrower.mjs","../src/flex/layout/line/ItemPositioner.mjs","../src/flex/layout/line/ItemAligner.mjs","../src/flex/layout/line/LineLayout.mjs","../src/flex/layout/LineLayouter.mjs","../src/flex/layout/ItemCoordinatesUpdater.mjs","../src/flex/layout/FlexLayout.mjs","../src/flex/FlexContainer.mjs","../src/flex/FlexItem.mjs","../src/flex/FlexTarget.mjs","../src/tree/TextureSource.mjs","../src/tree/core/ElementTexturizer.mjs","../src/tree/core/ElementCore.mjs","../src/EventEmitter.mjs","../src/tree/Shader.mjs","../src/tree/Texture.mjs","../src/textures/ImageTexture.mjs","../src/textures/TextTextureRenderer.mjs","../src/textures/TextTexture.mjs","../src/textures/SourceTexture.mjs","../src/animation/Transition.mjs","../src/tree/ObjectList.mjs","../src/tree/ElementChildList.mjs","../src/tree/Element.mjs","../src/application/StateMachine.mjs","../src/application/Component.mjs","../src/tree/core/CoreQuadList.mjs","../src/renderer/webgl/WebGLCoreQuadList.mjs","../src/tree/core/CoreQuadOperation.mjs","../src/renderer/webgl/WebGLCoreQuadOperation.mjs","../src/tree/core/CoreRenderExecutor.mjs","../src/renderer/webgl/WebGLCoreRenderExecutor.mjs","../src/tree/core/CoreRenderState.mjs","../src/renderer/webgl/WebGLShaderProgram.mjs","../src/renderer/webgl/WebGLShader.mjs","../src/renderer/webgl/shaders/DefaultShader.mjs","../src/renderer/Renderer.mjs","../src/renderer/webgl/WebGLRenderer.mjs","../src/renderer/c2d/C2dCoreQuadList.mjs","../src/renderer/c2d/C2dCoreQuadOperation.mjs","../src/renderer/c2d/C2dCoreRenderExecutor.mjs","../src/renderer/c2d/C2dShader.mjs","../src/renderer/c2d/shaders/DefaultShader.mjs","../src/renderer/c2d/C2dTextureTintManager.mjs","../src/renderer/c2d/C2dRenderer.mjs","../src/renderer/spark/shaders/SparkShader.mjs","../src/renderer/spark/SparkRenderer.mjs","../src/platforms/browser/ImageWorker.mjs","../src/platforms/browser/WebPlatform.mjs","../src/tools/WebGLStateManager.mjs","../src/tree/TextureManager.mjs","../src/tree/TextureThrottler.mjs","../src/tree/core/CoreContext.mjs","../src/animation/TransitionSettings.mjs","../src/animation/TransitionManager.mjs","../src/tools/MultiSpline.mjs","../src/animation/AnimationActionSettings.mjs","../src/animation/AnimationSettings.mjs","../src/animation/Animation.mjs","../src/animation/AnimationManager.mjs","../src/textures/RectangleTexture.mjs","../src/tree/Stage.mjs","../src/platforms/PlatformLoader.mjs","../src/application/Application.mjs","../src/textures/StaticCanvasTexture.mjs","../src/tools/Tools.mjs","../src/tools/ObjMerger.mjs","../src/tools/ObjectListProxy.mjs","../src/tools/ObjectListWrapper.mjs","../src/textures/NoiseTexture.mjs","../src/textures/HtmlTexture.mjs","../src/components/ListComponent.mjs","../src/renderer/webgl/shaders/LinearBlurShader.mjs","../src/renderer/webgl/shaders/BoxBlurShader.mjs","../src/renderer/c2d/shaders/BlurShader.mjs","../src/components/FastBlurComponent.mjs","../src/components/BloomComponent.mjs","../src/components/SmoothScaleComponent.mjs","../src/renderer/common/shaders/GrayscaleShader.mjs","../src/renderer/webgl/shaders/DitheringShader.mjs","../src/renderer/webgl/shaders/CircularPushShader.mjs","../src/renderer/webgl/shaders/InversionShader.mjs","../src/renderer/webgl/shaders/OutlineShader.mjs","../src/renderer/webgl/shaders/PixelateShader.mjs","../src/renderer/webgl/shaders/RadialFilterShader.mjs","../src/renderer/webgl/shaders/RoundedRectangleShader.mjs","../src/renderer/webgl/shaders/VignetteShader.mjs","../src/renderer/webgl/shaders/SpinnerShader.mjs","../src/renderer/webgl/shaders/HoleShader.mjs","../src/renderer/webgl/shaders/RadialGradientShader.mjs","../src/renderer/webgl/shaders/Light3dShader.mjs","../src/renderer/webgl/shaders/PerspectiveShader.mjs","../src/lightning.mjs","../src/textures/StaticTexture.mjs","../src/components/BorderComponent.mjs"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StageUtils {\n\n    static mergeNumbers(v1, v2, p) {\n        return v1 * p + v2 * (1 - p);\n    };\n\n    static rgb(r, g, b) {\n        return (r << 16) + (g << 8) + b + (255 * 16777216);\n    };\n\n    static rgba(r, g, b, a) {\n        return (r << 16) + (g << 8) + b + (((a * 255) | 0) * 16777216);\n    };\n\n    static getRgbString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\n    };\n\n    static getRgbaString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        let a = ((color / 16777216) | 0) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaStringFromArray(color) {\n        let r = Math.floor(color[0] * 255);\n        let g = Math.floor(color[1] * 255);\n        let b = Math.floor(color[2] * 255);\n        let a = Math.floor(color[3] * 255) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r / 255, g / 255, b / 255, a / 255];\n    };\n\n    static getRgbComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        return [r / 255, g / 255, b / 255];\n    };\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static mergeMultiColors(c, p) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1 * p[i];\n            g += g1 * p[i];\n            b += b1 * p[i];\n            a += a1 * p[i];\n            t += p[i];\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeMultiColorsEqual(c) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1;\n            g += g1;\n            b += b1;\n            a += a1;\n            t += 1.0;\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeColorAlpha(c, alpha) {\n        let a = ((c / 16777216 | 0) * alpha) | 0;\n        return (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\n            (a << 24);\n    };\n\n    static rad(deg) {\n        return deg * (Math.PI / 180);\n    };\n\n    static getTimingBezier(a, b, c, d) {\n        let xc = 3.0 * a;\n        let xb = 3.0 * (c - a) - xc;\n        let xa = 1.0 - xc - xb;\n        let yc = 3.0 * b;\n        let yb = 3.0 * (d - b) - yc;\n        let ya = 1.0 - yc - yb;\n\n        return function (time) {\n            if (time >= 1.0) {\n                return 1;\n            }\n            if (time <= 0) {\n                return 0;\n            }\n\n            let t = 0.5, cbx, cbxd, dx;\n\n            for (let it = 0; it < 20; it++) {\n                cbx = t * (t * (t * xa + xb) + xc);\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                // Cubic bezier derivative.\n                cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n                if (cbxd > 1e-10 && cbxd < 1e-10) {\n                    // Problematic. Fall back to binary search method.\n                    break;\n                }\n\n                t += dx / cbxd;\n            }\n\n            // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n            let minT = 0;\n            let maxT = 1;\n            for (let it = 0; it < 20; it++) {\n                t = 0.5 * (minT + maxT);\n\n                cbx = t * (t * (t * xa + xb) + xc);\n\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    // Solution found!\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                if (dx < 0) {\n                    maxT = t;\n                } else {\n                    minT = t;\n                }\n            }\n\n        };\n    };\n\n    static getTimingFunction(str) {\n        switch (str) {\n            case \"linear\":\n                return function (time) {\n                    return time\n                };\n            case \"ease\":\n                return StageUtils.getTimingBezier(0.25, 0.1, 0.25, 1.0);\n            case \"ease-in\":\n                return StageUtils.getTimingBezier(0.42, 0, 1.0, 1.0);\n            case \"ease-out\":\n                return StageUtils.getTimingBezier(0, 0, 0.58, 1.0);\n            case \"ease-in-out\":\n                return StageUtils.getTimingBezier(0.42, 0, 0.58, 1.0);\n            case \"step-start\":\n                return function () {\n                    return 1\n                };\n            case \"step-end\":\n                return function (time) {\n                    return time === 1 ? 1 : 0;\n                };\n            default:\n                let s = \"cubic-bezier(\";\n                if (str && str.indexOf(s) === 0) {\n                    let parts = str.substr(s.length, str.length - s.length - 1).split(\",\");\n                    if (parts.length !== 4) {\n                        console.warn(\"Unknown timing function: \" + str);\n\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n                    let a = parseFloat(parts[0]);\n                    let b = parseFloat(parts[1]);\n                    let c = parseFloat(parts[2]);\n                    let d = parseFloat(parts[3]);\n                    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                        console.warn(\"Unknown timing function: \" + str);\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n\n                    return StageUtils.getTimingBezier(a, b, c, d);\n                } else {\n                    console.warn(\"Unknown timing function: \" + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time\n                    };\n                }\n        }\n    };\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value === 'string';\n    }\n\n    static clone(v) {\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\n            return Utils.getDeepClone(v);\n        } else {\n            // Copy by value.\n            return v;\n        }\n    }\n\n    static cloneObjShallow(obj) {\n        let keys = Object.keys(obj);\n        let clone = {}\n        for (let i = 0; i < keys.length; i++) {\n            clone[keys[i]] = obj[keys[i]];\n        }\n        return clone;\n    }\n\n    static merge(obj1, obj2) {\n        let keys = Object.keys(obj2);\n        for (let i = 0; i < keys.length; i++) {\n            obj1[keys[i]] = obj2[keys[i]];\n        }\n        return obj1;\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object' || type === 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object;\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static getModuloIndex(index, len) {\n        if (len === 0) return index;\n        while (index < 0) {\n            index += Math.ceil(-index / len) * len;\n        }\n        index = index % len;\n        return index;\n    }\n\n    static getDeepClone(obj) {\n        let i, c;\n        if (Utils.isFunction(obj)) {\n            // Copy functions by reference.\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            c = [];\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else if (Utils.isObject(obj)) {\n            c = {}\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else {\n            return obj;\n        }\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false;\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\n        } else {\n            return v1 === v2;\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false;\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false;\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static setToArray(s) {\n        let result = [];\n        s.forEach(function (value) {\n            result.push(value);\n        });\n        return result;\n    }\n\n    static iteratorToArray(iterator) {\n        let result = [];\n        let iteratorResult = iterator.next();\n        while (!iteratorResult.done) {\n            result.push(iteratorResult.value);\n            iteratorResult = iterator.next();\n        }\n        return result;\n    }\n\n    static isUcChar(charcode) {\n        return charcode >= 65 && charcode <= 90;\n    }\n\n}\n\nUtils.isWeb = (typeof window !== \"undefined\") && (typeof sparkscene === \"undefined\");\nUtils.isWPE = Utils.isWeb && (navigator.userAgent.indexOf(\"WPE\") !== -1);\nUtils.isSpark = (typeof sparkscene !== \"undefined\");\nUtils.isNode = (typeof window === \"undefined\") || Utils.isSpark;\nUtils.isPS4 = Utils.isWeb && (navigator.userAgent.indexOf(\"PlayStation 4\") !== -1);\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Base {\n\n    static defaultSetter(obj, name, value) {\n        obj[name] = value;\n    }\n\n    static patchObject(obj, settings) {\n        if (!Utils.isObjectLiteral(settings)) {\n            console.error(\"Settings must be object literal\");\n        } else {\n            let names = Object.keys(settings);\n            for (let i = 0, n = names.length; i < n; i++) {\n                let name = names[i];\n\n                this.patchObjectProperty(obj, name, settings[name]);\n            }\n        }\n    }\n\n    static patchObjectProperty(obj, name, value) {\n        let setter = obj.setSetting || Base.defaultSetter;\n\n        if (name.charAt(0) === \"_\") {\n            // Disallow patching private variables.\n            if (name !== \"__create\") {\n                console.error(\"Patch of private property '\" + name + \"' is not allowed\");\n            }\n        } else if (name !== \"type\") {\n            // Type is a reserved keyword to specify the class type on creation.\n            if (Utils.isFunction(value) && value.__local) {\n                // Local function (Base.local(s => s.something))\n                value = value.__local(obj);\n            }\n\n            setter(obj, name, value);\n        }\n    }\n\n    static local(func) {\n        // This function can be used as an object setting, which is called with the target object.\n        func.__local = true;\n    }\n\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SpacingCalculator {\n\n    static getSpacing(mode, numberOfItems, remainingSpace) {\n        const itemGaps = (numberOfItems - 1);\n        let spacePerGap;\n\n        let spacingBefore, spacingBetween;\n\n        switch(mode) {\n            case \"flex-start\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            case \"flex-end\":\n                spacingBefore = remainingSpace;\n                spacingBetween = 0;\n                break;\n            case \"center\":\n                spacingBefore = remainingSpace / 2;\n                spacingBetween = 0;\n                break;\n            case \"space-between\":\n                spacingBefore = 0;\n                spacingBetween = Math.max(0, remainingSpace) / itemGaps;\n                break;\n            case \"space-around\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 1);\n                    spacingBefore = 0.5 * spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"space-evenly\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 2);\n                    spacingBefore = spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"stretch\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            default:\n                throw new Error(\"Unknown mode: \" + mode);\n        }\n\n        return {spacingBefore, spacingBetween}\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"./SpacingCalculator.mjs\";\n\nexport default class ContentAligner {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._totalCrossAxisSize = 0;\n    }\n\n    get _lines() {\n        return this._layout._lines;\n    }\n\n    init() {\n        this._totalCrossAxisSize = this._getTotalCrossAxisSize();\n    }\n\n    align() {\n        const crossAxisSize = this._layout.crossAxisSize;\n        const remainingSpace = crossAxisSize - this._totalCrossAxisSize;\n\n        const {spacingBefore, spacingBetween} = this._getSpacing(remainingSpace);\n\n        const lines = this._lines;\n\n        const mode = this._layout._flexContainer.alignContent;\n        let growSize = 0;\n        if (mode === \"stretch\" && lines.length && (remainingSpace > 0)) {\n            growSize = remainingSpace / lines.length;\n        }\n\n        let currentPos = spacingBefore;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const crossAxisLayoutOffset = currentPos;\n            const aligner = lines[i].createItemAligner();\n\n            let finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\n\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\n\n            aligner.align();\n\n            if (aligner.recursiveResizeOccured) {\n                lines[i].setItemPositions();\n            }\n\n            currentPos += finalCrossAxisLayoutSize;\n            currentPos += spacingBetween;\n        }\n    }\n\n    get totalCrossAxisSize() {\n        return this._totalCrossAxisSize;\n    }\n\n    _getTotalCrossAxisSize() {\n        const lines = this._lines;\n        let total = 0;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const line = lines[i];\n            total += line.crossAxisLayoutSize;\n        }\n        return total;\n    }\n\n    _getSpacing(remainingSpace) {\n        const mode = this._layout._flexContainer.alignContent;\n        const numberOfItems = this._lines.length;\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class FlexUtils {\n\n    static getParentAxisSizeWithPadding(item, horizontal) {\n        const target = item.target;\n        const parent = target.getParent();\n        if (!parent) {\n            return 0;\n        } else {\n            const flexParent = item.flexParent;\n            if (flexParent) {\n                // Use pending layout size.\n                return this.getAxisLayoutSize(flexParent, horizontal) + this.getTotalPadding(flexParent, horizontal);\n            } else {\n                // Use 'absolute' size.\n                return horizontal ? parent.w : parent.h;\n            }\n        }\n    }\n\n    static getRelAxisSize(item, horizontal) {\n        if (horizontal) {\n            if (item.funcW) {\n                if (this._allowRelAxisSizeFunction(item, true)) {\n                    return item.funcW(this.getParentAxisSizeWithPadding(item, true));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalWidth;\n            }\n        } else {\n            if (item.funcH) {\n                if (this._allowRelAxisSizeFunction(item, false)) {\n                    return item.funcH(this.getParentAxisSizeWithPadding(item, false));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalHeight;\n            }\n        }\n    }\n\n    static _allowRelAxisSizeFunction(item, horizontal) {\n        const flexParent = item.flexParent;\n        if (flexParent && flexParent._flex._layout.isAxisFitToContents(horizontal)) {\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\n            return false;\n        }\n        return true;\n    }\n\n    static isZeroAxisSize(item, horizontal) {\n        if (horizontal) {\n            return !item.originalWidth && !item.funcW;\n        } else {\n            return !item.originalHeight && !item.funcH;\n        }\n    }\n\n    static getAxisLayoutPos(item, horizontal) {\n        return horizontal ? item.x : item.y;\n    }\n\n    static getAxisLayoutSize(item, horizontal) {\n        return horizontal ? item.w : item.h;\n    }\n\n    static setAxisLayoutPos(item, horizontal, pos) {\n        if (horizontal) {\n            item.x = pos;\n        } else {\n            item.y = pos;\n        }\n    }\n\n    static setAxisLayoutSize(item, horizontal, size) {\n        if (horizontal) {\n            item.w = size;\n        } else {\n            item.h = size;\n        }\n    }\n\n    static getAxisMinSize(item, horizontal) {\n        let minSize = this.getPlainAxisMinSize(item, horizontal);\n\n        let flexItemMinSize = 0;\n        if (item.isFlexItemEnabled()) {\n            flexItemMinSize = item._flexItem._getMinSizeSetting(horizontal);\n        }\n\n        const hasLimitedMinSize = (flexItemMinSize > 0);\n        if (hasLimitedMinSize) {\n            minSize = Math.max(minSize, flexItemMinSize);\n        }\n        return minSize;\n    }\n\n    static getPlainAxisMinSize(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            return item._flex._layout.getAxisMinSize(horizontal);\n        } else {\n            const isShrinkable = (item.flexItem.shrink !== 0);\n            if (isShrinkable) {\n                return 0;\n            } else {\n                return this.getRelAxisSize(item, horizontal);\n            }\n        }\n    }\n\n    static resizeAxis(item, horizontal, size) {\n        if (item.isFlexEnabled()) {\n            const isMainAxis = (item._flex._horizontal === horizontal);\n            if (isMainAxis) {\n                item._flex._layout.resizeMainAxis(size);\n            } else {\n                item._flex._layout.resizeCrossAxis(size);\n            }\n        } else {\n            this.setAxisLayoutSize(item, horizontal, size);\n        }\n    }\n\n\n    static getPaddingOffset(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingLeft;\n            } else {\n                return flex.paddingTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalPadding(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingRight + flex.paddingLeft;\n            } else {\n                return flex.paddingTop + flex.paddingBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getMarginOffset(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalMargin(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginRight + flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop + flexItem.marginBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeShrinker {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._shrunkSize = 0;\n    }\n\n    shrink(amount) {\n        this._shrunkSize = 0;\n\n        this._amountRemaining = amount;\n        let totalShrinkAmount = this._getTotalShrinkAmount();\n        if (totalShrinkAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerShrink = this._amountRemaining / totalShrinkAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const shrinkAmount = flexItem.shrink;\n                    const isShrinkableItem = (shrinkAmount > 0);\n                    if (isShrinkableItem) {\n                        let shrink = shrinkAmount * amountPerShrink;\n                        const minSize = flexItem._getMainAxisMinSize();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (size > minSize) {\n                            const maxShrink = size - minSize;\n                            const isFullyShrunk = (shrink >= maxShrink);\n                            if (isFullyShrunk) {\n                                shrink = maxShrink;\n\n                                // Destribute remaining amount over the other flex items.\n                                totalShrinkAmount -= shrinkAmount;\n                            }\n\n                            const finalSize = size - shrink;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._shrunkSize += shrink;\n                            this._amountRemaining -= shrink;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalShrinkAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalShrinkAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.shrink) {\n                const minSize = flexItem._getMainAxisMinSize();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully shrunk.\n                if (size > minSize) {\n                    total += flexItem.shrink;\n                }\n            }\n        }\n        return total;\n    }\n\n    getShrunkSize() {\n        return this._shrunkSize;\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeGrower {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._grownSize = 0;\n    }\n\n    grow(amount) {\n        this._grownSize = 0;\n\n        this._amountRemaining = amount;\n        let totalGrowAmount = this._getTotalGrowAmount();\n        if (totalGrowAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerGrow = this._amountRemaining / totalGrowAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const growAmount = flexItem.grow;\n                    const isGrowableItem = (growAmount > 0);\n                    if (isGrowableItem) {\n                        let grow = growAmount * amountPerGrow;\n                        const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (maxSize > 0) {\n                            if (size >= maxSize) {\n                                // Already fully grown.\n                                grow = 0;\n                            } else {\n                                const maxGrow = maxSize - size;\n                                const isFullyGrown = (grow >= maxGrow);\n                                if (isFullyGrown) {\n                                    grow = maxGrow;\n\n                                    // Destribute remaining amount over the other flex items.\n                                    totalGrowAmount -= growAmount;\n                                }\n                            }\n                        }\n\n                        if (grow > 0) {\n                            const finalSize = size + grow;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._grownSize += grow;\n                            this._amountRemaining -= grow;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalGrowAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalGrowAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.grow) {\n                const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully grown.\n                if (maxSize === 0 || size < maxSize) {\n                    total += flexItem.grow;\n                }\n            }\n        }\n        return total;\n    }\n\n    getGrownSize() {\n        return this._grownSize;\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"../SpacingCalculator.mjs\";\n\nexport default class ItemPositioner {\n\n    constructor(lineLayout) {\n        this._line = lineLayout;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    position() {\n        const {spacingBefore, spacingBetween} = this._getSpacing();\n\n        let currentPos = spacingBefore;\n\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n\n            item.flexItem._setMainAxisLayoutPos(currentPos);\n            currentPos += item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n            currentPos += spacingBetween;\n        }\n    }\n\n    _getSpacing() {\n        const remainingSpace = this._line._availableSpace;\n        let mode = this._layout._flexContainer.justifyContent;\n        const numberOfItems = this._line.numberOfItems;\n\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ItemAligner {\n\n    constructor(line) {\n        this._line = line;\n        this._crossAxisLayoutSize = 0;\n        this._crossAxisLayoutOffset = 0;\n        this._alignItemsSetting = null;\n        this._recursiveResizeOccured = false;\n        this._isCrossAxisFitToContents = false;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    setCrossAxisLayoutSize(size) {\n        this._crossAxisLayoutSize = size;\n    }\n\n    setCrossAxisLayoutOffset(offset) {\n        this._crossAxisLayoutOffset = offset;\n    }\n\n    align() {\n        this._alignItemsSetting = this._flexContainer.alignItems;\n\n        this._isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer._horizontal);\n\n        this._recursiveResizeOccured = false;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            this._alignItem(item);\n        }\n    }\n\n    get recursiveResizeOccured() {\n        return this._recursiveResizeOccured;\n    }\n\n    _alignItem(item) {\n        const flexItem = item.flexItem;\n        let align = flexItem.alignSelf || this._alignItemsSetting;\n\n        if (align === \"stretch\" && this._preventStretch(flexItem)) {\n            align = \"flex-start\";\n        }\n\n        if (align !== \"stretch\" && !this._isCrossAxisFitToContents) {\n            if (flexItem._hasRelCrossAxisSize()) {\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\n                flexItem._resetCrossAxisLayoutSize();\n            }\n        }\n\n        switch(align) {\n            case \"flex-start\":\n                this._alignItemFlexStart(flexItem);\n                break;\n            case \"flex-end\":\n                this._alignItemFlexEnd(flexItem);\n                break;\n            case \"center\":\n                this._alignItemFlexCenter(flexItem);\n                break;\n            case \"stretch\":\n                this._alignItemStretch(flexItem);\n                break;\n        }\n    }\n\n    _alignItemFlexStart(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n    }\n\n    _alignItemFlexEnd(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + (this._crossAxisLayoutSize - itemCrossAxisSize));\n    }\n\n    _alignItemFlexCenter(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        const center = (this._crossAxisLayoutSize - itemCrossAxisSize) / 2;\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + center);\n    }\n\n    _alignItemStretch(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n\n        const mainAxisLayoutSizeBeforeResize = flexItem._getMainAxisLayoutSize();\n        let size = this._crossAxisLayoutSize - flexItem._getCrossAxisMargin() - flexItem._getCrossAxisPadding();\n\n        const crossAxisMinSizeSetting = flexItem._getCrossAxisMinSizeSetting();\n        if (crossAxisMinSizeSetting > 0) {\n            size = Math.max(size, crossAxisMinSizeSetting);\n        }\n\n        const crossAxisMaxSizeSetting = flexItem._getCrossAxisMaxSizeSetting();\n        const crossAxisMaxSizeSettingEnabled = (crossAxisMaxSizeSetting > 0);\n        if (crossAxisMaxSizeSettingEnabled) {\n            size = Math.min(size, crossAxisMaxSizeSetting);\n        }\n\n        flexItem._resizeCrossAxis(size);\n        const mainAxisLayoutSizeAfterResize = flexItem._getMainAxisLayoutSize();\n\n        const recursiveResize = (mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize);\n        if (recursiveResize) {\n            // Recursive resize can happen when this flex item has the opposite direction than the container\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\n            // item may decrease. If it does so, we must re-justify-content the complete line.\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\n            // as slow layout or endless loops.\n            this._recursiveResizeOccured = true;\n        }\n    }\n\n    _preventStretch(flexItem) {\n        const hasFixedCrossAxisSize = flexItem._hasFixedCrossAxisSize();\n        const forceStretch = (flexItem.alignSelf === \"stretch\");\n        return hasFixedCrossAxisSize && !forceStretch;\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SizeShrinker from \"./SizeShrinker.mjs\";\nimport SizeGrower from \"./SizeGrower.mjs\";\nimport ItemPositioner from \"./ItemPositioner.mjs\";\nimport ItemAligner from \"./ItemAligner.mjs\";\n\nexport default class LineLayout {\n\n    constructor(layout, startIndex, endIndex, availableSpace) {\n        this._layout = layout;\n        this.items = layout.items;\n        this.startIndex = startIndex;\n        this.endIndex = endIndex;\n        this._availableSpace = availableSpace;\n    }\n\n    performLayout() {\n        this._setItemSizes();\n        this.setItemPositions();\n        this._calcLayoutInfo();\n    }\n\n    _setItemSizes() {\n        if (this._availableSpace > 0) {\n            this._growItemSizes(this._availableSpace);\n        } else if (this._availableSpace < 0) {\n            this._shrinkItemSizes(-this._availableSpace);\n        }\n    }\n\n    _growItemSizes(amount) {\n        const grower = new SizeGrower(this);\n        grower.grow(amount);\n        this._availableSpace -= grower.getGrownSize();\n    }\n\n    _shrinkItemSizes(amount) {\n        const shrinker = new SizeShrinker(this);\n        shrinker.shrink(amount);\n        this._availableSpace += shrinker.getShrunkSize();\n    }\n\n    setItemPositions() {\n        const positioner = new ItemPositioner(this);\n        positioner.position();\n    }\n\n    createItemAligner() {\n        return new ItemAligner(this);\n    }\n\n    _calcLayoutInfo() {\n        this._calcCrossAxisMaxLayoutSize();\n    }\n\n    getMainAxisMinSize() {\n        let mainAxisMinSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            mainAxisMinSize += item.flexItem._getMainAxisMinSizeWithPaddingAndMargin();\n        }\n        return mainAxisMinSize;\n    }\n    \n    get numberOfItems() {\n        return this.endIndex - this.startIndex + 1;\n    }\n\n    get crossAxisLayoutSize() {\n        const noSpecifiedCrossAxisSize = (this._layout.isCrossAxisFitToContents() && !this._layout.resizingCrossAxis);\n        const shouldFitToContents = (this._layout.isWrapping() || noSpecifiedCrossAxisSize);\n        if (shouldFitToContents) {\n            return this._crossAxisMaxLayoutSize;\n        } else {\n            return this._layout.crossAxisSize;\n        }\n    }\n\n    _calcCrossAxisMaxLayoutSize() {\n        this._crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\n    }\n\n    _getCrossAxisMaxLayoutSize() {\n        let crossAxisMaxSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin());\n        }\n        return crossAxisMaxSize;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport LineLayout from \"./line/LineLayout.mjs\";\n\n/**\n * Distributes items over layout lines.\n */\nexport default class LineLayouter {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    get lines() {\n        return this._lines;\n    }\n\n    get mainAxisMinSize() {\n        if (this._mainAxisMinSize === -1) {\n            this._mainAxisMinSize = this._getMainAxisMinSize();\n        }\n        return this._mainAxisMinSize;\n    }\n\n    get crossAxisMinSize() {\n        if (this._crossAxisMinSize === -1) {\n            this._crossAxisMinSize = this._getCrossAxisMinSize();\n        }\n        return this._crossAxisMinSize;\n    }\n\n    get mainAxisContentSize() {\n        return this._mainAxisContentSize;\n    }\n\n    layoutLines() {\n        this._setup();\n        const items = this._layout.items;\n        const wrap = this._layout.isWrapping();\n\n        let startIndex = 0;\n        let i;\n        const n = items.length;\n        for (i = 0; i < n; i++) {\n            const item = items[i];\n\n            this._layoutFlexItem(item);\n\n            // Get predicted main axis size.\n            const itemMainAxisSize = item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n\n            if (wrap && (i > startIndex)) {\n                const isOverflowing = (this._curMainAxisPos + itemMainAxisSize > this._mainAxisSize);\n                if (isOverflowing) {\n                    this._layoutLine(startIndex, i - 1);\n                    this._curMainAxisPos = 0;\n                    startIndex = i;\n                }\n            }\n\n            this._addToMainAxisPos(itemMainAxisSize);\n        }\n\n        if (startIndex < i) {\n            this._layoutLine(startIndex, i - 1);\n        }\n    }\n\n    _layoutFlexItem(item) {\n        if (item.isFlexEnabled()) {\n            item.flexLayout.updateTreeLayout();\n        } else {\n            item.flexItem._resetLayoutSize();\n        }\n    }\n\n    _setup() {\n        this._mainAxisSize = this._layout.mainAxisSize;\n        this._curMainAxisPos = 0;\n        this._maxMainAxisPos = 0;\n        this._lines = [];\n\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    _addToMainAxisPos(itemMainAxisSize) {\n        this._curMainAxisPos += itemMainAxisSize;\n        if (this._curMainAxisPos > this._maxMainAxisPos) {\n            this._maxMainAxisPos = this._curMainAxisPos;\n        }\n    }\n\n    _layoutLine(startIndex, endIndex) {\n        const availableSpace = this._getAvailableMainAxisLayoutSpace();\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\n        line.performLayout();\n        this._lines.push(line);\n\n        if (this._mainAxisContentSize === 0 || (this._curMainAxisPos > this._mainAxisContentSize)) {\n            this._mainAxisContentSize = this._curMainAxisPos;\n        }\n    }\n\n    _getAvailableMainAxisLayoutSpace() {\n        if (!this._layout.resizingMainAxis && this._layout.isMainAxisFitToContents()) {\n            return 0;\n        } else {\n            return this._mainAxisSize - this._curMainAxisPos;\n        }\n    }\n\n    _getCrossAxisMinSize() {\n        let crossAxisMinSize = 0;\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const itemCrossAxisMinSize = item.flexItem._getCrossAxisMinSizeWithPaddingAndMargin();\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\n        }\n        return crossAxisMinSize;\n    }\n\n    _getMainAxisMinSize() {\n        if (this._lines.length === 1) {\n            return this._lines[0].getMainAxisMinSize();\n        } else {\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\n            return this._layout.mainAxisSize;\n        }\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexUtils from \"../FlexUtils.mjs\";\n\nexport default class ItemCoordinatesUpdater {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._isReverse = this._flexContainer._reverse;\n        this._horizontalPaddingOffset = this._layout._getHorizontalPaddingOffset();\n        this._verticalPaddingOffset = this._layout._getVerticalPaddingOffset();\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    finalize() {\n        const parentFlex = this._layout.getParentFlexContainer();\n        if (parentFlex) {\n            // We must update it from the parent to set padding offsets and reverse position.\n            const updater = new ItemCoordinatesUpdater(parentFlex._layout);\n            updater._finalizeItemAndChildren(this._flexContainer.item);\n        } else {\n            this._finalizeRoot();\n            this._finalizeItems();\n        }\n    }\n\n    _finalizeRoot() {\n        const item = this._flexContainer.item;\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        w += this._layout._getHorizontalPadding();\n        h += this._layout._getVerticalPadding();\n\n        item.clearRecalcFlag();\n\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItems() {\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const validCache = this._validateItemCache(item);\n\n            // Notice that we must also finalize a cached items, as it's coordinates may have changed.\n            this._finalizeItem(item);\n\n            if (!validCache) {\n                this._finalizeItemChildren(item);\n            }\n        }\n    }\n\n    _validateItemCache(item) {\n        if (item.recalc === 0) {\n            if (item.isFlexEnabled()) {\n                const layout = item._flex._layout;\n\n                const dimensionsMatchPreviousResult = (item.w === item.target.w && item.h === item.target.h);\n                if (dimensionsMatchPreviousResult) {\n                    // Cache is valid.\n                    return true;\n                } else {\n                    const crossAxisSize = layout.crossAxisSize;\n                    layout.performResizeMainAxis(layout.mainAxisSize);\n                    layout.performResizeCrossAxis(crossAxisSize);\n                }\n            }\n        }\n        return false;\n    }\n\n    _finalizeItemAndChildren(item) {\n        this._finalizeItem(item);\n        this._finalizeItemChildren(item);\n    }\n\n    _finalizeItem(item) {\n        if (this._isReverse) {\n            this._reverseMainAxisLayoutPos(item);\n        }\n\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        x += this._horizontalPaddingOffset;\n        y += this._verticalPaddingOffset;\n\n        const flex = item.flex;\n        if (flex) {\n            w += item._flex._layout._getHorizontalPadding();\n            h += item._flex._layout._getVerticalPadding();\n        }\n\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            x += flexItem._getHorizontalMarginOffset();\n            y += flexItem._getVerticalMarginOffset();\n        }\n\n        item.clearRecalcFlag();\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItemChildren(item) {\n        const flex = item._flex;\n        if (flex) {\n            const updater = new ItemCoordinatesUpdater(flex._layout);\n            updater._finalizeItems();\n        }\n    }\n\n    _reverseMainAxisLayoutPos(item) {\n        const endPos = (item.flexItem._getMainAxisLayoutPos() + item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin());\n        const reversedPos = this._layout.mainAxisSize - endPos;\n        item.flexItem._setMainAxisLayoutPos(reversedPos);\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ContentAligner from \"./ContentAligner.mjs\";\nimport FlexUtils from \"../FlexUtils.mjs\";\nimport LineLayouter from \"./LineLayouter.mjs\";\nimport ItemCoordinatesUpdater from \"./ItemCoordinatesUpdater.mjs\";\n\n/**\n * Layouts a flex container (and descendants).\n */\nexport default class FlexLayout {\n\n    constructor(flexContainer) {\n        this._flexContainer = flexContainer;\n\n        this._lineLayouter = new LineLayouter(this);\n\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n\n        this._cachedMainAxisSizeAfterLayout = 0;\n        this._cachedCrossAxisSizeAfterLayout = 0;\n\n        this._shrunk = false;\n    }\n\n    get shrunk() {\n        return this._shrunk;\n    }\n\n    get recalc() {\n        return this.item.recalc;\n    }\n\n    layoutTree() {\n        const isSubTree = (this.item.flexParent !== null);\n        if (isSubTree) {\n            // Use the dimensions set by the parent flex tree.\n            this._updateSubTreeLayout();\n        } else {\n            this.updateTreeLayout();\n        }\n        this.updateItemCoords();\n    }\n\n    updateTreeLayout() {\n        if (this.recalc) {\n            this._performUpdateLayoutTree();\n        } else {\n            this._performUpdateLayoutTreeFromCache();\n        }\n    }\n\n    _performUpdateLayoutTree() {\n        this._setInitialAxisSizes();\n        this._layoutAxes();\n        this._refreshLayoutCache();\n    }\n\n    _refreshLayoutCache() {\n        this._cachedMainAxisSizeAfterLayout = this.mainAxisSize;\n        this._cachedCrossAxisSizeAfterLayout = this.crossAxisSize;\n    }\n\n    _performUpdateLayoutTreeFromCache() {\n        const sizeMightHaveChanged = (this.item.funcW || this.item.funcH);\n        if (sizeMightHaveChanged) {\n            // Update after all.\n            this.item.enableLocalRecalcFlag();\n            this._performUpdateLayoutTree();\n        } else {\n            this.mainAxisSize = this._cachedMainAxisSizeAfterLayout;\n            this.crossAxisSize = this._cachedCrossAxisSizeAfterLayout;\n        }\n    }\n\n    updateItemCoords() {\n        const updater = new ItemCoordinatesUpdater(this);\n        updater.finalize();\n    }\n\n    _updateSubTreeLayout() {\n        // The dimensions of this container are guaranteed not to have changed.\n        // That's why we can safely 'reuse' those and re-layout the contents.\n        const crossAxisSize = this.crossAxisSize;\n        this._layoutMainAxis();\n        this.performResizeCrossAxis(crossAxisSize);\n    }\n\n    _setInitialAxisSizes() {\n        if (this.item.isFlexItemEnabled()) {\n            this.item.flexItem._resetLayoutSize();\n        } else {\n            this.mainAxisSize = this._getMainAxisBasis();\n            this.crossAxisSize = this._getCrossAxisBasis();\n        }\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n        this._shrunk = false;\n    }\n\n    _layoutAxes() {\n        this._layoutMainAxis();\n        this._layoutCrossAxis();\n    }\n\n    /**\n     * @pre mainAxisSize should exclude padding.\n     */\n    _layoutMainAxis() {\n        this._layoutLines();\n        this._fitMainAxisSizeToContents();\n    }\n\n    _layoutLines() {\n        this._lineLayouter.layoutLines();\n    }\n\n    get _lines() {\n        return this._lineLayouter.lines;\n    }\n\n    _fitMainAxisSizeToContents() {\n        if (!this._resizingMainAxis) {\n            if (this.isMainAxisFitToContents()) {\n                this.mainAxisSize = this._lineLayouter.mainAxisContentSize;\n            }\n        }\n    }\n\n    /**\n     * @pre crossAxisSize should exclude padding.\n     */\n    _layoutCrossAxis() {\n        const aligner = new ContentAligner(this);\n        aligner.init();\n        this._totalCrossAxisSize = aligner.totalCrossAxisSize;\n        this._fitCrossAxisSizeToContents();\n        aligner.align();\n    }\n\n    _fitCrossAxisSizeToContents() {\n        if (!this._resizingCrossAxis) {\n            if (this.isCrossAxisFitToContents()) {\n                this.crossAxisSize = this._totalCrossAxisSize;\n            }\n        }\n    }\n\n    isWrapping() {\n        return this._flexContainer.wrap;\n    }\n\n    isAxisFitToContents(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this.isMainAxisFitToContents();\n        } else {\n            return this.isCrossAxisFitToContents();\n        }\n    }\n\n    isMainAxisFitToContents() {\n        return !this.isWrapping() && !this._hasFixedMainAxisBasis();\n    }\n\n    isCrossAxisFitToContents() {\n        return !this._hasFixedCrossAxisBasis();\n    }\n\n    _hasFixedMainAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, this._horizontal);\n    }\n\n    _hasFixedCrossAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this._horizontal);\n    }\n\n    getAxisMinSize(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this._getMainAxisMinSize();\n        } else {\n            return this._getCrossAxisMinSize();\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return this._lineLayouter.mainAxisMinSize;\n    }\n\n    _getCrossAxisMinSize() {\n        return this._lineLayouter.crossAxisMinSize;\n    }\n\n    resizeMainAxis(size) {\n        if (this.mainAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeMainAxis(size);\n            } else {\n                if (this._checkValidCacheMainAxisResize()) {\n                    this.mainAxisSize = size;\n                    this._fitCrossAxisSizeToContents();\n                } else {\n                    // Cache miss.\n                    this.item.enableLocalRecalcFlag();\n                    this.performResizeMainAxis(size);\n                }\n            }\n        }\n    }\n\n    _checkValidCacheMainAxisResize(size) {\n        const isFinalMainAxisSize = (size === this.targetMainAxisSize);\n        if (isFinalMainAxisSize) {\n            return true;\n        }\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\n        if (canIgnoreCacheMiss) {\n            // Allow other main axis resizes and check if final resize matches the target main axis size\n            //  (ItemCoordinatesUpdater).\n            return true;\n        }\n        return false;\n    }\n\n    performResizeMainAxis(size) {\n        const isShrinking = (size < this.mainAxisSize);\n        this._shrunk = isShrinking;\n\n        this.mainAxisSize = size;\n\n        this._resizingMainAxis = true;\n        this._layoutAxes();\n        this._resizingMainAxis = false;\n    }\n\n    resizeCrossAxis(size) {\n        if (this.crossAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeCrossAxis(size);\n            } else {\n                this.crossAxisSize = size;\n            }\n        }\n    }\n\n    performResizeCrossAxis(size) {\n        this.crossAxisSize = size;\n\n        this._resizingCrossAxis = true;\n        this._layoutCrossAxis();\n        this._resizingCrossAxis = false;\n    }\n\n    get targetMainAxisSize() {\n        return this._horizontal ? this.item.target.w : this.item.target.h;\n    }\n\n    get targetCrossAxisSize() {\n        return this._horizontal ? this.item.target.h : this.item.target.w;\n    }\n\n    getParentFlexContainer() {\n        return this.item.isFlexItemEnabled() ? this.item.flexItem.ctr : null;\n    }\n\n    _getHorizontalPadding() {\n        return FlexUtils.getTotalPadding(this.item, true);\n    }\n\n    _getVerticalPadding() {\n        return FlexUtils.getTotalPadding(this.item, false);\n    }\n\n    _getHorizontalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, true);\n    }\n\n    _getVerticalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, false);\n    }\n\n    _getMainAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, this._horizontal);\n    }\n\n    _getCrossAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, !this._horizontal);\n    }\n\n    get _horizontal() {\n        return this._flexContainer._horizontal;\n    }\n\n    get _reverse() {\n        return this._flexContainer._reverse;\n    }\n\n    get item() {\n        return this._flexContainer.item;\n    }\n\n    get items() {\n        return this.item.items;\n    }\n\n    get resizingMainAxis() {\n        return this._resizingMainAxis;\n    }\n\n    get resizingCrossAxis() {\n        return this._resizingCrossAxis;\n    }\n\n    get numberOfItems() {\n        return this.items.length;\n    }\n\n    get mainAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this._horizontal);\n    }\n\n    get crossAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this._horizontal);\n    }\n\n    set mainAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, this._horizontal, v);\n    }\n\n    set crossAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, !this._horizontal, v);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport Layout from \"./layout/FlexLayout.mjs\";\n\nexport default class FlexContainer {\n\n\n    constructor(item) {\n        this._item = item;\n\n        this._layout = new Layout(this);\n        this._horizontal = true;\n        this._reverse = false;\n        this._wrap = false;\n        this._alignItems = 'stretch';\n        this._justifyContent = 'flex-start';\n        this._alignContent = 'flex-start';\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    _changedDimensions() {\n        this._item.changedDimensions();\n    }\n\n    _changedContents() {\n        this._item.changedContents();\n    }\n\n    get direction() {\n        return (this._horizontal ? \"row\" : \"column\") + (this._reverse ? \"-reverse\" : \"\");\n    }\n\n    set direction(f) {\n        if (this.direction === f) return;\n\n        this._horizontal = (f === 'row' || f === 'row-reverse');\n        this._reverse = (f === 'row-reverse' || f === 'column-reverse');\n\n        this._changedContents();\n    }\n\n    set wrap(v) {\n        this._wrap = v;\n        this._changedContents();\n    }\n\n    get wrap() {\n        return this._wrap;\n    }\n\n    get alignItems() {\n        return this._alignItems;\n    }\n\n    set alignItems(v) {\n        if (this._alignItems === v) return;\n        if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignItems, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n        }\n        this._alignItems = v;\n\n        this._changedContents();\n    }\n\n    get alignContent() {\n        return this._alignContent;\n    }\n\n    set alignContent(v) {\n        if (this._alignContent === v) return;\n        if (FlexContainer.ALIGN_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignContent, options: \" + FlexContainer.ALIGN_CONTENT.join(\",\"));\n        }\n        this._alignContent = v;\n\n        this._changedContents();\n    }\n\n    get justifyContent() {\n        return this._justifyContent;\n    }\n\n    set justifyContent(v) {\n        if (this._justifyContent === v) return;\n\n        if (FlexContainer.JUSTIFY_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown justifyContent, options: \" + FlexContainer.JUSTIFY_CONTENT.join(\",\"));\n        }\n        this._justifyContent = v;\n\n        this._changedContents();\n    }\n\n    set padding(v) {\n        this.paddingLeft = v;\n        this.paddingTop = v;\n        this.paddingRight = v;\n        this.paddingBottom = v;\n    }\n\n    get padding() {\n        return this.paddingLeft;\n    }\n    \n    set paddingLeft(v) {\n        this._paddingLeft = v;\n        this._changedDimensions();\n    }\n    \n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingTop(v) {\n        this._paddingTop = v;\n        this._changedDimensions();\n    }\n\n    get paddingTop() {\n        return this._paddingTop;\n    }\n\n    set paddingRight(v) {\n        this._paddingRight = v;\n        this._changedDimensions();\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingBottom(v) {\n        this._paddingBottom = v;\n        this._changedDimensions();\n    }\n\n    get paddingBottom() {\n        return this._paddingBottom;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nFlexContainer.ALIGN_ITEMS = [\"flex-start\", \"flex-end\", \"center\", \"stretch\"];\nFlexContainer.ALIGN_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\", \"stretch\"];\nFlexContainer.JUSTIFY_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"];\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\nimport FlexContainer from \"./FlexContainer.mjs\";\n\nexport default class FlexItem {\n\n    constructor(item) {\n        this._ctr = null;\n        this._item = item;\n        this._grow = 0;\n        this._shrink = FlexItem.SHRINK_AUTO;\n        this._alignSelf = undefined;\n        this._minWidth = 0;\n        this._minHeight = 0;\n        this._maxWidth = 0;\n        this._maxHeight = 0;\n\n        this._marginLeft = 0;\n        this._marginTop = 0;\n        this._marginRight = 0;\n        this._marginBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    get grow() {\n        return this._grow;\n    }\n\n    set grow(v) {\n        if (this._grow === v) return;\n\n        this._grow = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get shrink() {\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\n            return this._getDefaultShrink();\n        }\n        return this._shrink;\n    }\n\n    _getDefaultShrink() {\n        if (this.item.isFlexEnabled()) {\n            return 1;\n        } else {\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\n            return 0;\n        }\n    }\n\n    set shrink(v) {\n        if (this._shrink === v) return;\n\n        this._shrink = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get alignSelf() {\n        return this._alignSelf;\n    }\n\n    set alignSelf(v) {\n        if (this._alignSelf === v) return;\n\n        if (v === undefined) {\n            this._alignSelf = undefined;\n        } else {\n            if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n                throw new Error(\"Unknown alignSelf, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n            }\n            this._alignSelf = v;\n        }\n\n        this._changed();\n    }\n\n    get minWidth() {\n        return this._minWidth;\n    }\n\n    set minWidth(v) {\n        this._minWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get minHeight() {\n        return this._minHeight;\n    }\n\n    set minHeight(v) {\n        this._minHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    get maxWidth() {\n        return this._maxWidth;\n    }\n\n    set maxWidth(v) {\n        this._maxWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get maxHeight() {\n        return this._maxHeight;\n    }\n\n    set maxHeight(v) {\n        this._maxHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    /**\n     * @note margins behave slightly different than in HTML with regard to shrinking.\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\n     */\n    set margin(v) {\n        this.marginLeft = v;\n        this.marginTop = v;\n        this.marginRight = v;\n        this.marginBottom = v;\n    }\n\n    get margin() {\n        return this.marginLeft;\n    }\n\n    set marginLeft(v) {\n        this._marginLeft = v;\n        this._changed();\n    }\n\n    get marginLeft() {\n        return this._marginLeft;\n    }\n\n    set marginTop(v) {\n        this._marginTop = v;\n        this._changed();\n    }\n\n    get marginTop() {\n        return this._marginTop;\n    }\n\n    set marginRight(v) {\n        this._marginRight = v;\n        this._changed();\n    }\n\n    get marginRight() {\n        return this._marginRight;\n    }\n\n    set marginBottom(v) {\n        this._marginBottom = v;\n        this._changed();\n    }\n\n    get marginBottom() {\n        return this._marginBottom;\n    }\n    \n    _changed() {\n        if (this.ctr) this.ctr._changedContents();\n    }\n\n    set ctr(v) {\n        this._ctr = v;\n    }\n\n    get ctr() {\n        return this._ctr;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    _resetLayoutSize() {\n        this._resetHorizontalAxisLayoutSize();\n        this._resetVerticalAxisLayoutSize();\n    }\n\n    _resetCrossAxisLayoutSize() {\n        if (this.ctr._horizontal) {\n            this._resetVerticalAxisLayoutSize();\n        } else {\n            this._resetHorizontalAxisLayoutSize();\n        }\n    }\n\n    _resetHorizontalAxisLayoutSize() {\n        let w = FlexUtils.getRelAxisSize(this.item, true);\n        if (this._minWidth) {\n            w = Math.max(this._minWidth, w);\n        }\n        if (this._maxWidth) {\n            w = Math.min(this._maxWidth, w);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, true, w);\n    }\n\n    _resetVerticalAxisLayoutSize() {\n        let h = FlexUtils.getRelAxisSize(this.item, false);\n        if (this._minHeight) {\n            h = Math.max(this._minHeight, h);\n        }\n        if (this._maxHeight) {\n            h = Math.min(this._maxHeight, h);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, false, h);\n    }\n\n    _getCrossAxisMinSizeSetting() {\n        return this._getMinSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getCrossAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getMainAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(this.ctr._horizontal);\n    }\n\n    _getMinSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._minWidth;\n        } else {\n            return this._minHeight;\n        }\n    }\n\n    _getMaxSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._maxWidth;\n        } else {\n            return this._maxHeight;\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutPos() {\n        return FlexUtils.getAxisLayoutPos(this.item, this.ctr._horizontal);\n    }\n\n    _setMainAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, this.ctr._horizontal, pos);\n    }\n\n    _setCrossAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, !this.ctr._horizontal, pos);\n    }\n\n    _getCrossAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this.ctr._horizontal);\n    }\n\n    _resizeCrossAxis(size) {\n        return FlexUtils.resizeAxis(this.item, !this.ctr._horizontal, size);\n    }\n\n    _resizeMainAxis(size) {\n        return FlexUtils.resizeAxis(this.item, this.ctr._horizontal, size);\n    }\n\n    _getMainAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, !this.ctr._horizontal);\n    }\n\n    _getHorizontalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, true);\n    }\n\n    _getVerticalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, false);\n    }\n\n    _getMainAxisMinSizeWithPaddingAndMargin() {\n        return this._getMainAxisMinSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisMinSizeWithPaddingAndMargin() {\n        return this._getCrossAxisMinSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _getMainAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getMainAxisLayoutSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getCrossAxisLayoutSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _hasFixedCrossAxisSize() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this.ctr._horizontal);\n    }\n\n    _hasRelCrossAxisSize() {\n        return !!(this.ctr._horizontal ? this.item.funcH : this.item.funcW);\n    }\n\n}\n\n\nFlexItem.SHRINK_AUTO = -1;","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexContainer from \"./FlexContainer.mjs\";\nimport FlexItem from \"./FlexItem.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\n\n/**\n * This is the connection between the render tree with the layout tree of this flex container/item.\n */\nexport default class FlexTarget {\n\n    constructor(target) {\n        this._target = target;\n\n        /**\n         * Possible values (only in case of container):\n         * bit 0: has changed or contains items with changes\n         * bit 1: width changed\n         * bit 2: height changed\n         */\n        this._recalc = 0;\n        \n        this._enabled = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.w = 0;\n        this.h = 0;\n\n        this._originalX = 0;\n        this._originalY = 0;\n        this._originalWidth = 0;\n        this._originalHeight = 0;\n\n        this._flex = null;\n        this._flexItem = null;\n        this._flexItemDisabled = false;\n\n        this._items = null;\n    }\n\n    get flexLayout() {\n        return this.flex ? this.flex._layout : null;\n    }\n\n    layoutFlexTree() {\n        if (this.isFlexEnabled() && this.isChanged()) {\n            this.flexLayout.layoutTree();\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    get flex() {\n        return this._flex;\n    }\n\n    set flex(v) {\n        if (!v) {\n            if (this.isFlexEnabled()) {\n                this._disableFlex();\n            }\n        } else {\n            if (!this.isFlexEnabled()) {\n                this._enableFlex();\n            }\n            this._flex.patch(v);\n        }\n    }\n\n    get flexItem() {\n        if (this._flexItemDisabled) {\n            return false;\n        }\n        this._ensureFlexItem();\n        return this._flexItem;\n    }\n\n    set flexItem(v) {\n        if (v === false) {\n            if (!this._flexItemDisabled) {\n                const parent = this.flexParent;\n                this._flexItemDisabled = true;\n                this._checkEnabled();\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        } else {\n            this._ensureFlexItem();\n\n            this._flexItem.patch(v);\n\n            if (this._flexItemDisabled) {\n                this._flexItemDisabled = false;\n                this._checkEnabled();\n                const parent = this.flexParent;\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        }\n    }\n\n    _enableFlex() {\n        this._flex = new FlexContainer(this);\n        this._checkEnabled();\n        this.changedDimensions();\n        this._enableChildrenAsFlexItems();\n    }\n\n    _disableFlex() {\n        this.changedDimensions();\n        this._flex = null;\n        this._checkEnabled();\n        this._disableChildrenAsFlexItems();\n    }\n\n    _enableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._enableFlexItem();\n            }\n        }\n    }\n\n    _disableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._disableFlexItem();\n            }\n        }\n    }\n\n    _enableFlexItem() {\n        this._ensureFlexItem();\n        const flexParent = this._target._parent._layout;\n        this._flexItem.ctr = flexParent._flex;\n        flexParent.changedContents();\n        this._checkEnabled();\n    }\n\n    _disableFlexItem() {\n        if (this._flexItem) {\n            this._flexItem.ctr = null;\n        }\n\n        // We keep the flexItem object because it may contain custom settings.\n        this._checkEnabled();\n\n        // Offsets have been changed. We can't recover them, so we'll just clear them instead.\n        this._resetOffsets();\n    }\n\n    _resetOffsets() {\n        this.x = 0;\n        this.y = 0;\n    }\n\n    _ensureFlexItem() {\n        if (!this._flexItem) {\n            this._flexItem = new FlexItem(this);\n        }\n    }\n\n    _checkEnabled() {\n        const enabled = this.isEnabled();\n        if (this._enabled !== enabled) {\n            if (enabled) {\n                this._enable();\n            } else {\n                this._disable();\n            }\n            this._enabled = enabled;\n        }\n    }\n    \n    _enable() {\n        this._setupTargetForFlex();\n        this._target.enableFlexLayout();\n    }\n\n    _disable() {\n        this._restoreTargetToNonFlex();\n        this._target.disableFlexLayout();\n    }\n\n    isEnabled() {\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\n    }\n\n    isFlexEnabled() {\n        return this._flex !== null;\n    }\n\n    isFlexItemEnabled() {\n        return this.flexParent !== null;\n    }\n\n    _restoreTargetToNonFlex() {\n        const target = this._target;\n        target.x = this._originalX;\n        target.y = this._originalY;\n        target.setDimensions(this._originalWidth, this._originalHeight);\n    }\n\n    _setupTargetForFlex() {\n        const target = this._target;\n        this._originalX = target._x;\n        this._originalY = target._y;\n        this._originalWidth = target._w;\n        this._originalHeight = target._h;\n    }\n    \n    setParent(from, to) {\n        if (from && from.isFlexContainer()) {\n            from._layout._changedChildren();\n        }\n\n        if (to && to.isFlexContainer()) {\n            this._enableFlexItem();\n            to._layout._changedChildren();\n        }\n        this._checkEnabled();\n    }\n\n    get flexParent() {\n        if (this._flexItemDisabled) {\n            return null;\n        }\n\n        const parent = this._target._parent;\n        if (parent && parent.isFlexContainer()) {\n            return parent._layout;\n        }\n        return null;\n    }\n\n    setVisible(v) {\n        const parent = this.flexParent;\n        if (parent) {\n            parent._changedChildren();\n        }\n    }\n\n    get items() {\n        if (!this._items) {\n            this._items = this._getFlexItems();\n        }\n        return this._items;\n    }\n\n    _getFlexItems() {\n        const items = [];\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const item = children[i];\n                if (item.visible) {\n                    if (item.isFlexItem()) {\n                        items.push(item.layout);\n                    }\n                }\n            }\n        }\n        return items;\n    }\n\n    _changedChildren() {\n        this._clearFlexItemsCache();\n        this.changedContents();\n    }\n\n    _clearFlexItemsCache() {\n        this._items = null;\n    }\n\n    setLayout(x, y, w, h) {\n        let originalX = this._originalX;\n        let originalY = this._originalY;\n        if (this.funcX) {\n            originalX = this.funcX(FlexUtils.getParentAxisSizeWithPadding(this, true));\n        }\n        if (this.funcY) {\n            originalY = this.funcY(FlexUtils.getParentAxisSizeWithPadding(this, false));\n        }\n\n        if (this.isFlexItemEnabled()) {\n            this.target.setLayout(x + originalX, y + originalY, w, h);\n        } else {\n            // Reuse the x,y 'settings'.\n            this.target.setLayout(originalX, originalY, w, h);\n        }\n    }\n\n    changedDimensions(changeWidth = true, changeHeight = true) {\n        this._updateRecalc(changeWidth, changeHeight);\n    }\n\n    changedContents() {\n        this._updateRecalc();\n    }\n\n    forceLayout() {\n        this._updateRecalc();\n    }\n\n    isChanged() {\n        return this._recalc > 0;\n    }\n\n    _updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\n        if (this.isFlexEnabled()) {\n            const layout = this._flex._layout;\n\n            // When something internal changes, it can have effect on the external dimensions.\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\n        }\n\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\n        this._recalc |= recalc;\n        if (newRecalcFlags > 1) {\n            if (this.flexParent) {\n                this.flexParent._updateRecalcBottomUp(recalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    getNewRecalcFlags(flags) {\n        return (7 - this._recalc) & flags;\n    }\n\n    _updateRecalcBottomUp(childRecalc) {\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\n        this._recalc |= newRecalc;\n        if (newRecalcFlags > 1) {\n            const flexParent = this.flexParent;\n            if (flexParent) {\n                flexParent._updateRecalcBottomUp(newRecalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    _getRecalcFromChangedChildRecalc(childRecalc) {\n        const layout = this._flex._layout;\n\n        const mainAxisRecalcFlag = layout._horizontal ? 1 : 2;\n        const crossAxisRecalcFlag = layout._horizontal ? 2 : 1;\n\n        const crossAxisDimensionsChangedInChild = (childRecalc & crossAxisRecalcFlag);\n        if (!crossAxisDimensionsChangedInChild) {\n            const mainAxisDimensionsChangedInChild = (childRecalc & mainAxisRecalcFlag);\n            if (mainAxisDimensionsChangedInChild) {\n                const mainAxisIsWrapping = layout.isWrapping();\n                if (mainAxisIsWrapping) {\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\n                    if (crossAxisIsFitToContents) {\n                        // Special case: due to wrapping, the cross axis size may be changed.\n                        childRecalc += crossAxisRecalcFlag;\n                    }\n                }\n            }\n        }\n\n        let isWidthDynamic = layout.isAxisFitToContents(true);\n        let isHeightDynamic = layout.isAxisFitToContents(false);\n\n        if (layout.shrunk) {\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\n            if (layout._horizontal) {\n                isWidthDynamic = true;\n            } else {\n                isHeightDynamic = true;\n            }\n        }\n\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\n\n        const combinedRecalc = childRecalc & localRecalc;\n        return combinedRecalc;\n    }\n\n    get recalc() {\n        return this._recalc;\n    }\n\n    clearRecalcFlag() {\n        this._recalc = 0;\n    }\n\n    enableLocalRecalcFlag() {\n        this._recalc = 1;\n    }\n\n    get originalX() {\n        return this._originalX;\n    }\n\n    setOriginalXWithoutUpdatingLayout(v) {\n        this._originalX = v;\n    }\n\n    get originalY() {\n        return this._originalY;\n    }\n\n    setOriginalYWithoutUpdatingLayout(v) {\n        this._originalY = v;\n    }\n\n    get originalWidth() {\n        return this._originalWidth;\n    }\n\n    set originalWidth(v) {\n        if (this._originalWidth !== v) {\n            this._originalWidth = v;\n            this.changedDimensions(true, false);\n        }\n    }\n\n    get originalHeight() {\n        return this._originalHeight;\n    }\n\n    set originalHeight(v) {\n        if (this._originalHeight !== v) {\n            this._originalHeight = v;\n            this.changedDimensions(false, true);\n        }\n    }\n\n    get funcX() {\n        return this._target.funcX;\n    }\n\n    get funcY() {\n        return this._target.funcY;\n    }\n\n    get funcW() {\n        return this._target.funcW;\n    }\n\n    get funcH() {\n        return this._target.funcH;\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TextureSource {\n\n    constructor(manager, loader = null) {\n        this.id = TextureSource.id++;\n\n        this.manager = manager;\n\n        this.stage = manager.stage;\n\n        /**\n         * All enabled textures (textures that are used by visible elements).\n         * @type {Set<Texture>}\n         */\n        this.textures = new Set();\n\n        /**\n         * The number of active textures (textures that have at least one active element).\n         * @type {number}\n         * @private\n         */\n        this._activeTextureCount = 0;\n\n        /**\n         * The factory for the source of this texture.\n         * @type {Function}\n         */\n        this.loader = loader;\n\n        /**\n         * Identifier for reuse.\n         * @type {String}\n         */\n        this.lookupId = null;\n\n        /**\n         * If set, this.is called when the texture source is no longer displayed (this.components.size becomes 0).\n         * @type {Function}\n         */\n        this._cancelCb = null;\n\n        /**\n         * Loading since timestamp in millis.\n         * @type {number}\n         */\n        this.loadingSince = 0;\n\n        this.w = 0;\n        this.h = 0;\n\n        this._nativeTexture = null;\n\n        /**\n         * If true, then this.texture source is never freed from memory during garbage collection.\n         * @type {boolean}\n         */\n        this.permanent = false;\n\n        /**\n         * Sub-object with texture-specific rendering information.\n         * For images, contains the src property, for texts, contains handy rendering information.\n         * @type {Object}\n         */\n        this.renderInfo = null;\n\n        /**\n         * Generated for 'renderToTexture'.\n         * @type {boolean}\n         * @private\n         */\n        this._isResultTexture = !this.loader;\n\n        /**\n         * Contains the load error, if the texture source could previously not be loaded.\n         * @type {object}\n         * @private\n         */\n        this._loadError = null;\n\n        /**\n         *  Hold a reference to the javascript variable which contains the texture, this is not required for WebGL in WebBrowsers but is required for Spark runtime.\n         * @type {object}\n         * @private\n         */\n        this._imageRef = null;\n\n    }\n\n    get loadError() {\n        return this._loadError;\n    }\n\n    addTexture(v) {\n        if (!this.textures.has(v)) {\n            this.textures.add(v);\n        }\n    }\n\n    removeTexture(v) {\n        this.textures.delete(v);\n    }\n\n    incActiveTextureCount() {\n        this._activeTextureCount++;\n        if (this._activeTextureCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveTextureCount() {\n        this._activeTextureCount--;\n        if (this._activeTextureCount === 0) {\n            this.becomesUnused();\n        }\n    }\n\n    get isResultTexture() {\n        return this._isResultTexture;\n    }\n\n    set isResultTexture(v) {\n        this._isResultTexture = v;\n    }\n\n    forEachEnabledElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(cb);\n        });\n    }\n\n    hasEnabledElements() {\n        return this.textures.size > 0;\n    }\n\n    forEachActiveElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(element => {\n                if (element.active) {\n                    cb(element);\n                }\n            });\n        });\n    }\n\n    getRenderWidth() {\n        return this.w;\n    }\n\n    getRenderHeight() {\n        return this.h;\n    }\n\n    allowCleanup() {\n        return !this.permanent && !this.isUsed();\n    }\n\n    becomesUsed() {\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\n        this.load();\n    }\n\n    becomesUnused() {\n        this.cancel();\n    }\n\n    cancel() {\n        if (this.isLoading()) {\n            if (this._cancelCb) {\n                this._cancelCb(this);\n\n                // Clear callback to avoid memory leaks.\n                this._cancelCb = null;\n            }\n            this.loadingSince = 0;\n        }\n    }\n\n    isLoaded() {\n        return !!this._nativeTexture;\n    }\n\n    isLoading() {\n        return (this.loadingSince > 0);\n    }\n\n    isError() {\n        return !!this._loadError;\n    }\n\n    reload() {\n        this.free();\n        if (this.isUsed()) {\n            this.load();\n        }\n    }\n\n    load(forceSync = false) {\n        // From the moment of loading (when a texture source becomes used by active elements)\n        if (this.isResultTexture) {\n            // Element result texture source, for which the loading is managed by the core.\n            return;\n        }\n\n        if (!this._nativeTexture && !this.isLoading()) {\n            this.loadingSince = (new Date()).getTime();\n            this._cancelCb = this.loader((err, options) => {\n                // Ignore loads that come in after a cancel.\n                if (this.isLoading()) {\n                    // Clear callback to avoid memory leaks.\n                    this._cancelCb = null;\n\n                    if (this.manager.stage.destroyed) {\n                        // Ignore async load when stage is destroyed.\n                        return;\n                    }\n                    if (err) {\n                        // Emit txError.\n                        this.onError(err);\n                    } else if (options && options.source) {\n                        if (!this.stage.isUpdatingFrame() && !forceSync && (options.throttle !== false)) {\n                            const textureThrottler = this.stage.textureThrottler;\n                            this._cancelCb = textureThrottler.genericCancelCb;\n                            textureThrottler.add(this, options);\n                        } else {\n                            this.processLoadedSource(options);\n                        }\n                    }\n                }\n            }, this);\n        }\n    }\n\n    processLoadedSource(options) {\n        this.loadingSince = 0;\n        this.setSource(options);\n    }\n\n    setSource(options) {\n        const source = options.source;\n\n        this.w = source.width || (options && options.w) || 0;\n        this.h = source.height || (options && options.h) || 0;\n\n        if (options && options.renderInfo) {\n            // Assign to id in cache so that it can be reused.\n            this.renderInfo = options.renderInfo;\n        }\n\n        this.permanent = !!options.permanent;\n\n        if (options && options.imageRef)\n            this._imageRef = options.imageRef;\n        if (options && options.flipTextureY) {\n            this._flipTextureY = options.flipTextureY;\n        } else {\n            this._flipTextureY = false;\n        }\n\n        if (this._isNativeTexture(source)) {\n            // Texture managed by caller.\n            this._nativeTexture = source;\n\n            this.w = this.w || source.w;\n            this.h = this.h || source.h;\n\n            // WebGLTexture objects are by default;\n            this.permanent = options.hasOwnProperty('permanent') ? options.permanent : true;\n        } else {\n            this.manager.uploadTextureSource(this, options);\n        }\n\n        // Must be cleared when reload is succesful.\n        this._loadError = null;\n\n        this.onLoad();\n    }\n\n    isUsed() {\n        return this._activeTextureCount > 0;\n    }\n\n    onLoad() {\n        if (this.isUsed()) {\n            this.textures.forEach(texture => {\n                texture.onLoad();\n            });\n        }\n    }\n\n    forceRenderUpdate() {\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\n        //  (using tex[Sub]Image2d for example).\n\n        if (this._nativeTexture) {\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\n            this._nativeTexture.update = this.stage.frameCounter;\n        }\n\n        this.forEachActiveElement(function (element) {\n            element.forceRenderUpdate();\n        });\n\n    }\n\n    forceUpdateRenderCoords() {\n        this.forEachActiveElement(function (element) {\n            element._updateTextureCoords();\n        });\n    }\n\n    get nativeTexture() {\n        return this._nativeTexture;\n    }\n\n    clearNativeTexture() {\n        this._nativeTexture = null;\n        //also clear the reference to the texture variable.\n        this._imageRef = null;\n    }\n\n    /**\n     * Used for result textures.\n     */\n    replaceNativeTexture(newNativeTexture, w, h) {\n        let prevNativeTexture = this._nativeTexture;\n        // Loaded by core.\n        this._nativeTexture = newNativeTexture;\n        this.w = w;\n        this.h = h;\n\n        if (!prevNativeTexture && this._nativeTexture) {\n            this.forEachActiveElement(element => element.onTextureSourceLoaded());\n        }\n\n        if (!this._nativeTexture) {\n            this.forEachActiveElement(element => element._setDisplayedTexture(null));\n        }\n\n        // Dimensions must be updated also on enabled elements, as it may force it to go within bounds.\n        this.forEachEnabledElement(element => element._updateDimensions());\n\n        // Notice that the sprite map must never contain render textures.\n    }\n\n    onError(e) {\n        this._loadError = e;\n        this.loadingSince = 0;\n        console.error('texture load error', e, this.lookupId);\n        this.forEachActiveElement(element => element.onTextureSourceLoadError(e));\n    }\n\n    free() {\n        if (this.isLoaded()) {\n            this.manager.freeTextureSource(this);\n        }\n    }\n\n    _isNativeTexture(source) {\n        if (Utils.isNode) {\n            return source.constructor.name === \"WebGLTexture\";\n        }\n\n        if ('WebGLTexture' in window) {\n            return source instanceof WebGLTexture;\n        }\n\n        return false;\n    }\n\n}\n\nTextureSource.prototype.isTextureSource = true;\n\nTextureSource.id = 1;\n\nimport Utils from \"./Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from '../TextureSource.mjs';\n\nexport default class ElementTexturizer {\n\n    constructor(elementCore) {\n\n        this._element = elementCore.element;\n        this._core = elementCore;\n\n        this.ctx = this._core.ctx;\n\n        this._enabled = false;\n        this.lazy = false;\n        this._colorize = false;\n\n        this._renderTexture = null;\n\n        this._renderTextureReused = false;\n\n        this._resultTextureSource = null;\n\n        this._renderOffscreen = false;\n\n        this.empty = false;\n    }\n\n    get enabled() {\n        return this._enabled;\n    }\n\n    set enabled(v) {\n        this._enabled = v;\n        this._core.updateRenderToTextureEnabled();\n    }\n\n    get renderOffscreen() {\n        return this._renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this._renderOffscreen = v;\n        this._core.setHasRenderUpdates(1);\n\n        // This enforces rechecking the 'within bounds'.\n        this._core._setRecalc(6);\n    }\n\n    get colorize() {\n        return this._colorize;\n    }\n\n    set colorize(v) {\n        if (this._colorize !== v) {\n            this._colorize = v;\n\n            // Only affects the finally drawn quad.\n            this._core.setHasRenderUpdates(1);\n        }\n    }\n\n    _getTextureSource() {\n        if (!this._resultTextureSource) {\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\n            this.updateResultTexture();\n        }\n        return this._resultTextureSource;\n    }\n\n    hasResultTexture() {\n        return !!this._resultTextureSource;\n    }\n\n    resultTextureInUse() {\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\n    }\n\n    updateResultTexture() {\n        let resultTexture = this.getResultTexture();\n        if (this._resultTextureSource) {\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\n                let w = resultTexture ? resultTexture.w : 0;\n                let h = resultTexture ? resultTexture.h : 0;\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\n            }\n\n            // Texture will be updated: all elements using the source need to be updated as well.\n            this._resultTextureSource.forEachEnabledElement(element => {\n                element._updateDimensions();\n                element.core.setHasRenderUpdates(3);\n            });\n        }\n    }\n\n    mustRenderToTexture() {\n        // Check if we must really render as texture.\n        if (this._enabled && !this.lazy) {\n            return true;\n        } else if (this._enabled && this.lazy && this._core._hasRenderUpdates < 3) {\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\n            return true;\n        }\n        return false;\n    }\n\n    deactivate() {\n        this.release();\n    }\n\n    get renderTextureReused() {\n        return this._renderTextureReused;\n    }\n\n    release() {\n        this.releaseRenderTexture();\n    }\n\n    releaseRenderTexture() {\n        if (this._renderTexture) {\n            if (!this._renderTextureReused) {\n                this.ctx.releaseRenderTexture(this._renderTexture);\n            }\n            this._renderTexture = null;\n            this._renderTextureReused = false;\n            this.updateResultTexture();\n        }\n    }\n\n    // Reuses the specified texture as the render texture (in ancestor).\n    reuseTextureAsRenderTexture(nativeTexture) {\n        if (this._renderTexture !== nativeTexture) {\n            this.releaseRenderTexture();\n            this._renderTexture = nativeTexture;\n            this._renderTextureReused = true;\n        }\n    }\n\n    hasRenderTexture() {\n        return !!this._renderTexture;\n    }\n\n    getRenderTexture() {\n        if (!this._renderTexture) {\n            this._renderTexture = this.ctx.allocateRenderTexture(this._core._w, this._core._h);\n            this._renderTextureReused = false;\n        }\n        return this._renderTexture;\n    }\n\n    getResultTexture() {\n        return this._renderTexture;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexTarget from \"../../flex/FlexTarget.mjs\";\n\nexport default class ElementCore {\n\n    constructor(element) {\n        this._element = element;\n\n        this.ctx = element.stage.ctx;\n\n        // The memory layout of the internal variables is affected by their position in the constructor.\n        // It boosts performance to order them by usage of cpu-heavy functions (renderSimple and update).\n\n        this._recalc = 0;\n\n        this._parent = null;\n\n        this._onUpdate = null;\n\n        this._pRecalc = 0;\n\n        this._worldContext = new ElementCoreContext();\n\n        this._hasUpdates = false;\n\n        this._localAlpha = 1;\n\n        this._onAfterCalcs = null;\n\n        this._onAfterUpdate = null;\n\n        // All local translation/transform updates: directly propagated from x/y/w/h/scale/whatever.\n        this._localPx = 0;\n        this._localPy = 0;\n\n        this._localTa = 1;\n        this._localTb = 0;\n        this._localTc = 0;\n        this._localTd = 1;\n\n        this._isComplex = false;\n\n        this._dimsUnknown = false;\n\n        this._clipping = false;\n\n        // Used by both update and render.\n        this._zSort = false;\n\n        this._outOfBounds = 0;\n\n        /**\n         * The texture source to be displayed.\n         * @type {TextureSource}\n         */\n        this._displayedTextureSource = null;\n\n        this._zContextUsage = 0;\n\n        this._children = null;\n\n        this._hasRenderUpdates = 0;\n\n        this._zIndexedChildren = null;\n\n        this._renderContext = this._worldContext;\n\n        this.renderState = this.ctx.renderState;\n\n        this._scissor = null;\n\n        // The ancestor ElementCore that owns the inherited shader. Null if none is active (default shader).\n        this._shaderOwner = null;\n\n\n        this._updateTreeOrder = 0;\n\n        this._colorUl = this._colorUr = this._colorBl = this._colorBr = 0xFFFFFFFF;\n\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n\n        this._optFlags = 0;\n        this._funcX = null;\n        this._funcY = null;\n        this._funcW = null;\n        this._funcH = null;\n\n        this._scaleX = 1;\n        this._scaleY = 1;\n        this._pivotX = 0.5;\n        this._pivotY = 0.5;\n        this._mountX = 0;\n        this._mountY = 0;\n        this._rotation = 0;\n\n        this._alpha = 1;\n        this._visible = true;\n\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n\n        this._zIndex = 0;\n        this._forceZIndexContext = false;\n        this._zParent = null;\n\n        this._isRoot = false;\n\n        /**\n         * Iff true, during zSort, this element should be 're-sorted' because either:\n         * - zIndex did chang\n         * - zParent did change\n         * - element was moved in the render tree\n         * @type {boolean}\n         */\n        this._zIndexResort = false;\n\n        this._shader = null;\n\n        // Element is rendered on another texture.\n        this._renderToTextureEnabled = false;\n\n        this._texturizer = null;\n\n        this._useRenderToTexture = false;\n\n        this._boundsMargin = null;\n\n        this._recBoundsMargin = null;\n\n        this._withinBoundsMargin = false;\n\n        this._viewport = null;\n\n        this._clipbox = true;\n\n        this.render = this._renderSimple;\n\n        this._layout = null;\n    }\n\n    get offsetX() {\n        if (this._funcX) {\n            return this._funcX;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalX;\n            } else {\n                return this._x;\n            }\n        }\n    }\n\n    set offsetX(v) {\n        if (Utils.isFunction(v)) {\n            this.funcX = v;\n        } else {\n            this._disableFuncX();\n            if (this.hasFlexLayout()) {\n                this.x += (v - this._layout.originalX);\n                this._layout.setOriginalXWithoutUpdatingLayout(v);\n            } else {\n                this.x = v;\n            }\n        }\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        if (v !== this._x) {\n            this._updateLocalTranslateDelta(v - this._x, 0);\n            this._x = v;\n        }\n    }\n\n    get funcX() {\n        return (this._optFlags & 1 ? this._funcX : null);\n    }\n\n    set funcX(v) {\n        if (this._funcX !== v) {\n            this._optFlags |= 1;\n            this._funcX = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalXWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._x = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncX() {\n        this._optFlags = this._optFlags & (0xFFFF - 1);\n        this._funcX = null;\n    }\n\n    get offsetY() {\n        if (this._funcY) {\n            return this._funcY;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalY;\n            } else {\n                return this._y;\n            }\n        }\n    }\n\n    set offsetY(v) {\n        if (Utils.isFunction(v)) {\n            this.funcY = v;\n        } else {\n            this._disableFuncY();\n            if (this.hasFlexLayout()) {\n                this.y += (v - this._layout.originalY);\n                this._layout.setOriginalYWithoutUpdatingLayout(v);\n            } else {\n                this.y = v;\n            }\n        }\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        if (v !== this._y) {\n            this._updateLocalTranslateDelta(0, v - this._y);\n            this._y = v;\n        }\n    }\n\n    get funcY() {\n        return (this._optFlags & 2 ? this._funcY : null);\n    }\n\n    set funcY(v) {\n        if (this._funcY !== v) {\n            this._optFlags |= 2;\n            this._funcY = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalYWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._y = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncY() {\n        this._optFlags = this._optFlags & (0xFFFF - 2);\n        this._funcY = null;\n    }\n\n    get funcW() {\n        return (this._optFlags & 4 ? this._funcW : null);\n    }\n\n    set funcW(v) {\n        if (this._funcW !== v) {\n            this._optFlags |= 4;\n            this._funcW = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalWidth = 0;\n                this.layout.changedDimensions(true, false);\n            } else {\n                this._w = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncW() {\n        this._optFlags = this._optFlags & (0xFFFF - 4);\n        this._funcW = null;\n    }\n\n    get funcH() {\n        return (this._optFlags & 8 ? this._funcH : null);\n    }\n\n    set funcH(v) {\n        if (this._funcH !== v) {\n            this._optFlags |= 8;\n            this._funcH = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalHeight = 0;\n                this.layout.changedDimensions(false, true);\n            } else {\n                this._h = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncH() {\n        this._optFlags = this._optFlags & (0xFFFF - 8);\n        this._funcH = null;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    getRenderWidth() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalWidth;\n        } else {\n            return this._w;\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    getRenderHeight() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalHeight;\n        } else {\n            return this._h;\n        }\n    }\n\n    get scaleX() {\n        return this._scaleX;\n    }\n\n    set scaleX(v) {\n        if (this._scaleX !== v) {\n            this._scaleX = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scaleY() {\n        return this._scaleY;\n    }\n\n    set scaleY(v) {\n        if (this._scaleY !== v) {\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scale() {\n        return this.scaleX;\n    }\n\n    set scale(v) {\n        if (this._scaleX !== v || this._scaleY !== v) {\n            this._scaleX = v;\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        if (this._pivotX !== v) {\n            this._pivotX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        if (this._pivotY !== v) {\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivot() {\n        return this._pivotX;\n    }\n\n    set pivot(v) {\n        if (this._pivotX !== v || this._pivotY !== v) {\n            this._pivotX = v;\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountX() {\n        return this._mountX;\n    }\n\n    set mountX(v) {\n        if (this._mountX !== v) {\n            this._mountX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountY() {\n        return this._mountY;\n    }\n\n    set mountY(v) {\n        if (this._mountY !== v) {\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mount() {\n        return this._mountX;\n    }\n\n    set mount(v) {\n        if (this._mountX !== v || this._mountY !== v) {\n            this._mountX = v;\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(v) {\n        if (this._rotation !== v) {\n            this._rotation = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get alpha() {\n        return this._alpha;\n    }\n\n    set alpha(v) {\n        // Account for rounding errors.\n        v = (v > 1 ? 1 : (v < 1e-14 ? 0 : v));\n        if (this._alpha !== v) {\n            let prev = this._alpha;\n            this._alpha = v;\n            this._updateLocalAlpha();\n            if ((prev === 0) !== (v === 0)) {\n                this._element._updateEnabledFlag();\n            }\n        }\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    set visible(v) {\n        if (this._visible !== v) {\n            this._visible = v;\n            this._updateLocalAlpha();\n            this._element._updateEnabledFlag();\n\n            if (this.hasFlexLayout()) {\n                this.layout.setVisible(v);\n            }\n        }\n    }\n\n    _updateLocalTransform() {\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n            let _sr = Math.sin(this._rotation);\n            let _cr = Math.cos(this._rotation);\n\n            this._setLocalTransform(\n                _cr * this._scaleX,\n                -_sr * this._scaleY,\n                _sr * this._scaleX,\n                _cr * this._scaleY\n            );\n        } else {\n            this._setLocalTransform(\n                this._scaleX,\n                0,\n                0,\n                this._scaleY\n            );\n        }\n        this._updateLocalTranslate();\n    };\n\n    _updateLocalTranslate() {\n        this._recalcLocalTranslate();\n        this._triggerRecalcTranslate();\n    };\n\n    _recalcLocalTranslate() {\n        let pivotXMul = this._pivotX * this._w;\n        let pivotYMul = this._pivotY * this._h;\n        let px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\n        px -= this._mountX * this._w;\n        py -= this._mountY * this._h;\n        this._localPx = px;\n        this._localPy = py;\n    }\n\n    _updateLocalTranslateDelta(dx, dy) {\n        this._addLocalTranslate(dx, dy);\n    };\n\n    _updateLocalAlpha() {\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\n    };\n\n    /**\n     * @param {number} type\n     * 0: no updates\n     * 1: re-invoke shader\n     * 3: re-create render texture and re-invoke shader\n     */\n    setHasRenderUpdates(type) {\n        if (this._worldContext.alpha) {\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\n            let p = this;\n            p._hasRenderUpdates = Math.max(type, p._hasRenderUpdates);\n            while ((p = p._parent) && (p._hasRenderUpdates !== 3)) {\n                p._hasRenderUpdates = 3;\n            }\n        }\n    }\n\n    /**\n     * @param {Number} type\n     *   1: alpha\n     *   2: translate\n     *   4: transform\n     * 128: becomes visible\n     * 256: flex layout updated\n     */\n    _setRecalc(type) {\n        this._recalc |= type;\n\n        this._setHasUpdates();\n\n        // Any changes in descendants should trigger texture updates.\n        if (this._parent) {\n            this._parent.setHasRenderUpdates(3);\n        }\n    }\n\n    _setHasUpdates() {\n        let p = this;\n        while (p && !p._hasUpdates) {\n            p._hasUpdates = true;\n            p = p._parent;\n        }\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(parent) {\n        if (parent !== this._parent) {\n            let prevIsZContext = this.isZContext();\n            let prevParent = this._parent;\n            this._parent = parent;\n\n            // Notify flex layout engine.\n            if (this._layout || (parent && parent.isFlexContainer())) {\n                this.layout.setParent(prevParent, parent);\n            }\n\n            if (prevParent) {\n                // When elements are deleted, the render texture must be re-rendered.\n                prevParent.setHasRenderUpdates(3);\n            }\n\n            this._setRecalc(1 + 2 + 4);\n\n            if (this._parent) {\n                // Force parent to propagate hasUpdates flag.\n                this._parent._setHasUpdates();\n            }\n\n            if (this._zIndex === 0) {\n                this.setZParent(parent);\n            } else {\n                this.setZParent(parent ? parent.findZContext() : null);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(prevParent.findZContext());\n                }\n            }\n\n            // Tree order did change: even if zParent stays the same, we must resort.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n\n            if (!this._shader) {\n                let newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : null;\n                if (newShaderOwner !== this._shaderOwner) {\n                    this.setHasRenderUpdates(1);\n                    this._setShaderOwnerRecursive(newShaderOwner);\n                }\n            }\n        }\n    };\n\n    enableZSort(force = false) {\n        if (!this._zSort && this._zContextUsage > 0) {\n            this._zSort = true;\n            if (force) {\n                // ZSort must be done, even if this element is invisible.\n                // This is done to prevent memory leaks when removing element from inactive render branches.\n                this.ctx.forceZSort(this);\n            }\n        }\n    }\n\n    addChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children.splice(index, 0, child);\n        child.setParent(this);\n    };\n\n    setChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children[index].setParent(null);\n        this._children[index] = child;\n        child.setParent(this);\n    }\n\n    removeChildAt(index) {\n        let child = this._children[index];\n        this._children.splice(index, 1);\n        child.setParent(null);\n    };\n\n    removeChildren() {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i].setParent(null);\n            }\n\n            this._children.splice(0);\n\n            if (this._zIndexedChildren) {\n                this._zIndexedChildren.splice(0);\n            }\n        }\n    };\n\n    syncChildren(removed, added, order) {\n        this._children = order;\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i].setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            added[i].setParent(this);\n        }\n    }\n\n    moveChild(fromIndex, toIndex) {\n        let c = this._children[fromIndex];\n        this._children.splice(fromIndex, 1);\n        this._children.splice(toIndex, 0, c);\n\n        // Tree order changed: must resort!;\n        this._zIndexResort = true;\n        if (this._zParent) {\n            this._zParent.enableZSort();\n        }\n    }\n\n    _setLocalTransform(a, b, c, d) {\n        this._setRecalc(4);\n        this._localTa = a;\n        this._localTb = b;\n        this._localTc = c;\n        this._localTd = d;\n\n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\n        this._isComplex = (b !== 0) || (c !== 0) || (a < 0) || (d < 0);\n    };\n\n    _addLocalTranslate(dx, dy) {\n        this._localPx += dx;\n        this._localPy += dy;\n        this._triggerRecalcTranslate();\n    }\n\n    _setLocalAlpha(a) {\n        if (!this._worldContext.alpha && ((this._parent && this._parent._worldContext.alpha) && a)) {\n            // Element is becoming visible. We need to force update.\n            this._setRecalc(1 + 128);\n        } else {\n            this._setRecalc(1);\n        }\n\n        if (a < 1e-14) {\n            // Tiny rounding errors may cause failing visibility tests.\n            a = 0;\n        }\n\n        this._localAlpha = a;\n    };\n\n    setDimensions(w, h, isEstimate = this._dimsUnknown) {\n        // In case of an estimation, the update loop should perform different bound checks.\n        this._dimsUnknown = isEstimate;\n\n        if (this.hasFlexLayout()) {\n            this._layout.originalWidth = w;\n            this._layout.originalHeight = h;\n        } else {\n            if (this._w !== w || this._h !== h) {\n                this._updateDimensions(w, h);\n                return true;\n            }\n        }\n        return false;\n    };\n\n    _updateDimensions(w, h) {\n        if (this._w !== w || this._h !== h) {\n            this._w = w;\n            this._h = h;\n\n            this._triggerRecalcTranslate();\n\n            if (this._texturizer) {\n                this._texturizer.releaseRenderTexture();\n                this._texturizer.updateResultTexture();\n            }\n            // Due to width/height change: update the translation vector.\n            this._updateLocalTranslate();\n        }\n    }\n\n    setTextureCoords(ulx, uly, brx, bry) {\n        this.setHasRenderUpdates(3);\n\n        this._ulx = ulx;\n        this._uly = uly;\n        this._brx = brx;\n        this._bry = bry;\n    };\n\n    get displayedTextureSource() {\n        return this._displayedTextureSource;\n    }\n\n    setDisplayedTextureSource(textureSource) {\n        this.setHasRenderUpdates(3);\n        this._displayedTextureSource = textureSource;\n    };\n\n    get isRoot() {\n        return this._isRoot;\n    }\n\n    setAsRoot() {\n        // Use parent dummy.\n        this._parent = new ElementCore(this._element);\n\n        // After setting root, make sure it's updated.\n        this._parent._hasRenderUpdates = 3;\n        this._parent._hasUpdates = true;\n\n        // Root is, and will always be, the primary zContext.\n        this._isRoot = true;\n\n        this.ctx.root = this;\n\n        // Set scissor area of 'fake parent' to stage's viewport.\n        this._parent._viewport = [0, 0, this.ctx.stage.coordsWidth, this.ctx.stage.coordsHeight];\n        this._parent._scissor = this._parent._viewport;\n\n        // When recBoundsMargin is null, the defaults are used (100 for all sides).\n        this._parent._recBoundsMargin = null;\n\n        this._setRecalc(1 + 2 + 4);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while (p = p._parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    isZContext() {\n        return (this._forceZIndexContext || this._renderToTextureEnabled || this._zIndex !== 0 || this._isRoot || !this._parent);\n    };\n\n    findZContext() {\n        if (this.isZContext()) {\n            return this;\n        } else {\n            return this._parent.findZContext();\n        }\n    };\n\n    setZParent(newZParent) {\n        if (this._zParent !== newZParent) {\n            if (this._zParent !== null) {\n                if (this._zIndex !== 0) {\n                    this._zParent.decZContextUsage();\n                }\n\n                // We must filter out this item upon the next resort.\n                this._zParent.enableZSort();\n            }\n\n            if (newZParent !== null) {\n                let hadZContextUsage = (newZParent._zContextUsage > 0);\n\n                // @pre: new parent's children array has already been modified.\n                if (this._zIndex !== 0) {\n                    newZParent.incZContextUsage();\n                }\n\n                if (newZParent._zContextUsage > 0) {\n                    if (!hadZContextUsage && (this._parent === newZParent)) {\n                        // This child was already in the children list.\n                        // Do not add double.\n                    } else {\n                        // Add new child to array.\n                        newZParent._zIndexedChildren.push(this);\n                    }\n\n                    // Order should be checked.\n                    newZParent.enableZSort();\n                }\n            }\n\n            this._zParent = newZParent;\n\n            // Newly added element must be marked for resort.\n            this._zIndexResort = true;\n        }\n    };\n\n    incZContextUsage() {\n        this._zContextUsage++;\n        if (this._zContextUsage === 1) {\n            if (!this._zIndexedChildren) {\n                this._zIndexedChildren = [];\n            }\n            if (this._children) {\n                // Copy.\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._zIndexedChildren.push(this._children[i]);\n                }\n                // Initially, children are already sorted properly (tree order).\n                this._zSort = false;\n            }\n        }\n    };\n\n    decZContextUsage() {\n        this._zContextUsage--;\n        if (this._zContextUsage === 0) {\n            this._zSort = false;\n            this._zIndexedChildren.splice(0);\n        }\n    };\n\n    get zIndex() {\n        return this._zIndex;\n    }\n\n    set zIndex(zIndex) {\n        if (this._zIndex !== zIndex) {\n            this.setHasRenderUpdates(1);\n\n            let newZParent = this._zParent;\n\n            let prevIsZContext = this.isZContext();\n            if (zIndex === 0 && this._zIndex !== 0) {\n                if (this._parent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.decZContextUsage();\n                    }\n                } else {\n                    newZParent = this._parent;\n                }\n            } else if (zIndex !== 0 && this._zIndex === 0) {\n                newZParent = this._parent ? this._parent.findZContext() : null;\n                if (newZParent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.incZContextUsage();\n                        this._zParent.enableZSort();\n                    }\n                }\n            } else if (zIndex !== this._zIndex) {\n                if (this._zParent && this._zParent._zContextUsage) {\n                    this._zParent.enableZSort();\n                }\n            }\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(null);\n            }\n\n            this._zIndex = zIndex;\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(newZParent);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(this._parent.findZContext());\n                }\n            }\n\n            // Make sure that resort is done.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n        }\n    };\n\n    get forceZIndexContext() {\n        return this._forceZIndexContext;\n    }\n\n    set forceZIndexContext(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevIsZContext = this.isZContext();\n        this._forceZIndexContext = v;\n\n        if (prevIsZContext !== this.isZContext()) {\n            if (!this.isZContext()) {\n                this.disableZContext();\n            } else {\n                this.enableZContext(this._parent.findZContext());\n            }\n        }\n    };\n\n    enableZContext(prevZContext) {\n        if (prevZContext && prevZContext._zContextUsage > 0) {\n            // Transfer from upper z context to this z context.\n            const results = this._getZIndexedDescs();\n            results.forEach((c) => {\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\n                    c.setZParent(this);\n                }\n            });\n        }\n    }\n\n    _getZIndexedDescs() {\n        const results = [];\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n        return results;\n    }\n\n    _getZIndexedDescsRec(results) {\n        if (this._zIndex) {\n            results.push(this);\n        } else if (this._children && !this.isZContext()) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n    }\n\n    disableZContext() {\n        // Transfer from this z context to upper z context.\n        if (this._zContextUsage > 0) {\n            let newZParent = this._parent.findZContext();\n\n            // Make sure that z-indexed children are up to date (old ones removed).\n            if (this._zSort) {\n                this.sortZIndexedChildren();\n            }\n\n            this._zIndexedChildren.slice().forEach(function (c) {\n                if (c._zIndex !== 0) {\n                    c.setZParent(newZParent);\n                }\n            });\n        }\n    };\n\n    get colorUl() {\n        return this._colorUl;\n    }\n\n    set colorUl(color) {\n        if (this._colorUl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUl = color;\n        }\n    }\n\n    get colorUr() {\n        return this._colorUr;\n    }\n\n    set colorUr(color) {\n        if (this._colorUr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUr = color;\n        }\n    };\n\n    get colorBl() {\n        return this._colorBl;\n    }\n\n    set colorBl(color) {\n        if (this._colorBl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBl = color;\n        }\n    };\n\n    get colorBr() {\n        return this._colorBr;\n    }\n\n    set colorBr(color) {\n        if (this._colorBr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBr = color;\n        }\n    };\n\n\n    set onUpdate(f) {\n        this._onUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterUpdate(f) {\n        this._onAfterUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterCalcs(f) {\n        this._onAfterCalcs = f;\n        this._setRecalc(7);\n    }\n\n    get shader() {\n        return this._shader;\n    }\n\n    set shader(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevShader = this._shader;\n        this._shader = v;\n        if (!v && prevShader) {\n            // Disabled shader.\n            let newShaderOwner = (this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : null);\n            this._setShaderOwnerRecursive(newShaderOwner);\n        } else if (v) {\n            // Enabled shader.\n            this._setShaderOwnerRecursive(this);\n        }\n    }\n\n    get activeShader() {\n        return this._shaderOwner ? this._shaderOwner.shader : this.renderState.defaultShader;\n    }\n\n    get activeShaderOwner() {\n        return this._shaderOwner;\n    }\n\n    get clipping() {\n        return this._clipping;\n    }\n\n    set clipping(v) {\n        if (this._clipping !== v) {\n            this._clipping = v;\n\n            // Force update of scissor by updating translate.\n            // Alpha must also be updated because the scissor area may have been empty.\n            this._setRecalc(1 + 2);\n        }\n    }\n\n    get clipbox() {\n        return this._clipbox;\n    }\n\n    set clipbox(v) {\n        // In case of out-of-bounds element, all children will also be ignored.\n        // It will save us from executing the update/render loops for those.\n        // The optimization will be used immediately during the next frame.\n        this._clipbox = v;\n    }\n\n    _setShaderOwnerRecursive(elementCore) {\n        this._shaderOwner = elementCore;\n\n        if (this._children && !this._renderToTextureEnabled) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _setShaderOwnerChildrenRecursive(elementCore) {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _hasRenderContext() {\n        return this._renderContext !== this._worldContext;\n    }\n\n    get renderContext() {\n        return this._renderContext;\n    }\n\n    updateRenderToTextureEnabled() {\n        // Enforce texturizer initialisation.\n        let v = this.texturizer._enabled;\n\n        if (v) {\n            this._enableRenderToTexture();\n        } else {\n            this._disableRenderToTexture();\n            this._texturizer.releaseRenderTexture();\n        }\n    }\n\n    _enableRenderToTexture() {\n        if (!this._renderToTextureEnabled) {\n            let prevIsZContext = this.isZContext();\n\n            this._renderToTextureEnabled = true;\n\n            this._renderContext = new ElementCoreContext();\n\n            // If render to texture is active, a new shader context is started.\n            this._setShaderOwnerChildrenRecursive(null);\n\n            if (!prevIsZContext) {\n                // Render context forces z context.\n                this.enableZContext(this._parent ? this._parent.findZContext() : null);\n            }\n\n            this.setHasRenderUpdates(3);\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.render = this._renderAdvanced;\n        }\n    }\n\n    _disableRenderToTexture() {\n        if (this._renderToTextureEnabled) {\n            this._renderToTextureEnabled = false;\n\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\n\n            this._renderContext = this._worldContext;\n\n            if (!this.isZContext()) {\n                this.disableZContext();\n            }\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.setHasRenderUpdates(3);\n\n            this.render = this._renderSimple;\n        }\n    }\n\n    isWhite() {\n        return (this._colorUl === 0xFFFFFFFF) && (this._colorUr === 0xFFFFFFFF) && (this._colorBl === 0xFFFFFFFF) && (this._colorBr === 0xFFFFFFFF);\n    }\n\n    hasSimpleTexCoords() {\n        return (this._ulx === 0) && (this._uly === 0) && (this._brx === 1) && (this._bry === 1);\n    }\n\n    _stashTexCoords() {\n        this._stashedTexCoords = [this._ulx, this._uly, this._brx, this._bry];\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n    }\n\n    _unstashTexCoords() {\n        this._ulx = this._stashedTexCoords[0];\n        this._uly = this._stashedTexCoords[1];\n        this._brx = this._stashedTexCoords[2];\n        this._bry = this._stashedTexCoords[3];\n        this._stashedTexCoords = null;\n    }\n\n    _stashColors() {\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\n        this._colorUl = 0xFFFFFFFF;\n        this._colorUr = 0xFFFFFFFF;\n        this._colorBr = 0xFFFFFFFF;\n        this._colorBl = 0xFFFFFFFF;\n    }\n\n    _unstashColors() {\n        this._colorUl = this._stashedColors[0];\n        this._colorUr = this._stashedColors[1];\n        this._colorBr = this._stashedColors[2];\n        this._colorBl = this._stashedColors[3];\n        this._stashedColors = null;\n    }\n\n    isVisible() {\n        return (this._localAlpha > 1e-14);\n    };\n\n    get outOfBounds() {\n        return this._outOfBounds;\n    }\n\n    set boundsMargin(v) {\n\n        /**\n         *  null: inherit from parent.\n         *  number[4]: specific margins: left, top, right, bottom.\n         */\n        this._boundsMargin = v ? v.slice() : null;\n\n        // We force recalc in order to set all boundsMargin recursively during the next update.\n        this._triggerRecalcTranslate();\n    }\n\n    get boundsMargin() {\n        return this._boundsMargin;\n    }\n\n    update() {\n        this._recalc |= this._parent._pRecalc;\n\n        if (this._layout && this._layout.isEnabled()) {\n            if (this._recalc & 256) {\n                this._layout.layoutFlexTree();\n            }\n        } else if ((this._recalc & 2) && this._optFlags) {\n            this._applyRelativeDimFuncs();\n        }\n\n        if (this._onUpdate) {\n            // Block all 'upwards' updates when changing things in this branch.\n            this._hasUpdates = true;\n            this._onUpdate(this.element, this);\n        }\n\n        const pw = this._parent._worldContext;\n        let w = this._worldContext;\n        const visible = (pw.alpha && this._localAlpha);\n\n        /**\n         * We must update if:\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\n         * - there are (inherited) updates and this branch is visible\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\n         */\n        if (this._hasUpdates || (this._recalc && visible) || (w.alpha && !visible)) {\n            let recalc = this._recalc;\n\n            // Update world coords/alpha.\n            if (recalc & 1) {\n                if (!w.alpha && visible) {\n                    // Becomes visible.\n                    this._hasRenderUpdates = 3;\n                }\n                w.alpha = pw.alpha * this._localAlpha;\n\n                if (w.alpha < 1e-14) {\n                    // Tiny rounding errors may cause failing visibility tests.\n                    w.alpha = 0;\n                }\n            }\n\n            if (recalc & 6) {\n                w.px = pw.px + this._localPx * pw.ta;\n                w.py = pw.py + this._localPy * pw.td;\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\n                if (pw.tc !== 0) w.py += this._localPx * pw.tc;\n            }\n\n            if (recalc & 4) {\n                w.ta = this._localTa * pw.ta;\n                w.tb = this._localTd * pw.tb;\n                w.tc = this._localTa * pw.tc;\n                w.td = this._localTd * pw.td;\n\n                if (this._isComplex) {\n                    w.ta += this._localTc * pw.tb;\n                    w.tb += this._localTb * pw.ta;\n                    w.tc += this._localTc * pw.td;\n                    w.td += this._localTb * pw.tc;\n                }\n            }\n\n            // Update render coords/alpha.\n            const pr = this._parent._renderContext;\n            if (this._parent._hasRenderContext()) {\n                const init = this._renderContext === this._worldContext;\n                if (init) {\n                    // First render context build: make sure that it is fully initialized correctly.\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\n                    this._renderContext = new ElementCoreContext();\n                }\n\n                const r = this._renderContext;\n\n                // Update world coords/alpha.\n                if (init || (recalc & 1)) {\n                    r.alpha = pr.alpha * this._localAlpha;\n\n                    if (r.alpha < 1e-14) {\n                        r.alpha = 0;\n                    }\n                }\n\n                if (init || (recalc & 6)) {\n                    r.px = pr.px + this._localPx * pr.ta;\n                    r.py = pr.py + this._localPy * pr.td;\n                    if (pr.tb !== 0) r.px += this._localPy * pr.tb;\n                    if (pr.tc !== 0) r.py += this._localPx * pr.tc;\n                }\n\n                if (init) {\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\n                    recalc |= 2;\n                }\n\n                if (init || (recalc & 4)) {\n                    r.ta = this._localTa * pr.ta;\n                    r.tb = this._localTd * pr.tb;\n                    r.tc = this._localTa * pr.tc;\n                    r.td = this._localTd * pr.td;\n\n                    if (this._isComplex) {\n                        r.ta += this._localTc * pr.tb;\n                        r.tb += this._localTb * pr.ta;\n                        r.tc += this._localTc * pr.td;\n                        r.td += this._localTb * pr.tc;\n                    }\n                }\n            } else {\n                this._renderContext = this._worldContext;\n            }\n\n            if (this.ctx.updateTreeOrder === -1) {\n                this.ctx.updateTreeOrder = this._updateTreeOrder + 1;\n            } else {\n                this._updateTreeOrder = this.ctx.updateTreeOrder++;\n            }\n\n            // Determine whether we must use a 'renderTexture'.\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer.mustRenderToTexture();\n            if (this._useRenderToTexture !== useRenderToTexture) {\n                // Coords must be changed.\n                this._recalc |= 2 + 4;\n\n                // Scissor may change: force update.\n                recalc |= 2;\n\n                if (!this._useRenderToTexture) {\n                    // We must release the texture.\n                    this._texturizer.release();\n                }\n            }\n            this._useRenderToTexture = useRenderToTexture;\n\n            const r = this._renderContext;\n\n            const bboxW = this._dimsUnknown ? 2048 : this._w;\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\n\n            // Calculate a bbox for this element.\n            let sx, sy, ex, ey;\n            const rComplex = (r.tb !== 0) || (r.tc !== 0) || (r.ta < 0) || (r.td < 0);\n            if (rComplex) {\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n            } else {\n                sx = r.px;\n                ex = r.px + r.ta * bboxW;\n                sy = r.py;\n                ey = r.py + r.td * bboxH;\n            }\n\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                if (nx < sx) sx = nx;\n                if (ny < sy) sy = ny;\n                if (nx > ex) ex = nx;\n                if (ny > ey) ey = ny;\n            }\n\n            if (recalc & 6 || !this._scissor /* initial */) {\n                // Determine whether we must 'clip'.\n                if (this._clipping && r.isSquare()) {\n                    // If the parent renders to a texture, it's scissor should be ignored;\n                    const area = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                    if (area) {\n                        // Merge scissor areas.\n                        const lx = Math.max(area[0], sx);\n                        const ly = Math.max(area[1], sy);\n                        this._scissor = [\n                            lx,\n                            ly,\n                            Math.min(area[2] + area[0], ex) - lx,\n                            Math.min(area[3] + area[1], ey) - ly\n                        ];\n                    } else {\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\n                    }\n                } else {\n                    // No clipping: reuse parent scissor.\n                    this._scissor = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                }\n            }\n\n            // Calculate the outOfBounds margin.\n            if (this._boundsMargin) {\n                this._recBoundsMargin = this._boundsMargin;\n            } else {\n                this._recBoundsMargin = this._parent._recBoundsMargin;\n            }\n\n            if (this._onAfterCalcs) {\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\n                if (this._onAfterCalcs(this.element)) {\n                    // Recalculate bbox.\n                    if (rComplex) {\n                        sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                        ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                    } else {\n                        sx = r.px;\n                        ex = r.px + r.ta * bboxW;\n                        sy = r.py;\n                        ey = r.py + r.td * bboxH;\n                    }\n\n                    if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                        const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                        const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                        if (nx < sx) sx = nx;\n                        if (ny < sy) sy = ny;\n                        if (nx > ex) ex = nx;\n                        if (ny > ey) ey = ny;\n                    }\n                }\n            }\n\n            if (this._parent._outOfBounds === 2) {\n                // Inherit parent out of boundsness.\n                this._outOfBounds = 2;\n\n                if (this._withinBoundsMargin) {\n                    this._withinBoundsMargin = false;\n                    this.element._disableWithinBoundsMargin();\n                }\n            } else {\n                if (recalc & 6) {\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\n                    this._outOfBounds = 0;\n                    let withinMargin = true;\n\n                    // Offscreens are always rendered as long as the parent is within bounds.\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\n                        if (this._scissor && (this._scissor[2] <= 0 || this._scissor[3] <= 0)) {\n                            // Empty scissor area.\n                            this._outOfBounds = 2;\n                        } else {\n                            // Use bbox to check out-of-boundness.\n                            if ((this._scissor[0] > ex) ||\n                                (this._scissor[1] > ey) ||\n                                (sx > (this._scissor[0] + this._scissor[2])) ||\n                                (sy > (this._scissor[1] + this._scissor[3]))\n                            ) {\n                                this._outOfBounds = 1;\n                            }\n\n                            if (this._outOfBounds) {\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && (bboxW && bboxH))) {\n                                    this._outOfBounds = 2;\n                                }\n                            }\n                        }\n\n                        withinMargin = (this._outOfBounds === 0);\n                        if (!withinMargin) {\n                            // Re-test, now with margins.\n                            if (this._recBoundsMargin) {\n                                withinMargin = !((ex < this._scissor[0] - this._recBoundsMargin[2]) ||\n                                    (ey < this._scissor[1] - this._recBoundsMargin[3]) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + this._recBoundsMargin[0]) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + this._recBoundsMargin[1]));\n                            } else {\n                                withinMargin = !((ex < this._scissor[0] - 100) ||\n                                    (ey < this._scissor[1] - 100) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + 100) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + 100));\n                            }\n                            if (withinMargin && this._outOfBounds === 2) {\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\n                                this._outOfBounds = 1;\n                            }\n                        }\n                    }\n\n                    if (this._withinBoundsMargin !== withinMargin) {\n                        this._withinBoundsMargin = withinMargin;\n\n                        if (this._withinBoundsMargin) {\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\n\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\n                            // _recalc directly.\n\n                            // Changes in descendants are automatically executed within the current update loop, though we must\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\n                            this._hasUpdates = true;\n\n                            const recalc = this._recalc;\n                            this._recalc = 0;\n                            this.element._enableWithinBoundsMargin();\n\n                            if (this._recalc) {\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\n                                return this.update();\n                            }\n\n                            this._recalc = recalc;\n                        } else {\n                            this.element._disableWithinBoundsMargin();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                // Set viewport necessary for children scissor calculation.\n                if (this._viewport) {\n                    this._viewport[2] = bboxW;\n                    this._viewport[3] = bboxH;\n                } else {\n                    this._viewport = [0, 0, bboxW, bboxH];\n                }\n            }\n\n            // Filter out bits that should not be copied to the children (currently all are).\n            this._pRecalc = (this._recalc & 135);\n\n            // Clear flags so that future updates are properly detected.\n            this._recalc = 0;\n            this._hasUpdates = false;\n\n            if (this._outOfBounds < 2) {\n                if (this._useRenderToTexture) {\n                    if (this._worldContext.isIdentity()) {\n                        // Optimization.\n                        // The world context is already identity: use the world context as render context to prevents the\n                        // ancestors from having to update the render context.\n                        this._renderContext = this._worldContext;\n                    } else {\n                        // Temporarily replace the render coord attribs by the identity matrix.\n                        // This allows the children to calculate the render context.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n                    }\n                }\n\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        this._children[i].update();\n                    }\n                }\n\n                if (this._useRenderToTexture) {\n                    this._renderContext = r;\n                }\n            } else {\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._hasUpdates) {\n                            this._children[i].update();\n                        } else {\n                            // Make sure we don't lose the 'inherited' updates.\n                            this._children[i]._recalc |= this._pRecalc;\n                            this._children[i].updateOutOfBounds();\n                        }\n                    }\n                }\n            }\n\n            if (this._onAfterUpdate) {\n                this._onAfterUpdate(this.element);\n            }\n        } else {\n            if (this.ctx.updateTreeOrder === -1 || this._updateTreeOrder >= this.ctx.updateTreeOrder) {\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\n                this.ctx.updateTreeOrder = -1;\n            } else {\n                this.updateTreeOrder();\n            }\n        }\n    }\n\n    _applyRelativeDimFuncs() {\n        if (this._optFlags & 1) {\n            const x = this._funcX(this._parent.w);\n            if (x !== this._x) {\n                this._localPx += (x - this._x);\n                this._x = x;\n            }\n        }\n        if (this._optFlags & 2) {\n            const y = this._funcY(this._parent.h);\n            if (y !== this._y) {\n                this._localPy += (y - this._y);\n                this._y = y;\n            }\n        }\n\n        let changedDims = false;\n        if (this._optFlags & 4) {\n            const w = this._funcW(this._parent.w);\n            if (w !== this._w) {\n                this._w = w;\n                changedDims = true;\n            }\n        }\n        if (this._optFlags & 8) {\n            const h = this._funcH(this._parent.h);\n            if (h !== this._h) {\n                this._h = h;\n                changedDims = true;\n            }\n        }\n\n        if (changedDims) {\n            // Recalc mount, scale position.\n            this._recalcLocalTranslate();\n\n            this.element.onDimensionsChanged(this._w, this._h);\n        }\n    }\n\n    updateOutOfBounds() {\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\n\n            // Inherit parent out of boundsness.\n            this._outOfBounds = 2;\n\n            if (this._withinBoundsMargin) {\n                this._withinBoundsMargin = false;\n                this.element._disableWithinBoundsMargin();\n            }\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateOutOfBounds();\n                }\n            }\n        }\n    }\n\n    updateTreeOrder() {\n        if (this._localAlpha && (this._outOfBounds !== 2)) {\n            this._updateTreeOrder = this.ctx.updateTreeOrder++;\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateTreeOrder();\n                }\n            }\n        }\n    }\n\n    _renderSimple() {\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                renderState.setShader(this.activeShader, this._shaderOwner);\n                renderState.setScissor(this._scissor);\n                this.renderState.addQuad(this);\n            }\n\n            // Also add children to the VBO.\n            if (this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n\n    _renderAdvanced() {\n        const hasRenderUpdates = this._hasRenderUpdates;\n\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            let mustRenderChildren = true;\n            let renderTextureInfo;\n            let prevRenderTextureInfo;\n            if (this._useRenderToTexture) {\n                if (this._w === 0 || this._h === 0) {\n                    // Ignore this branch and don't draw anything.\n                    return;\n                } else if (!this._texturizer.hasRenderTexture() || (hasRenderUpdates >= 3)) {\n                    // Switch to default shader for building up the render texture.\n                    renderState.setShader(renderState.defaultShader, this);\n\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\n\n                    renderTextureInfo = {\n                        nativeTexture: null,\n                        offset: 0,  // Set by CoreRenderState.\n                        w: this._w,\n                        h: this._h,\n                        empty: true,\n                        cleared: false,\n                        ignore: false,\n                        cache: false\n                    };\n\n                    if (this._texturizer.hasResultTexture() || (!renderState.isCachingTexturizer && (hasRenderUpdates < 3))) {\n                        /**\n                         * We don't always cache render textures.\n                         *\n                         * The rule is, that caching for a specific render texture is only enabled if:\n                         * - There is a result texture to be updated.\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\n                         *   If an ancestor is cached anyway, it's probably not necessary to keep deeper caches. If the top level is to\n                         *   change while a lower one is not, that lower level will be cached instead.\n                         *\n                         * In case of the fast blur element, this prevents having to cache all blur levels and stages, saving a huge amount\n                         * of GPU memory!\n                         *\n                         * Especially when using multiple stacked layers of the same dimensions that are RTT this will have a very\n                         * noticable effect on performance as less render textures need to be allocated.\n                         */\n                        renderTextureInfo.cache = true;\n                        renderState.isCachingTexturizer = true;\n                    }\n\n                    if (!this._texturizer.hasResultTexture()) {\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\n                        //  render-to-texture layer.\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\n                        //  that result texture being filled.\n                        this._texturizer.releaseRenderTexture();\n                    }\n\n                    renderState.setRenderTextureInfo(renderTextureInfo);\n                    renderState.setScissor(null);\n\n                    if (this._displayedTextureSource) {\n                        let r = this._renderContext;\n\n                        // Use an identity context for drawing the displayed texture to the render texture.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n\n                        // Add displayed texture source in local coordinates.\n                        this.renderState.addQuad(this);\n\n                        this._renderContext = r;\n                    }\n                } else {\n                    mustRenderChildren = false;\n                }\n            } else {\n                if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                    renderState.setShader(this.activeShader, this._shaderOwner);\n                    renderState.setScissor(this._scissor);\n                    this.renderState.addQuad(this);\n                }\n            }\n\n            // Also add children to the VBO.\n            if (mustRenderChildren && this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                let updateResultTexture = false;\n                if (mustRenderChildren) {\n                    // Finished refreshing renderTexture.\n                    renderState.finishedRenderTexture();\n\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\n                    //  render-to-texture and filtering.\n                    this._texturizer.empty = renderTextureInfo.empty;\n\n                    if (renderTextureInfo.empty) {\n                        // We ignore empty render textures and do not draw the final quad.\n\n                        // The following cleans up memory and enforces that the result texture is also cleared.\n                        this._texturizer.releaseRenderTexture();\n                    } else if (renderTextureInfo.nativeTexture) {\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\n                        this._texturizer.reuseTextureAsRenderTexture(renderTextureInfo.nativeTexture);\n\n                        renderTextureInfo.ignore = true;\n                    } else {\n                        if (this._texturizer.renderTextureReused) {\n                            // Quad operations must be written to a render texture actually owned.\n                            this._texturizer.releaseRenderTexture();\n                        }\n                        // Just create the render texture.\n                        renderTextureInfo.nativeTexture = this._texturizer.getRenderTexture();\n                    }\n\n                    // Restore the parent's render texture.\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\n\n                    updateResultTexture = true;\n                }\n\n                if (!this._texturizer.empty) {\n                    let resultTexture = this._texturizer.getResultTexture();\n                    if (updateResultTexture) {\n                        if (resultTexture) {\n                            // Logging the update frame can be handy for userland.\n                            resultTexture.update = renderState.stage.frameCounter;\n                        }\n                        this._texturizer.updateResultTexture();\n                    }\n\n                    if (!this._texturizer.renderOffscreen) {\n                        // Render result texture to the actual render target.\n                        renderState.setShader(this.activeShader, this._shaderOwner);\n                        renderState.setScissor(this._scissor);\n\n                        // If no render texture info is set, the cache can be reused.\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\n\n                        renderState.setTexturizer(this._texturizer, cache);\n                        this._stashTexCoords();\n                        if (!this._texturizer.colorize) this._stashColors();\n                        this.renderState.addQuad(this, true);\n                        if (!this._texturizer.colorize) this._unstashColors();\n                        this._unstashTexCoords();\n                        renderState.setTexturizer(null);\n                    }\n                }\n            }\n\n            if (renderTextureInfo && renderTextureInfo.cache) {\n                // Allow siblings to cache.\n                renderState.isCachingTexturizer = false;\n            }\n        }\n    }\n\n    get zSort() {\n        return this._zSort;\n    }\n\n    sortZIndexedChildren() {\n        /**\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\n         * - filtering out elements with a different zParent than this (were removed)\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\n         * - then, finally, we merge-sort both the new array and the 'old' one\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\n         */\n\n        const n = this._zIndexedChildren.length;\n        let ptr = 0;\n        const a = this._zIndexedChildren;\n\n        // Notice that items may occur multiple times due to z-index changing.\n        const b = [];\n        for (let i = 0; i < n; i++) {\n            if (a[i]._zParent === this) {\n                if (a[i]._zIndexResort) {\n                    b.push(a[i]);\n                } else {\n                    if (ptr !== i) {\n                        a[ptr] = a[i];\n                    }\n                    ptr++;\n                }\n            }\n        }\n\n        const m = b.length;\n        if (m) {\n            for (let j = 0; j < m; j++) {\n                b[j]._zIndexResort = false;\n            }\n\n            b.sort(ElementCore.sortZIndexedChildren);\n            const n = ptr;\n            if (!n) {\n                ptr = 0;\n                let j = 0;\n                do {\n                    a[ptr++] = b[j++];\n                } while (j < m);\n\n                if (a.length > ptr) {\n                    // Slice old (unnecessary) part off array.\n                    a.splice(ptr);\n                }\n            } else {\n                // Merge-sort arrays;\n                ptr = 0;\n                let i = 0;\n                let j = 0;\n                const mergeResult = [];\n                do {\n                    const v = (a[i]._zIndex === b[j]._zIndex ? a[i]._updateTreeOrder - b[j]._updateTreeOrder : a[i]._zIndex - b[j]._zIndex);\n\n                    const add = v > 0 ? b[j++] : a[i++];\n\n                    if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                        mergeResult[ptr++] = add;\n                    }\n\n                    if (i >= n) {\n                        do {\n                            const add = b[j++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (j < m);\n                        break;\n                    } else if (j >= m) {\n                        do {\n                            const add = a[i++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (i < n);\n                        break;\n                    }\n                } while (true);\n\n                this._zIndexedChildren = mergeResult;\n            }\n        } else {\n            if (a.length > ptr) {\n                // Slice old (unnecessary) part off array.\n                a.splice(ptr);\n            }\n        }\n\n        this._zSort = false;\n    };\n\n    get localTa() {\n        return this._localTa;\n    };\n\n    get localTb() {\n        return this._localTb;\n    };\n\n    get localTc() {\n        return this._localTc;\n    };\n\n    get localTd() {\n        return this._localTd;\n    };\n\n    get element() {\n        return this._element;\n    }\n\n    get renderUpdates() {\n        return this._hasRenderUpdates;\n    }\n\n    get texturizer() {\n        if (!this._texturizer) {\n            this._texturizer = new ElementTexturizer(this);\n        }\n        return this._texturizer;\n    }\n\n    getCornerPoints() {\n        let w = this._worldContext;\n\n        return [\n            w.px,\n            w.py,\n            w.px + this._w * w.ta,\n            w.py + this._w * w.tc,\n            w.px + this._w * w.ta + this._h * w.tb,\n            w.py + this._w * w.tc + this._h * w.td,\n            w.px + this._h * w.tb,\n            w.py + this._h * w.td\n        ];\n    };\n\n    getRenderTextureCoords(relX, relY) {\n        let r = this._renderContext;\n        return [\n            r.px + r.ta * relX + r.tb * relY,\n            r.py + r.tc * relX + r.td * relY\n        ];\n    }\n\n    getAbsoluteCoords(relX, relY) {\n        let w = this._renderContext;\n        return [\n            w.px + w.ta * relX + w.tb * relY,\n            w.py + w.tc * relX + w.td * relY\n        ];\n    }\n\n    collectAtCoord(x, y, children) {\n        // return when branch is hidden\n        if (this._renderContext.alpha === 0) {\n            return;\n        }\n\n        if (this.inBound(x, y)) {\n            if (this._scissor) {\n                if (this.inScissor()) {\n                    children.push(this);\n                }\n            } else {\n                children.push(this);\n            }\n        }\n\n        if (this._children) {\n            const j = this._children.length;\n            for (let i = 0; i < j; i++) {\n                this._children[i].collectAtCoord(x, y, children);\n            }\n        }\n\n        return children.sort(ElementCore.sortZIndexedChildren);\n    }\n\n    inBound(tx, ty) {\n        const c = this.getCornerPoints();\n        return tx > c[0] && tx < c[2] && ty > c[1] && ty < c[7];\n    }\n\n    inScissor() {\n        const sc = this._scissor;\n        const c = this.getCornerPoints();\n\n        return c[2] >= sc[0] && c[0] <= sc[0] + sc[2] && c[7] >= sc[1] && c[1] <= sc[1] + sc[3];\n    }\n\n    get layout() {\n        this._ensureLayout();\n        return this._layout;\n    }\n\n    get flex() {\n        return this._layout ? this._layout.flex : null;\n    }\n\n    set flex(v) {\n        this.layout.flex = v;\n    }\n\n    get flexItem() {\n        return this._layout ? this._layout.flexItem : null;\n    }\n\n    set flexItem(v) {\n        this.layout.flexItem = v;\n    }\n\n    isFlexItem() {\n        return !!this._layout && this._layout.isFlexItemEnabled();\n    }\n\n    isFlexContainer() {\n        return !!this._layout && this._layout.isFlexEnabled();\n    }\n\n    enableFlexLayout() {\n        this._ensureLayout();\n    }\n\n    _ensureLayout() {\n        if (!this._layout) {\n            this._layout = new FlexTarget(this);\n        }\n    }\n\n    disableFlexLayout() {\n        this._triggerRecalcTranslate();\n    }\n\n    hasFlexLayout() {\n        return (this._layout && this._layout.isEnabled());\n    }\n\n    setLayout(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this._updateDimensions(w, h);\n    }\n\n    triggerLayout() {\n        this._setRecalc(256);\n    }\n\n    _triggerRecalcTranslate() {\n        this._setRecalc(2);\n    }\n\n}\n\nclass ElementCoreContext {\n\n    constructor() {\n        this.alpha = 1;\n\n        this.px = 0;\n        this.py = 0;\n\n        this.ta = 1;\n        this.tb = 0;\n        this.tc = 0;\n        this.td = 1;\n    }\n\n    isIdentity() {\n        return this.alpha === 1 &&\n            this.px === 0 &&\n            this.py === 0 &&\n            this.ta === 1 &&\n            this.tb === 0 &&\n            this.tc === 0 &&\n            this.td === 1;\n    }\n\n    isSquare() {\n        return this.tb === 0 && this.tc === 0;\n    }\n\n}\n\nElementCoreContext.IDENTITY = new ElementCoreContext();\nElementCore.sortZIndexedChildren = function (a, b) {\n    return (a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex);\n};\n\nimport ElementTexturizer from \"./ElementTexturizer.mjs\";\nimport Utils from \"../Utils.mjs\";","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is a partial (and more efficient) implementation of the event emitter.\n * It attempts to maintain a one-to-one mapping between events and listeners, skipping an array lookup.\n * Only if there are multiple listeners, they are combined in an array.\n */\nexport default class EventEmitter {\n\n    constructor() {\n        // This is set (and kept) to true when events are used at all.\n        this._hasEventListeners = false;\n    }\n\n    on(name, listener) {\n        if (!this._hasEventListeners) {\n            this._eventFunction = {}\n            this._eventListeners = {}\n            this._hasEventListeners = true;\n        }\n\n        const current = this._eventFunction[name];\n        if (!current) {\n            this._eventFunction[name] = listener;\n        } else {\n            if (this._eventFunction[name] !== EventEmitter.combiner) {\n                this._eventListeners[name] = [this._eventFunction[name], listener];\n                this._eventFunction[name] = EventEmitter.combiner;\n            } else {\n                this._eventListeners[name].push(listener);\n            }\n        }\n    }\n\n    has(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    let index = listeners.indexOf(listener);\n                    return (index >= 0);\n                } else if (this._eventFunction[name] === listener) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    off(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    let index = listeners.indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    if (listeners.length === 1) {\n                        this._eventFunction[name] = listeners[0];\n                        this._eventListeners[name] = undefined;\n                    }\n                } else if (this._eventFunction[name] === listener) {\n                    this._eventFunction[name] = undefined;\n                }\n            }\n        }\n    }\n\n    removeListener(name, listener) {\n        this.off(name, listener);\n    }\n\n    emit(name, arg1, arg2, arg3) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    func(this, name, arg1, arg2, arg3);\n                } else {\n                    func(arg1, arg2, arg3);\n                }\n            }\n        }\n    }\n\n    listenerCount(name) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    return this._eventListeners[name].length;\n                } else {\n                    return 1;\n                }\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    removeAllListeners(name) {\n        if (this._hasEventListeners) {\n            delete this._eventFunction[name];\n            delete this._eventListeners[name];\n        }\n    }\n\n}\n\nEventEmitter.combiner = function(object, name, arg1, arg2, arg3) {\n    const listeners = object._eventListeners[name];\n    if (listeners) {\n        // Because listener may detach itself while being invoked, we use a forEach instead of for loop.\n        listeners.forEach((listener) => {\n            listener(arg1, arg2, arg3);\n        });\n    }\n}\n\nEventEmitter.addAsMixin = function(cls) {\n    cls.prototype.on = EventEmitter.prototype.on;\n    cls.prototype.has = EventEmitter.prototype.has;\n    cls.prototype.off = EventEmitter.prototype.off;\n    cls.prototype.removeListener = EventEmitter.prototype.removeListener;\n    cls.prototype.emit = EventEmitter.prototype.emit;\n    cls.prototype.listenerCount = EventEmitter.prototype.listenerCount;\n    cls.prototype.removeAllListeners = EventEmitter.prototype.removeAllListeners;\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"./Utils.mjs\";\nimport Base from \"./Base.mjs\";\n\nexport default class Shader {\n\n    constructor(coreContext) {\n        this._initialized = false;\n\n        this.ctx = coreContext;\n\n        /**\n         * The (enabled) elements that use this shader.\n         * @type {Set<ElementCore>}\n         */\n        this._elements = new Set();\n    }\n\n    static create(stage, v) {\n        let shader;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                shader = stage.renderer.createShader(stage.ctx, v);\n            } else {\n                shader = this.shader;\n            }\n\n            if (shader) {\n                Base.patchObject(shader, v);\n            }\n        } else if (v === null) {\n            shader = stage.ctx.renderState.defaultShader;\n        } else if (v === undefined) {\n            shader = null;\n        } else {\n            if (v.isShader) {\n                if (!stage.renderer.isValidShaderType(v.constructor)) {\n                    console.error(\"Invalid shader type\");\n                    v = null;\n                }\n                shader = v;\n            } else {\n                console.error(\"Please specify a shader type.\");\n                return;\n            }\n        }\n\n        return shader;\n    }\n\n    static getWebGL() {\n        return undefined;\n    }\n\n    static getC2d() {\n        return undefined;\n    }\n\n    addElement(elementCore) {\n        this._elements.add(elementCore);\n    }\n\n    removeElement(elementCore) {\n        this._elements.delete(elementCore);\n        if (!this._elements) {\n            this.cleanup();\n        }\n    }\n\n    redraw() {\n        this._elements.forEach(elementCore => {\n            elementCore.setHasRenderUpdates(2);\n        });\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    useDefault() {\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\n        return false;\n    }\n\n    addEmpty() {\n        // Draws this shader even if there are no quads to be added.\n        // This is handy for custom shaders.\n        return false;\n    }\n\n    cleanup() {\n        // Called when no more enabled elements have this shader.\n    }\n\n    get isShader() {\n        return true;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Texture {\n\n    /**\n     * @param {Stage} stage\n     */\n    constructor(stage) {\n        this.stage = stage;\n\n        this.manager = this.stage.textureManager;\n\n        this.id = Texture.id++;\n\n        /**\n         * All enabled elements that use this texture object (either as texture or displayedTexture).\n         * @type {Set<Element>}\n         */\n        this.elements = new Set();\n\n        /**\n         * The number of enabled elements that are active.\n         * @type {number}\n         */\n        this._activeCount = 0;\n\n        /**\n         * The associated texture source.\n         * Should not be changed.\n         * @type {TextureSource}\n         */\n        this._source = null;\n\n        /**\n         * A resize mode can be set to cover or contain a certain area.\n         * It will reset the texture clipping settings.\n         * When manual texture clipping is performed, the resizeMode is reset.\n         * @type {{type: string, width: number, height: number}}\n         * @private\n         */\n        this._resizeMode = null;\n\n        /**\n         * The texture clipping x-offset.\n         * @type {number}\n         */\n        this._x = 0;\n\n        /**\n         * The texture clipping y-offset.\n         * @type {number}\n         */\n        this._y = 0;\n\n        /**\n         * The texture clipping width. If 0 then full width.\n         * @type {number}\n         */\n        this._w = 0;\n\n        /**\n         * The texture clipping height. If 0 then full height.\n         * @type {number}\n         */\n        this._h = 0;\n\n        /**\n         * Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\n         * @type {number}\n         * @private\n         */\n        this._precision = 1;\n\n        /**\n         * The (maximum) expected texture source width. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mw = 0;\n\n        /**\n         * The (maximum) expected texture source height. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mh = 0;\n\n        /**\n         * Indicates if Texture.prototype.texture uses clipping.\n         * @type {boolean}\n         */\n        this.clipping = false;\n\n        /**\n         * Indicates whether this texture must update (when it becomes used again).\n         * @type {boolean}\n         * @private\n         */\n        this._mustUpdate = true;\n\n    }\n\n    get source() {\n        if (this._mustUpdate || this.stage.hasUpdateSourceTexture(this)) {\n            this._performUpdateSource(true);\n            this.stage.removeUpdateSourceTexture(this);\n        }\n        return this._source;\n    }\n\n    addElement(v) {\n        if (!this.elements.has(v)) {\n            this.elements.add(v);\n\n            if (this.elements.size === 1) {\n                if (this._source) {\n                    this._source.addTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.incActiveCount();\n            }\n        }\n    }\n\n    removeElement(v) {\n        if (this.elements.delete(v)) {\n            if (this.elements.size === 0) {\n                if (this._source) {\n                    this._source.removeTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.decActiveCount();\n            }\n        }\n    }\n\n    incActiveCount() {\n        // Ensure that texture source's activeCount has transferred ownership.\n        const source = this.source;\n\n        if (source) {\n            this._checkForNewerReusableTextureSource();\n        }\n\n        this._activeCount++;\n        if (this._activeCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveCount() {\n        const source = this.source; // Force updating the source.\n        this._activeCount--;\n        if (!this._activeCount) {\n            this.becomesUnused();\n        }\n    }\n\n    becomesUsed() {\n        if (this.source) {\n            this.source.incActiveTextureCount();\n        }\n    }\n\n    onLoad() {\n        if (this._resizeMode) {\n            this._applyResizeMode();\n        }\n\n        this.elements.forEach(element => {\n            if (element.active) {\n                element.onTextureSourceLoaded();\n            }\n        });\n    }\n\n    _checkForNewerReusableTextureSource() {\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\n        // In the meantime another texture may have been generated loaded with the same lookup id.\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\n        const source = this.source;\n        if (!source.isLoaded()) {\n            const reusable = this._getReusableTextureSource();\n            if (reusable && reusable.isLoaded() && (reusable !== source)) {\n                this._replaceTextureSource(reusable);\n            }\n        } else {\n            if (this._resizeMode) {\n                this._applyResizeMode();\n            }\n        }\n    }\n\n    becomesUnused() {\n        if (this.source) {\n            this.source.decActiveTextureCount();\n        }\n    }\n\n    isUsed() {\n        return this._activeCount > 0;\n    }\n\n    /**\n     * Returns the lookup id for the current texture settings, to be able to reuse it.\n     * @returns {string|null}\n     */\n    _getLookupId() {\n        // Default: do not reuse texture.\n        return null;\n    }\n\n    /**\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\n     * It should return a function that receives a single callback argument.\n     * That callback should be called with the following arguments:\n     *   - err\n     *   - options: object\n     *     - source: ArrayBuffer|WebGlTexture|ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap\n     *     - w: Number\n     *     - h: Number\n     *     - permanent: Boolean\n     *     - hasAlpha: boolean\n     *     - permultiplyAlpha: boolean\n     *     - flipBlueRed: boolean\n     *     - renderInfo: object\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\n     * to stop fetching an image when it is no longer in element, for example.\n     */\n    _getSourceLoader() {\n        throw new Error(\"Texture.generate must be implemented.\");\n    }\n\n    get isValid() {\n        return this._getIsValid();\n    }\n\n    /**\n     * If texture is not 'valid', no source can be created for it.\n     * @returns {boolean}\n     */\n    _getIsValid() {\n        return true;\n    }\n\n    /**\n     * This must be called when the texture source must be re-generated.\n     */\n    _changed() {\n        // If no element is actively using this texture, ignore it altogether.\n        if (this.isUsed()) {\n            this._updateSource();\n        } else {\n            this._mustUpdate = true;\n        }\n    }\n\n    _updateSource() {\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\n        // properties.\n        this.stage.addUpdateSourceTexture(this);\n    }\n\n    _performUpdateSource(force = false) {\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\n        // again.\n        if (force || this.isUsed()) {\n            this._mustUpdate = false;\n            let source = this._getTextureSource();\n            this._replaceTextureSource(source);\n        }\n    }\n\n    _getTextureSource() {\n        let source = null;\n        if (this._getIsValid()) {\n            const lookupId = this._getLookupId();\n            source = this._getReusableTextureSource(lookupId);\n            if (!source) {\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\n            }\n        }\n        return source;\n    }\n\n    _getReusableTextureSource(lookupId = this._getLookupId()) {\n        if (this._getIsValid()) {\n            if (lookupId) {\n                return this.manager.getReusableTextureSource(lookupId);\n            }\n        }\n        return null;\n    }\n\n    _replaceTextureSource(newSource = null) {\n        let oldSource = this._source;\n\n        this._source = newSource;\n\n        if (this.elements.size) {\n            if (oldSource) {\n                if (this._activeCount) {\n                    oldSource.decActiveTextureCount();\n                }\n\n                oldSource.removeTexture(this);\n            }\n\n            if (newSource) {\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\n                newSource.addTexture(this);\n                if (this._activeCount) {\n                    newSource.incActiveTextureCount();\n                }\n            }\n        }\n\n        if (this.isUsed()) {\n            if (newSource) {\n                if (newSource.isLoaded()) {\n\n                    // Apply resizeMode\n                    if (this._resizeMode) {\n                        this._applyResizeMode();\n                    }\n\n                    this.elements.forEach(element => {\n                        if (element.active) {\n                            element._setDisplayedTexture(this);\n                        }\n                    });\n                } else {\n                    const loadError = newSource.loadError;\n                    if (loadError) {\n                        this.elements.forEach(element => {\n                            if (element.active) {\n                                element.onTextureSourceLoadError(loadError);\n                            }\n                        });\n                    }\n                }\n            } else {\n                this.elements.forEach(element => {\n                    if (element.active) {\n                        element._setDisplayedTexture(null);\n                    }\n                });\n            }\n        }\n    }\n\n    load() {\n        // Make sure that source is up to date.\n        if (this.source) {\n            if (!this.isLoaded()) {\n                this.source.load(true);\n            }\n        }\n    }\n\n    isLoaded() {\n        return this._source && this._source.isLoaded();\n    }\n\n    get loadError() {\n        return this._source && this._source.loadError;\n    }\n\n    free() {\n        if (this._source) {\n            this._source.free();\n        }\n    }\n\n    set resizeMode({type = \"cover\", w = 0, h = 0, clipX = 0.5, clipY = 0.5}) {\n        this._resizeMode = {type, w, h, clipX, clipY};\n        if (this.isLoaded()) {\n            this._applyResizeMode();\n        }\n    }\n\n    get resizeMode() {\n        return this._resizeMode;\n    }\n\n    _clearResizeMode() {\n        this._resizeMode = null;\n    }\n\n    _applyResizeMode() {\n        if (this._resizeMode.type === \"cover\") {\n            this._applyResizeCover();\n        } else if (this._resizeMode.type === \"contain\") {\n            this._applyResizeContain();\n        }\n        this._updatePrecision();\n        this._updateClipping();\n    }\n\n    _applyResizeCover() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = Math.max(scaleX, scaleY);\n        if (!scale) return;\n        this._precision = 1/scale;\n        if (scaleX && scaleX < scale) {\n            const desiredSize = this._precision * this._resizeMode.w;\n            const choppedOffPixels = this._source.w - desiredSize;\n            this._x = choppedOffPixels * this._resizeMode.clipX;\n            this._w = this._source.w - choppedOffPixels;\n        }\n        if (scaleY && scaleY < scale) {\n            const desiredSize = this._precision * this._resizeMode.h;\n            const choppedOffPixels = this._source.h - desiredSize;\n            this._y = choppedOffPixels * this._resizeMode.clipY;\n            this._h = this._source.h - choppedOffPixels;\n        }\n    }\n\n    _applyResizeContain() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = scaleX;\n        if (!scale || scaleY < scale) {\n            scale = scaleY;\n        }\n        if (!scale) return;\n        this._precision = 1/scale;\n    }\n\n    enableClipping(x, y, w, h) {\n        this._clearResizeMode();\n\n        x *= this._precision;\n        y *= this._precision;\n        w *= this._precision;\n        h *= this._precision;\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\n            this._x = x;\n            this._y = y;\n            this._w = w;\n            this._h = h;\n\n            this._updateClipping(true);\n        }\n    }\n\n    disableClipping() {\n        this._clearResizeMode();\n\n        if (this._x || this._y || this._w || this._h) {\n            this._x = 0;\n            this._y = 0;\n            this._w = 0;\n            this._h = 0;\n\n            this._updateClipping();\n        }\n    }\n\n    _updateClipping() {\n        this.clipping = !!(this._x || this._y || this._w || this._h);\n\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onDisplayedTextureClippingChanged();\n            }\n        });\n    }\n\n    _updatePrecision() {\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onPrecisionChanged();\n            }\n        });\n    }\n\n    getNonDefaults() {\n        let nonDefaults = {};\n        nonDefaults['type'] = this.constructor.name;\n        if (this.x !== 0) nonDefaults['x'] = this.x;\n        if (this.y !== 0) nonDefaults['y'] = this.y;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.precision !== 1) nonDefaults['precision'] = this.precision;\n        return nonDefaults;\n    }\n\n    get px() {\n        return this._x;\n    }\n\n    get py() {\n        return this._y;\n    }\n\n    get pw() {\n        return this._w;\n    }\n\n    get ph() {\n        return this._h;\n    }\n\n    get x() {\n        return this._x / this._precision;\n    }\n    set x(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._x !== v) {\n            this._x = v;\n            this._updateClipping();\n        }\n    }\n\n    get y() {\n        return this._y / this._precision;\n    }\n    set y(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._y !== v) {\n            this._y = v;\n            this._updateClipping();\n        }\n    }\n\n    get w() {\n        return this._w / this._precision;\n    }\n\n    set w(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._w !== v) {\n            this._w = v;\n            this._updateClipping();\n        }\n    }\n\n    get h() {\n        return this._h / this._precision;\n    }\n\n    set h(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._h !== v) {\n            this._h = v;\n            this._updateClipping();\n        }\n    }\n\n    get precision() {\n        return this._precision;\n    }\n\n    set precision(v) {\n        this._clearResizeMode();\n        if (this._precision !== v) {\n            this._precision = v;\n            this._updatePrecision();\n        }\n    }\n\n    isAutosizeTexture() {\n        return true;\n    }\n\n    getRenderWidth() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        // If dimensions are unknown (texture not yet loaded), use maximum width as a fallback as render width to allow proper bounds checking.\n        return (this._w || (this._source ? this._source.getRenderWidth() - this._x : 0)) / this._precision;\n    }\n\n    getRenderHeight() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        return (this._h || (this._source ? this._source.getRenderHeight() - this._y : 0)) / this._precision;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nTexture.prototype.isTexture = true;\n\nTexture.id = 0;\n\nimport Base from \"./Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class ImageTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._src = undefined;\n        this._hasAlpha = false;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set src(v) {\n        if (this._src !== v) {\n            this._src = v;\n            this._changed();\n        }\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    set hasAlpha(v) {\n        if (this._hasAlpha !== v) {\n            this._hasAlpha = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this._src;\n    }\n\n    _getLookupId() {\n        return this._src;\n    }\n\n    _getSourceLoader() {\n        let src = this._src;\n        let hasAlpha = this._hasAlpha;\n        if (this.stage.getOption('srcBasePath')) {\n            var fc = src.charCodeAt(0);\n            if ((src.indexOf(\"//\") === -1) && ((fc >= 65 && fc <= 90) || (fc >= 97 && fc <= 122) || fc == 46)) {\n                // Alphabetical or dot: prepend base path.\n                src = this.stage.getOption('srcBasePath') + src;\n            }\n        }\n\n        return (cb) => {\n            return this.stage.platform.loadSrcTexture({src: src, hasAlpha: hasAlpha}, cb);\n        }\n    }\n\n    getNonDefaults() {\n        const obj = super.getNonDefaults();\n        if (this._src) {\n            obj.src = this._src;\n        }\n        return obj;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTextureRenderer {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        this._context.font = Utils.isSpark ? this._stage.platform.getFontSetting(this) : this._getFontSetting();\n        this._context.textBaseline = this._settings.textBaseline;\n    };\n\n    _getFontSetting() {\n        let ff = this._settings.fontFace;\n\n        if (!Array.isArray(ff)) {\n            ff = [ff];\n        }\n\n        let ffs = [];\n        for (let i = 0, n = ff.length; i < n; i++) {\n            if (ff[i] === \"serif\" || ff[i] === \"sans-serif\") {\n                ffs.push(ff[i]);\n            } else {\n                ffs.push(`\"${ff[i]}\"`);\n            }\n        }\n\n        return `${this._settings.fontStyle} ${this._settings.fontSize * this.getPrecision()}px ${ffs.join(\",\")}`\n    }\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = this._getFontSetting();\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        let lineHeight = this._settings.lineHeight * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = this._settings.letterSpacing || 0;\n\n        // Set font properties.\n        this.setFontProperties();\n\n        // Total width.\n        let width = w || (2048 / this.getPrecision());\n\n        // Inner width.\n        let innerWidth = width - (paddingLeft);\n        if (innerWidth < 10) {\n            width += (10 - innerWidth);\n            innerWidth += (10 - innerWidth);\n        }\n\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth\n        }\n\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth, suffix)\n        }\n\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing);\n        } else {\n            linesInfo = {l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: []};\n            let i, n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\n            let usedLines = lines.slice(0, this._settings.maxLines);\n\n            let otherLines = null;\n            if (this._settings.maxLinesSuffix) {\n                // Wrap again with max lines suffix enabled.\n                let w = this._settings.maxLinesSuffix ? this.measureText(this._settings.maxLinesSuffix) : 0;\n                let al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing);\n                usedLines[usedLines.length - 1] = al.l[0] + this._settings.maxLinesSuffix;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            } else {\n                otherLines = [''];\n            }\n\n            // Re-assemble the remaining text.\n            let i, n = lines.length;\n            let j = 0;\n            let m = linesInfo.n.length;\n            for (i = this._settings.maxLines; i < n; i++) {\n                otherLines[j] += (otherLines[j] ? \" \" : \"\") + lines[i];\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n\n            renderInfo.remainingText = otherLines.join(\"\\n\");\n\n            renderInfo.moreTextLines = true;\n\n            lines = usedLines;\n        } else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = \"\";\n        }\n\n        // calculate text width\n        let maxLineWidth = 0;\n        let lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            let lineWidth = this.measureText(lines[i], letterSpacing);\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n\n        renderInfo.lineWidths = lineWidths;\n\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n\n        // calculate text height\n        lineHeight = lineHeight || fontSize;\n\n        let height;\n        if (h) {\n            height = h;\n        } else {\n            height = lineHeight * (lines.length - 1) + 0.5 * fontSize + Math.max(lineHeight, fontSize) + offsetY;\n        }\n\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n\n        renderInfo.width = width;\n        renderInfo.innerWidth = innerWidth;\n        renderInfo.height = height;\n        renderInfo.fontSize = fontSize;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutEy = cutEy;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.lineWidths = lineWidths;\n        renderInfo.offsetY = offsetY;\n        renderInfo.paddingLeft = paddingLeft;\n        renderInfo.paddingRight = paddingRight;\n        renderInfo.letterSpacing = letterSpacing;\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.ceil(renderInfo.width + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(renderInfo.height);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        let linePositionX;\n        let linePositionY;\n\n        let drawLines = [];\n\n        // Draw lines line by line.\n        for (let i = 0, n = renderInfo.lines.length; i < n; i++) {\n            linePositionX = 0;\n\n            // By default, text is aligned to top\n            linePositionY = (i * renderInfo.lineHeight) + renderInfo.offsetY;\n\n            if (this._settings.verticalAlign == 'middle') {\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\n            } else if (this._settings.verticalAlign == 'bottom') {\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\n            }\n\n            if (this._settings.textAlign === 'right') {\n                linePositionX += (renderInfo.innerWidth - renderInfo.lineWidths[i]);\n            } else if (this._settings.textAlign === 'center') {\n                linePositionX += ((renderInfo.innerWidth - renderInfo.lineWidths[i]) / 2);\n            }\n            linePositionX += renderInfo.paddingLeft;\n\n            drawLines.push({text: renderInfo.lines[i], x: linePositionX, y: linePositionY, w: renderInfo.lineWidths[i]});\n        }\n\n        // Highlight.\n        if (this._settings.highlight) {\n            let color = this._settings.highlightColor || 0x00000000;\n\n            let hlHeight = (this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5);\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = (this._settings.highlightPaddingLeft !== null ? this._settings.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (this._settings.highlightPaddingRight !== null ? this._settings.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                let drawLine = drawLines[i];\n                this._context.fillRect((drawLine.x - hlPaddingLeft), (drawLine.y - renderInfo.offsetY + offset), (drawLine.w + hlPaddingRight + hlPaddingLeft), hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        this._context.fillStyle = StageUtils.getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            let drawLine = drawLines[i];\n\n            if (renderInfo.letterSpacing === 0) {\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n            } else {\n                const textSplit = drawLine.text.split('');\n                let x = drawLine.x;\n                for (let i = 0, j = textSplit.length; i < j; i++) {\n                    this._context.fillText(textSplit[i], x, drawLine.y);\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\n                }\n            }\n        }\n\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        this.renderInfo = renderInfo;\n    };\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this._context.measureText(suffix).width;\n        const wordLen = word.length\n        const wordWidth = this._context.measureText(word).width;\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '');\n    }\n\n    /**\n     * Applies newlines to a string to have it optimally fit into the horizontal\n     * bounds set by the Text object's wordWrapWidth property.\n     */\n    wrapText(text, wordWrapWidth, letterSpacing) {\n        // Greedy wrapping algorithm that will wrap words as the line grows longer.\n        // than its horizontal bounds.\n        let lines = text.split(/\\r?\\n/g);\n        let allLines = [];\n        let realNewlines = [];\n        for (let i = 0; i < lines.length; i++) {\n            let resultLines = [];\n            let result = '';\n            let spaceLeft = wordWrapWidth;\n            let words = lines[i].split(' ');\n            for (let j = 0; j < words.length; j++) {\n                const wordWidth = this.measureText(words[j], letterSpacing);\n                const wordWidthWithSpace = wordWidth + this.measureText(' ',letterSpacing);\n                if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                    // Skip printing the newline if it's the first word of the line that is.\n                    // greater than the word wrap width.\n                    if (j > 0) {\n                        resultLines.push(result);\n                        result = '';\n                    }\n                    result += words[j];\n                    spaceLeft = wordWrapWidth - wordWidth;\n                }\n                else {\n                    spaceLeft -= wordWidthWithSpace;\n                    result += ' ' + words[j];\n                }\n            }\n\n            if (result) {\n                resultLines.push(result);\n                result = '';\n            }\n\n            allLines = allLines.concat(resultLines);\n\n            if (i < lines.length - 1) {\n                realNewlines.push(allLines.length);\n            }\n        }\n\n        return {l: allLines, n: realNewlines};\n    };\n\n    measureText(word, space = 0) {\n        if (!space) {\n            return this._context.measureText(word).width;\n        }\n        return word.split('').reduce((acc, char) => {\n            return acc + this._context.measureText(char).width + space;\n        }, 0);\n    }\n    \n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class TextTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        // We use the stage precision as the default precision in case of a text texture.\n        this._precision = this.stage.getOption('precision');\n    }\n\n    static renderer(stage, canvas, settings) {\n        return new TextTextureRenderer(stage, canvas, settings);\n    }\n\n    get text() {\n        return this._text;\n    }\n\n    set text(v) {\n        if (this._text !== v) {\n            this._text = \"\" + v;\n            this._changed();\n        }\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (this._w !== v) {\n            this._w = v;\n            this._changed();\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (this._h !== v) {\n            this._h = v;\n            this._changed();\n        }\n    }\n\n    get fontStyle() {\n        return this._fontStyle;\n    }\n\n    set fontStyle(v) {\n        if (this._fontStyle !== v) {\n            this._fontStyle = v;\n            this._changed();\n        }\n    }\n\n    get fontSize() {\n        return this._fontSize;\n    }\n\n    set fontSize(v) {\n        if (this._fontSize !== v) {\n            this._fontSize = v;\n            this._changed();\n        }\n    }\n\n    get fontFace() {\n        return this._fontFace;\n    }\n\n    set fontFace(v) {\n        if (this._fontFace !== v) {\n            this._fontFace = v;\n            this._changed();\n        }\n    }\n\n    get wordWrap() {\n        return this._wordWrap;\n    }\n\n    set wordWrap(v) {\n        if (this._wordWrap !== v) {\n            this._wordWrap = v;\n            this._changed();\n        }\n    }\n\n    get wordWrapWidth() {\n        return this._wordWrapWidth;\n    }\n\n    set wordWrapWidth(v) {\n        if (this._wordWrapWidth !== v) {\n            this._wordWrapWidth = v;\n            this._changed();\n        }\n    }\n\n    get textOverflow() {\n        return this._textOverflow;\n    }\n\n    set textOverflow(v) {\n        if (v != this._textOverflow) {\n            this._textOverflow = v;\n            this._changed();\n        }\n    }\n\n    get lineHeight() {\n        return this._lineHeight;\n    }\n\n    set lineHeight(v) {\n        if (this._lineHeight !== v) {\n            this._lineHeight = v;\n            this._changed();\n        }\n    }\n\n    get textBaseline() {\n        return this._textBaseline;\n    }\n\n    set textBaseline(v) {\n        if (this._textBaseline !== v) {\n            this._textBaseline = v;\n            this._changed();\n        }\n    }\n\n    get textAlign() {\n        return this._textAlign;\n    }\n\n    set textAlign(v) {\n        if (this._textAlign !== v) {\n            this._textAlign = v;\n            this._changed();\n        }\n    }\n\n    get verticalAlign() {\n        return this._verticalAlign;\n    }\n\n    set verticalAlign(v) {\n        if (this._verticalAlign !== v) {\n            this._verticalAlign = v;\n            this._changed();\n        }\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        if (this._offsetY !== v) {\n            this._offsetY = v;\n            this._changed();\n        }\n    }\n\n    get maxLines() {\n        return this._maxLines;\n    }\n\n    set maxLines(v) {\n        if (this._maxLines !== v) {\n            this._maxLines = v;\n            this._changed();\n        }\n    }\n\n    get maxLinesSuffix() {\n        return this._maxLinesSuffix;\n    }\n\n    set maxLinesSuffix(v) {\n        if (this._maxLinesSuffix !== v) {\n            this._maxLinesSuffix = v;\n            this._changed();\n        }\n    }\n\n    get textColor() {\n        return this._textColor;\n    }\n\n    set textColor(v) {\n        if (this._textColor !== v) {\n            this._textColor = v;\n            this._changed();\n        }\n    }\n\n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingLeft(v) {\n        if (this._paddingLeft !== v) {\n            this._paddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingRight(v) {\n        if (this._paddingRight !== v) {\n            this._paddingRight = v;\n            this._changed();\n        }\n    }\n\n    get shadow() {\n        return this._shadow;\n    }\n\n    set shadow(v) {\n        if (this._shadow !== v) {\n            this._shadow = v;\n            this._changed();\n        }\n    }\n\n    get shadowColor() {\n        return this._shadowColor;\n    }\n\n    set shadowColor(v) {\n        if (this._shadowColor !== v) {\n            this._shadowColor = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetX() {\n        return this._shadowOffsetX;\n    }\n\n    set shadowOffsetX(v) {\n        if (this._shadowOffsetX !== v) {\n            this._shadowOffsetX = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetY() {\n        return this._shadowOffsetY;\n    }\n\n    set shadowOffsetY(v) {\n        if (this._shadowOffsetY !== v) {\n            this._shadowOffsetY = v;\n            this._changed();\n        }\n    }\n\n    get shadowBlur() {\n        return this._shadowBlur;\n    }\n\n    set shadowBlur(v) {\n        if (this._shadowBlur !== v) {\n            this._shadowBlur = v;\n            this._changed();\n        }\n    }\n\n    get highlight() {\n        return this._highlight;\n    }\n\n    set highlight(v) {\n        if (this._highlight !== v) {\n            this._highlight = v;\n            this._changed();\n        }\n    }\n\n    get highlightHeight() {\n        return this._highlightHeight;\n    }\n\n    set highlightHeight(v) {\n        if (this._highlightHeight !== v) {\n            this._highlightHeight = v;\n            this._changed();\n        }\n    }\n\n    get highlightColor() {\n        return this._highlightColor;\n    }\n\n    set highlightColor(v) {\n        if (this._highlightColor !== v) {\n            this._highlightColor = v;\n            this._changed();\n        }\n    }\n\n    get highlightOffset() {\n        return this._highlightOffset;\n    }\n\n    set highlightOffset(v) {\n        if (this._highlightOffset !== v) {\n            this._highlightOffset = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingLeft() {\n        return this._highlightPaddingLeft;\n    }\n\n    set highlightPaddingLeft(v) {\n        if (this._highlightPaddingLeft !== v) {\n            this._highlightPaddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingRight() {\n        return this._highlightPaddingRight;\n    }\n\n    set highlightPaddingRight(v) {\n        if (this._highlightPaddingRight !== v) {\n            this._highlightPaddingRight = v;\n            this._changed();\n        }\n    }\n\n    get cutSx() {\n        return this._cutSx;\n    }\n\n    set cutSx(v) {\n        if (this._cutSx !== v) {\n            this._cutSx = v;\n            this._changed();\n        }\n    }\n\n    get cutEx() {\n        return this._cutEx;\n    }\n\n    set cutEx(v) {\n        if (this._cutEx !== v) {\n            this._cutEx = v;\n            this._changed();\n        }\n    }\n\n    get cutSy() {\n        return this._cutSy;\n    }\n\n    set cutSy(v) {\n        if (this._cutSy !== v) {\n            this._cutSy = v;\n            this._changed();\n        }\n    }\n\n    get cutEy() {\n        return this._cutEy;\n    }\n\n    set cutEy(v) {\n        if (this._cutEy !== v) {\n            this._cutEy = v;\n            this._changed();\n        }\n    }\n\n    set letterSpacing(v) {\n        if (this._letterSpacing !== v) {\n            this._letterSpacing = v;\n            this._changed();\n        }\n    }\n\n    get letterSpacing() {\n        return this._letterSpacing;\n    }\n\n    get precision() {\n        return super.precision;\n    }\n\n    set precision(v) {\n        // We actually draw differently when the precision changes.\n        if (this.precision !== v) {\n            super.precision = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this.text;\n    }\n\n    _getLookupId() {\n        let parts = [];\n\n        if (this.w !== 0) parts.push(\"w \" + this.w);\n        if (this.h !== 0) parts.push(\"h \" + this.h);\n        if (this.fontStyle !== \"normal\") parts.push(\"fS\" + this.fontStyle);\n        if (this.fontSize !== 40) parts.push(\"fs\" + this.fontSize);\n        if (this.fontFace !== null) parts.push(\"ff\" + (Array.isArray(this.fontFace) ? this.fontFace.join(\",\") : this.fontFace));\n        if (this.wordWrap !== true) parts.push(\"wr\" + (this.wordWrap ? 1 : 0));\n        if (this.wordWrapWidth !== 0) parts.push(\"ww\" + this.wordWrapWidth);\n        if (this.textOverflow != \"\") parts.push(\"to\" + this.textOverflow);\n        if (this.lineHeight !== null) parts.push(\"lh\" + this.lineHeight);\n        if (this.textBaseline !== \"alphabetic\") parts.push(\"tb\" + this.textBaseline);\n        if (this.textAlign !== \"left\") parts.push(\"ta\" + this.textAlign);\n        if (this.verticalAlign !== \"top\") parts.push(\"va\" + this.verticalAlign);\n        if (this.offsetY !== null) parts.push(\"oy\" + this.offsetY);\n        if (this.maxLines !== 0) parts.push(\"ml\" + this.maxLines);\n        if (this.maxLinesSuffix !== \"..\") parts.push(\"ms\" + this.maxLinesSuffix);\n        parts.push(\"pc\" + this.precision);\n        if (this.textColor !== 0xffffffff) parts.push(\"co\" + this.textColor.toString(16));\n        if (this.paddingLeft !== 0) parts.push(\"pl\" + this.paddingLeft);\n        if (this.paddingRight !== 0) parts.push(\"pr\" + this.paddingRight);\n        if (this.shadow !== false) parts.push(\"sh\" + (this.shadow ? 1 : 0));\n        if (this.shadowColor !== 0xff000000) parts.push(\"sc\" + this.shadowColor.toString(16));\n        if (this.shadowOffsetX !== 0) parts.push(\"sx\" + this.shadowOffsetX);\n        if (this.shadowOffsetY !== 0) parts.push(\"sy\" + this.shadowOffsetY);\n        if (this.shadowBlur !== 5) parts.push(\"sb\" + this.shadowBlur);\n        if (this.highlight !== false) parts.push(\"hL\" + (this.highlight ? 1 : 0));\n        if (this.highlightHeight !== 0) parts.push(\"hh\" + this.highlightHeight);\n        if (this.highlightColor !== 0xff000000) parts.push(\"hc\" + this.highlightColor.toString(16));\n        if (this.highlightOffset !== null) parts.push(\"ho\" + this.highlightOffset);\n        if (this.highlightPaddingLeft !== null) parts.push(\"hl\" + this.highlightPaddingLeft);\n        if (this.highlightPaddingRight !== null) parts.push(\"hr\" + this.highlightPaddingRight);\n        if (this.letterSpacing !== null) parts.push(\"ls\" + this.letterSpacing);\n\n        if (this.cutSx) parts.push(\"csx\" + this.cutSx);\n        if (this.cutEx) parts.push(\"cex\" + this.cutEx);\n        if (this.cutSy) parts.push(\"csy\" + this.cutSy);\n        if (this.cutEy) parts.push(\"cey\" + this.cutEy);\n\n        let id = \"TX$\" + parts.join(\"|\") + \":\" + this.text;\n        return id;\n    }\n\n    _getSourceLoader() {\n        const args = this.cloneArgs();\n\n        // Inherit font face from stage.\n        if (args.fontFace === null) {\n            args.fontFace = this.stage.getOption('defaultFontFace');\n        }\n\n        return function (cb) {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            const renderer = new TextTextureRenderer(this.stage, canvas, args);\n            const p = renderer.draw();\n\n            if (p) {\n                p.then(() => {\n                    /* FIXME: on some platforms (e.g. RPI), throttling text textures cause artifacts */\n                    cb(null, Object.assign({\n                        renderInfo: renderer.renderInfo,\n                        throttle: false\n                    }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n                }).catch((err) => {\n                    cb(err);\n                });\n            } else {\n                cb(null, Object.assign({\n                    renderInfo: renderer.renderInfo,\n                    throttle: false\n                }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n            }\n        };\n    }\n\n\n    getNonDefaults() {\n        const nonDefaults = super.getNonDefaults();\n        if (this.text !== \"\") nonDefaults['text'] = this.text;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.fontStyle !== \"normal\") nonDefaults['fontStyle'] = this.fontStyle;\n        if (this.fontSize !== 40) nonDefaults[\"fontSize\"] = this.fontSize;\n        if (this.fontFace !== null) nonDefaults[\"fontFace\"] = this.fontFace;\n        if (this.wordWrap !== true) nonDefaults[\"wordWrap\"] = this.wordWrap;\n        if (this.wordWrapWidth !== 0) nonDefaults[\"wordWrapWidth\"] = this.wordWrapWidth;\n        if (this.textOverflow != \"\") nonDefaults[\"textOverflow\"] = this.textOverflow;\n        if (this.lineHeight !== null) nonDefaults[\"lineHeight\"] = this.lineHeight;\n        if (this.textBaseline !== \"alphabetic\") nonDefaults[\"textBaseline\"] = this.textBaseline;\n        if (this.textAlign !== \"left\") nonDefaults[\"textAlign\"] = this.textAlign;\n        if (this.verticalAlign !== \"top\") nonDefaults[\"verticalAlign\"] = this.verticalAlign;\n        if (this.offsetY !== null) nonDefaults[\"offsetY\"] = this.offsetY;\n        if (this.maxLines !== 0) nonDefaults[\"maxLines\"] = this.maxLines;\n        if (this.maxLinesSuffix !== \"..\") nonDefaults[\"maxLinesSuffix\"] = this.maxLinesSuffix;\n        if (this.precision !== this.stage.getOption('precision')) nonDefaults[\"precision\"] = this.precision;\n        if (this.textColor !== 0xffffffff) nonDefaults[\"textColor\"] = this.textColor;\n        if (this.paddingLeft !== 0) nonDefaults[\"paddingLeft\"] = this.paddingLeft;\n        if (this.paddingRight !== 0) nonDefaults[\"paddingRight\"] = this.paddingRight;\n        if (this.shadow !== false) nonDefaults[\"shadow\"] = this.shadow;\n        if (this.shadowColor !== 0xff000000) nonDefaults[\"shadowColor\"] = this.shadowColor;\n        if (this.shadowOffsetX !== 0) nonDefaults[\"shadowOffsetX\"] = this.shadowOffsetX;\n        if (this.shadowOffsetY !== 0) nonDefaults[\"shadowOffsetY\"] = this.shadowOffsetY;\n        if (this.shadowBlur !== 5) nonDefaults[\"shadowBlur\"] = this.shadowBlur;\n        if (this.highlight !== false) nonDefaults[\"highlight\"] = this.highlight;\n        if (this.highlightHeight !== 0) nonDefaults[\"highlightHeight\"] = this.highlightHeight;\n        if (this.highlightColor !== 0xff000000) nonDefaults[\"highlightColor\"] = this.highlightColor;\n        if (this.highlightOffset !== 0) nonDefaults[\"highlightOffset\"] = this.highlightOffset;\n        if (this.highlightPaddingLeft !== 0) nonDefaults[\"highlightPaddingLeft\"] = this.highlightPaddingLeft;\n        if (this.highlightPaddingRight !== 0) nonDefaults[\"highlightPaddingRight\"] = this.highlightPaddingRight;\n        if (this.letterSpacing !== 0) nonDefaults[\"letterSpacing\"] = this.letterSpacing;\n\n        if (this.cutSx) nonDefaults[\"cutSx\"] = this.cutSx;\n        if (this.cutEx) nonDefaults[\"cutEx\"] = this.cutEx;\n        if (this.cutSy) nonDefaults[\"cutSy\"] = this.cutSy;\n        if (this.cutEy) nonDefaults[\"cutEy\"] = this.cutEy;\n        return nonDefaults;\n    }\n\n    cloneArgs() {\n        let obj = {};\n        obj.text = this._text;\n        obj.w = this._w;\n        obj.h = this._h;\n        obj.fontStyle = this._fontStyle;\n        obj.fontSize = this._fontSize;\n        obj.fontFace = this._fontFace;\n        obj.wordWrap = this._wordWrap;\n        obj.wordWrapWidth = this._wordWrapWidth;\n        obj.textOverflow = this._textOverflow;\n        obj.lineHeight = this._lineHeight;\n        obj.textBaseline = this._textBaseline;\n        obj.textAlign = this._textAlign;\n        obj.verticalAlign = this._verticalAlign;\n        obj.offsetY = this._offsetY;\n        obj.maxLines = this._maxLines;\n        obj.maxLinesSuffix = this._maxLinesSuffix;\n        obj.precision = this._precision;\n        obj.textColor = this._textColor;\n        obj.paddingLeft = this._paddingLeft;\n        obj.paddingRight = this._paddingRight;\n        obj.shadow = this._shadow;\n        obj.shadowColor = this._shadowColor;\n        obj.shadowOffsetX = this._shadowOffsetX;\n        obj.shadowOffsetY = this._shadowOffsetY;\n        obj.shadowBlur = this._shadowBlur;\n        obj.highlight = this._highlight;\n        obj.highlightHeight = this._highlightHeight;\n        obj.highlightColor = this._highlightColor;\n        obj.highlightOffset = this._highlightOffset;\n        obj.highlightPaddingLeft = this._highlightPaddingLeft;\n        obj.highlightPaddingRight = this._highlightPaddingRight;\n        obj.letterSpacing = this._letterSpacing;\n        obj.cutSx = this._cutSx;\n        obj.cutEx = this._cutEx;\n        obj.cutSy = this._cutSy;\n        obj.cutEy = this._cutEy;\n        return obj;\n    }\n\n\n}\n\n// Because there are so many properties, we prefer to use the prototype for default values.\n// This causes a decrease in performance, but also a decrease in memory usage.\nlet proto = TextTexture.prototype;\nproto._text = \"\";\nproto._w = 0;\nproto._h = 0;\nproto._fontStyle = \"normal\";\nproto._fontSize = 40;\nproto._fontFace = null;\nproto._wordWrap = true;\nproto._wordWrapWidth = 0;\nproto._textOverflow = \"\";\nproto._lineHeight = null;\nproto._textBaseline = \"alphabetic\";\nproto._textAlign = \"left\";\nproto._verticalAlign = \"top\";\nproto._offsetY = null;\nproto._maxLines = 0;\nproto._maxLinesSuffix = \"..\";\nproto._textColor = 0xFFFFFFFF;\nproto._paddingLeft = 0;\nproto._paddingRight = 0;\nproto._shadow = false;\nproto._shadowColor = 0xFF000000;\nproto._shadowOffsetX = 0;\nproto._shadowOffsetY = 0;\nproto._shadowBlur = 5;\nproto._highlight = false;\nproto._highlightHeight = 0;\nproto._highlightColor = 0xFF000000;\nproto._highlightOffset = 0;\nproto._highlightPaddingLeft = 0;\nproto._highlightPaddingRight = 0;\nproto._letterSpacing = 0;\nproto._cutSx = 0;\nproto._cutEx = 0;\nproto._cutSy = 0;\nproto._cutEy = 0;\n\n\nimport TextTextureRenderer from \"./TextTextureRenderer.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class SourceTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._textureSource = undefined;\n    }\n\n    get textureSource() {\n        return this._textureSource;\n    }\n\n    set textureSource(v) {\n        if (v !== this._textureSource) {\n            if (v.isResultTexture) {\n                // In case of a result texture, automatically inherit the precision.\n                this._precision = this.stage.getRenderPrecision();\n            }\n            this._textureSource = v;\n            this._changed();\n        }\n    }\n\n    _getTextureSource() {\n        return this._textureSource;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\n\nexport default class Transition extends EventEmitter {\n\n    constructor(manager, settings, element, property) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._getter = element.constructor.getGetter(property);\n        this._setter = element.constructor.getSetter(property);\n\n        this._merger = settings.merger;\n\n        if (!this._merger) {\n            this._merger = element.constructor.getMerger(property);\n        }\n\n        this._startValue = this._getter(this._element);\n        this._targetValue = this._startValue;\n\n        this._p = 1;\n        this._delayLeft = 0;\n    }\n\n    start(targetValue) {\n        this._startValue = this._getter(this._element);\n\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            if (targetValue === this._startValue) {\n                this.reset(targetValue, 1);\n            } else {\n                this._targetValue = targetValue;\n                this._p = 0;\n                this._delayLeft = this._settings.delay;\n                this.emit('start');\n                this.add();\n            }\n        }\n    }\n\n    finish() {\n        if (this._p < 1) {\n            // Value setting and will must be invoked (async) upon next transition cycle.\n            this._p = 1;\n        }\n    }\n\n    stop() {\n        // Just stop where the transition is at.\n        this.emit('stop');\n        this.manager.removeActive(this);\n    }\n\n    pause() {\n        this.stop();\n    }\n\n    play() {\n        this.manager.addActive(this);\n    }\n\n    reset(targetValue, p) {\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = p;\n            this.add();\n        }\n    }\n\n    _updateDrawValue() {\n        this._setter(this._element, this.getDrawValue());\n    }\n\n    add() {\n        this.manager.addActive(this);\n    }\n\n    isAttached() {\n        return this._element.attached;\n    }\n\n    isRunning() {\n        return (this._p < 1.0);\n    }\n\n    progress(dt) {\n        if (!this.isAttached()) {\n            // Skip to end of transition so that it is removed.\n            this._p = 1;\n        }\n\n        if (this.p < 1) {\n            if (this.delayLeft > 0) {\n                this._delayLeft -= dt;\n\n                if (this.delayLeft < 0) {\n                    dt = -this.delayLeft;\n                    this._delayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n\n            if (this._settings.duration == 0) {\n                this._p = 1;\n            } else {\n                this._p += dt / this._settings.duration;\n            }\n            if (this._p >= 1) {\n                // Finished!;\n                this._p = 1;\n            }\n        }\n\n        this._updateDrawValue();\n\n        this.invokeListeners();\n    }\n\n    invokeListeners() {\n        this.emit('progress', this.p);\n        if (this.p === 1) {\n            this.emit('finish');\n        }\n    }\n\n    updateTargetValue(targetValue) {\n        let t = this._settings.timingFunctionImpl(this.p);\n        if (t === 1) {\n            this._targetValue = targetValue;\n        } else if (t === 0) {\n            this._startValue = this._targetValue;\n            this._targetValue = targetValue;\n        } else {\n            this._startValue = targetValue - ((targetValue - this._targetValue) / (1 - t));\n            this._targetValue = targetValue;\n        }\n    }\n\n    getDrawValue() {\n        if (this.p >= 1) {\n            return this.targetValue;\n        } else {\n            let v = this._settings._timingFunctionImpl(this.p);\n            return this._merger(this.targetValue, this.startValue, v);\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n    }\n\n    get startValue() {\n        return this._startValue;\n    }\n\n    get targetValue() {\n        return this._targetValue;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n    set settings(v) {\n        this._settings = v;\n    }\n\n}\n\nTransition.prototype.isTransition = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages a list of objects.\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\n */\nexport default class ObjectList {\n\n    constructor() {\n        this._items = [];\n        this._refs = {}\n    }\n\n    get() {\n        return this._items;\n    }\n\n    get first() {\n        return this._items[0];\n    }\n\n    get last() {\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\n    }\n\n    add(item) {\n        this.addAt(item, this._items.length);\n    }\n\n    addAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex === index) {\n                return item;\n            }\n\n            if (currentIndex != -1) {\n                this.setAt(item, index);\n            } else {\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n                this._items.splice(index, 0, item);\n                this.onAdd(item, index);\n            }\n        } else {\n            throw new Error('addAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    replaceByRef(item) {\n        if (item.ref) {\n            const existingItem = this.getByRef(item.ref);\n            if (!existingItem) {\n                throw new Error('replaceByRef: no item found with reference: ' + item.ref);\n            }\n            this.replace(item, existingItem);\n        } else {\n            throw new Error('replaceByRef: no ref specified in item');\n        }\n        this.addAt(item, this._items.length);\n\n    }\n\n    replace(item, prevItem) {\n        const index = this.getIndex(prevItem);\n        if (index === -1) {\n            throw new Error('replace: The previous item does not exist');\n        }\n        this.setAt(item, index);\n    }\n\n    setAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex != -1) {\n                if (currentIndex !== index) {\n                    const fromIndex = currentIndex;\n                    if (fromIndex !== index) {\n                        this._items.splice(fromIndex, 1);\n                        this._items.splice(index, 0, item);\n                        this.onMove(item, fromIndex, index);\n                    }\n                }\n            } else {\n                if (index < this._items.length) {\n                    if (this._items[index].ref) {\n                        this._refs[this._items[index].ref] = undefined;\n                    }\n                }\n\n                const prevItem = this._items[index];\n\n                // Doesn't exist yet: overwrite current.\n                this._items[index] = item;\n\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n\n                this.onSet(item, index, prevItem);\n            }\n        } else {\n            throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    getAt(index) {\n        return this._items[index];\n    }\n\n    getIndex(item) {\n        return this._items.indexOf(item);\n    }\n\n    remove(item) {\n        let index = this._items.indexOf(item);\n\n        if (index !== -1) {\n            this.removeAt(index);\n        }\n    };\n\n    removeAt(index) {\n        let item = this._items[index];\n\n        if (item.ref) {\n            this._refs[item.ref] = undefined;\n        }\n\n        this._items.splice(index, 1);\n\n        this.onRemove(item, index);\n\n        return item;\n    };\n\n    clear() {\n        let n = this._items.length;\n        if (n) {\n            let prev = this._items;\n            this._items = [];\n            this._refs = {}\n            this.onSync(prev, [], []);\n        }\n    };\n\n    a(o) {\n        if (Utils.isObjectLiteral(o)) {\n            let c = this.createItem(o);\n            c.patch(o);\n            this.add(c);\n            return c;\n        } else if (Array.isArray(o)) {\n            for (let i = 0, n = o.length; i < n; i++) {\n                this.a(o[i]);\n            }\n            return null;\n        } else if (this.isItem(o)) {\n            this.add(o);\n            return o;\n        }\n    };\n\n    get length() {\n        return this._items.length;\n    }\n\n    _getRefs() {\n        return this._refs;\n    }\n\n    getByRef(ref) {\n        return this._refs[ref];\n    }\n\n    clearRef(ref) {\n        delete this._refs[ref];\n    }\n\n    setRef(ref, child) {\n        this._refs[ref] = child;\n    }\n\n    patch(settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            this._setByObject(settings);\n        } else if (Array.isArray(settings)) {\n            this._setByArray(settings);\n        }\n    }\n\n    _setByObject(settings) {\n        // Overrule settings of known referenced items.\n        let refs = this._getRefs();\n        let crefs = Object.keys(settings);\n        for (let i = 0, n = crefs.length; i < n; i++) {\n            let cref = crefs[i];\n            let s = settings[cref];\n\n            let c = refs[cref];\n            if (!c) {\n                if (this.isItem(s)) {\n                    // Replace previous item;\n                    s.ref = cref;\n                    this.add(s);\n                } else {\n                    // Create new item.\n                    c = this.createItem(s);\n                    c.ref = cref;\n                    c.patch(s);\n                    this.add(c);\n                }\n            } else {\n                if (this.isItem(s)) {\n                    if (c !== s) {\n                        // Replace previous item;\n                        let idx = this.getIndex(c);\n                        s.ref = cref;\n                        this.setAt(s, idx);\n                    }\n                } else {\n                    c.patch(s);\n                }\n            }\n        }\n    }\n\n    _equalsArray(array) {\n        let same = true;\n        if (array.length === this._items.length) {\n            for (let i = 0, n = this._items.length; (i < n) && same; i++) {\n                same = same && (this._items[i] === array[i]);\n            }\n        } else {\n            same = false;\n        }\n        return same;\n    }\n\n    _setByArray(array) {\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\n        if (this._equalsArray(array)) {\n            return;\n        }\n\n        for (let i = 0, n = this._items.length; i < n; i++) {\n            this._items[i].marker = true;\n        }\n\n        let refs;\n        let newItems = [];\n        for (let i = 0, n = array.length; i < n; i++) {\n            let s = array[i];\n            if (this.isItem(s)) {\n                s.marker = false;\n                newItems.push(s);\n            } else {\n                let cref = s.ref;\n                let c;\n                if (cref) {\n                    if (!refs) refs = this._getRefs();\n                    c = refs[cref];\n                }\n\n                if (!c) {\n                    // Create new item.\n                    c = this.createItem(s);\n                } else {\n                    c.marker = false;\n                }\n\n                if (Utils.isObjectLiteral(s)) {\n                    c.patch(s);\n                }\n\n                newItems.push(c);\n            }\n        }\n\n        this._setItems(newItems);\n    }\n\n    _setItems(newItems) {\n        let prevItems = this._items;\n        this._items = newItems;\n\n        // Remove the items.\n        let removed = prevItems.filter(item => {let m = item.marker; delete item.marker; return m});\n        let added = newItems.filter(item => (prevItems.indexOf(item) === -1));\n\n        if (removed.length || added.length) {\n            // Recalculate refs.\n            this._refs = {}\n            for (let i = 0, n = this._items.length; i < n; i++) {\n                let ref = this._items[i].ref;\n                if (ref) {\n                    this._refs[ref] = this._items[i];\n                }\n            }\n        }\n\n        this.onSync(removed, added, newItems);\n    }\n\n    sort(f) {\n        const items = this._items.slice();\n        items.sort(f);\n        this._setByArray(items);\n    }\n\n    onAdd(item, index) {\n    }\n\n    onRemove(item, index) {\n    }\n\n    onSync(removed, added, order) {\n    }\n\n    onSet(item, index, prevItem) {\n    }\n\n    onMove(item, fromIndex, toIndex) {\n    }\n\n    createItem(object) {\n        throw new Error(\"ObjectList.createItem must create and return a new object\");\n    }\n\n    isItem(object) {\n        return false;\n    }\n\n    forEach(f) {\n        this.get().forEach(f);\n    }\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"./ObjectList.mjs\";\n\nexport default class ElementChildList extends ObjectList {\n\n    constructor(element) {\n        super();\n        this._element = element;\n    }\n\n    _connectParent(item) {\n        const prevParent = item.parent;\n        if (prevParent && prevParent !== this._element) {\n            // Cleanup in previous child list, without\n            const prevChildList = item.parent.childList;\n            const index = prevChildList.getIndex(item);\n\n            if (item.ref) {\n                prevChildList._refs[item.ref] = undefined;\n            }\n            prevChildList._items.splice(index, 1);\n\n            // Also clean up element core.\n            prevParent.core.removeChildAt(index);\n\n        }\n\n        item._setParent(this._element);\n\n        // We are expecting the caller to sync it to the core.\n    }\n\n    onAdd(item, index) {\n        this._connectParent(item);\n        this._element.core.addChildAt(index, item.core);\n    }\n\n    onRemove(item, index) {\n        item._setParent(null);\n        this._element.core.removeChildAt(index);\n    }\n\n    onSync(removed, added, order) {\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i]._setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            this._connectParent(added[i]);\n        }\n        let gc = i => i.core;\n        this._element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\n    }\n\n    onSet(item, index, prevItem) {\n        prevItem._setParent(null);\n\n        this._connectParent(item);\n        this._element.core.setChildAt(index, item.core);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._element.core.moveChild(fromIndex, toIndex);\n    }\n\n    createItem(object) {\n        if (object.type) {\n            return new object.type(this._element.stage);\n        } else {\n            return this._element.stage.createElement();\n        }\n    }\n\n    isItem(object) {\n        return object.isElement;\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Render tree node.\n */\n\nimport StageUtils from \"./StageUtils.mjs\";\nimport ElementCore from \"./core/ElementCore.mjs\";\nimport Base from \"./Base.mjs\";\n\nimport Utils from \"./Utils.mjs\";\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Element {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.__id = Element.id++;\n\n        this.__start();\n\n        // EventEmitter constructor.\n        this._hasEventListeners = false;\n\n        this.__core = new ElementCore(this);\n\n        /**\n         * A reference that can be used while merging trees.\n         * @type {string}\n         */\n        this.__ref = null;\n\n        /**\n         * An element is attached if it is a descendant of the stage root.\n         * @type {boolean}\n         */\n        this.__attached = false;\n\n        /**\n         * An element is enabled when it is attached and it is visible (worldAlpha > 0).\n         * @type {boolean}\n         */\n        this.__enabled = false;\n\n        /**\n         * An element is active when it is enabled and it is within bounds.\n         * @type {boolean}\n         */\n        this.__active = false;\n\n        /**\n         * @type {Element}\n         */\n        this.__parent = null;\n\n        /**\n         * The texture that is currently set.\n         * @type {Texture}\n         */\n        this.__texture = null;\n\n        /**\n         * The currently displayed texture. While this.texture is loading, this one may be different.\n         * @type {Texture}\n         */\n        this.__displayedTexture = null;\n\n        /**\n         * Tags that can be used to identify/search for a specific element.\n         * @type {String[]}\n         */\n        this.__tags = null;\n\n        /**\n         * The tree's tags mapping.\n         * This contains all elements for all known tags, at all times.\n         * @type {Map}\n         */\n        this.__treeTags = null;\n\n        /**\n         * Creates a tag context: tagged elements in this branch will not be reachable from ancestors of this elements.\n         * @type {boolean}\n         */\n        this.__tagRoot = false;\n\n        /**\n         * (Lazy-initialised) list of children owned by this elements.\n         * @type {ElementChildList}\n         */\n        this.__childList = null;\n\n        this._w = 0;\n\n        this._h = 0;\n    }\n\n    __start() {\n    }\n\n    get id() {\n        return this.__id;\n    }\n\n    set ref(ref) {\n        if (this.__ref !== ref) {\n            const charcode = ref.charCodeAt(0);\n            if (!Utils.isUcChar(charcode)) {\n                this._throwError(\"Ref must start with an upper case character: \" + ref);\n            }\n            if (this.__ref !== null) {\n                this.removeTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.clearRef(this.__ref);\n                }\n            }\n\n            this.__ref = ref;\n\n            if (this.__ref) {\n                this._addTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.setRef(this.__ref, this);\n                }\n            }\n        }\n    }\n\n    get ref() {\n        return this.__ref;\n    }\n\n    get core() {\n        return this.__core;\n    }\n\n    setAsRoot() {\n        this.__core.setAsRoot();\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n    }\n\n    get isRoot() {\n        return this.__core.isRoot;\n    }\n\n    _setParent(parent) {\n        if (this.__parent === parent) return;\n\n        if (this.__parent) {\n            this._unsetTagsParent();\n        }\n\n        this.__parent = parent;\n\n        if (parent) {\n            this._setTagsParent();\n        }\n\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.isRoot && parent) {\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\n        }\n    };\n\n    getDepth() {\n        let depth = 0;\n\n        let p = this.__parent;\n        while(p) {\n            depth++;\n            p = p.__parent;\n        }\n\n        return depth;\n    };\n\n    getAncestor(l) {\n        let p = this;\n        while (l > 0 && p.__parent) {\n            p = p.__parent;\n            l--;\n        }\n        return p;\n    };\n\n    getAncestorAtDepth(depth) {\n        let levels = this.getDepth() - depth;\n        if (levels < 0) {\n            return null;\n        }\n        return this.getAncestor(levels);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while(p = p.parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    getSharedAncestor(c) {\n        let o1 = this;\n        let o2 = c;\n        let l1 = o1.getDepth();\n        let l2 = o2.getDepth();\n        if (l1 > l2) {\n            o1 = o1.getAncestor(l1 - l2);\n        } else if (l2 > l1) {\n            o2 = o2.getAncestor(l2 - l1);\n        }\n\n        do {\n            if (o1 === o2) {\n                return o1;\n            }\n\n            o1 = o1.__parent;\n            o2 = o2.__parent;\n        } while (o1 && o2);\n\n        return null;\n    };\n\n    get attached() {\n        return this.__attached;\n    }\n\n    get enabled() {\n        return this.__enabled;\n    }\n\n    get active() {\n        return this.__active;\n    }\n\n    _isAttached() {\n        return (this.__parent ? this.__parent.__attached : (this.stage.root === this));\n    };\n\n    _isEnabled() {\n        return this.__core.visible && (this.__core.alpha > 0) && (this.__parent ? this.__parent.__enabled : (this.stage.root === this));\n    };\n\n    _isActive() {\n        return this._isEnabled() && this.withinBoundsMargin;\n    };\n\n    /**\n     * Updates the 'attached' flag for this branch.\n     */\n    _updateAttachedFlag() {\n        let newAttached = this._isAttached();\n        if (this.__attached !== newAttached) {\n            this.__attached = newAttached;\n\n            if (newAttached) {\n                this._onSetup();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateAttachedFlag();\n                    }\n                }\n            }\n\n            if (newAttached) {\n                this._onAttach();\n            } else {\n                this._onDetach();\n            }\n        }\n    };\n\n    /**\n     * Updates the 'enabled' flag for this branch.\n     */\n    _updateEnabledFlag() {\n        let newEnabled = this._isEnabled();\n        if (this.__enabled !== newEnabled) {\n            if (newEnabled) {\n                this._onEnabled();\n                this._setEnabledFlag();\n            } else {\n                this._onDisabled();\n                this._unsetEnabledFlag();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateEnabledFlag();\n                    }\n                }\n            }\n        }\n    };\n\n    _setEnabledFlag() {\n        this.__enabled = true;\n\n        // Force re-check of texture because dimensions might have changed (cutting).\n        this._updateDimensions();\n        this._updateTextureCoords();\n\n        if (this.__texture) {\n            this.__texture.addElement(this);\n        }\n\n        if (this.withinBoundsMargin) {\n            this._setActiveFlag();\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.addElement(this.__core);\n        }\n\n    }\n\n    _unsetEnabledFlag() {\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n\n        if (this.__texture) {\n            this.__texture.removeElement(this);\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.removeElement(this.__core);\n        }\n\n        if (this._texturizer) {\n            this.texturizer.filters.forEach(filter => filter.removeElement(this.__core));\n        }\n\n        this.__enabled = false;\n    }\n\n    _setActiveFlag() {\n        this.__active = true;\n\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\n        if (this.__texture) {\n            this.__texture.incActiveCount();\n        }\n\n        if (this.__texture) {\n            this._enableTexture();\n        }\n        this._onActive();\n    }\n\n    _unsetActiveFlag() {\n        if (this.__texture) {\n            this.__texture.decActiveCount();\n        }\n\n        this.__active = false;\n        if (this.__texture) {\n            this._disableTexture();\n        }\n\n        if (this._hasTexturizer()) {\n            this.texturizer.deactivate();\n        }\n\n        this._onInactive();\n    }\n\n    _onSetup() {\n    }\n\n    _onAttach() {\n    }\n\n    _onDetach() {\n    }\n\n    _onEnabled() {\n    }\n\n    _onDisabled() {\n    }\n\n    _onActive() {\n    }\n\n    _onInactive() {\n    }\n\n    _onResize() {\n    }\n\n    _getRenderWidth() {\n        if (this._w) {\n            return this._w;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderWidth();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderWidth();\n        } else {\n            return 0;\n        }\n    };\n\n    _getRenderHeight() {\n        if (this._h) {\n            return this._h;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderHeight();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderHeight();\n        } else {\n            return 0;\n        }\n    };\n\n    get renderWidth() {\n        if (this.__enabled) {\n            // Render width is only maintained if this element is enabled.\n            return this.__core.getRenderWidth();\n        } else {\n            return this._getRenderWidth();\n        }\n    }\n\n    get renderHeight() {\n        if (this.__enabled) {\n            return this.__core.getRenderHeight();\n        } else {\n            return this._getRenderHeight();\n        }\n    }\n\n    get finalX() {\n        return this.__core.x;\n    }\n\n    get finalY() {\n        return this.__core.y;\n    }\n\n    get finalW() {\n        return this.__core.w;\n    }\n\n    get finalH() {\n        return this.__core.h;\n    }\n\n    textureIsLoaded() {\n        return this.__texture && this.__texture.isLoaded();\n    }\n\n    loadTexture() {\n        if (this.__texture) {\n            this.__texture.load();\n\n            if (!this.__texture.isUsed() || !this._isEnabled()) {\n                // Loading the texture will have no effect on the dimensions of this element.\n                // Manually update them, so that calcs can be performed immediately in userland.\n                this._updateDimensions();\n            }\n        }\n    }\n\n    _enableTextureError() {\n        // txError event should automatically be re-triggered when a element becomes active.\n        const loadError = this.__texture.loadError;\n        if (loadError) {\n            this.emit('txError', loadError, this.__texture._source);\n        }\n    }\n\n    _enableTexture() {\n        if (this.__texture.isLoaded()) {\n            this._setDisplayedTexture(this.__texture);\n        } else {\n            // We don't want to retain the old 'ghost' image as it wasn't visible anyway.\n            this._setDisplayedTexture(null);\n\n            this._enableTextureError();\n        }\n    }\n\n    _disableTexture() {\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\n        // mw, mh for checking within bounds.\n        this._setDisplayedTexture(null);\n    }\n\n    get texture() {\n        return this.__texture;\n    }\n\n    set texture(v) {\n        let texture;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                texture = new v.type(this.stage);\n            } else {\n                texture = this.texture;\n            }\n\n            if (texture) {\n                Base.patchObject(texture, v);\n            }\n        } else if (!v) {\n            texture = null;\n        } else {\n            if (v.isTexture) {\n                texture = v;\n            } else if (v.isTextureSource) {\n                texture = new SourceTexture(this.stage);\n                texture.textureSource = v;\n            } else {\n                console.error(\"Please specify a texture type.\");\n                return;\n            }\n        }\n\n        const prevTexture = this.__texture;\n        if (texture !== prevTexture) {\n            this.__texture = texture;\n\n            if (this.__texture) {\n                if (this.__enabled) {\n                    this.__texture.addElement(this);\n\n                    if (this.withinBoundsMargin) {\n                        if (this.__texture.isLoaded()) {\n                            this._setDisplayedTexture(this.__texture);\n                        } else {\n                            this._enableTextureError();\n                        }\n                    }\n                }\n            } else {\n                // Make sure that current texture is cleared when the texture is explicitly set to null.\n                this._setDisplayedTexture(null);\n            }\n\n            if (prevTexture && prevTexture !== this.__displayedTexture) {\n                prevTexture.removeElement(this);\n            }\n\n            this._updateDimensions();\n        }\n    }\n\n    get displayedTexture() {\n        return this.__displayedTexture;\n    }\n\n    _setDisplayedTexture(v) {\n        let prevTexture = this.__displayedTexture;\n\n        if (prevTexture && (v !== prevTexture)) {\n            if (this.__texture !== prevTexture) {\n                // The old displayed texture is deprecated.\n                prevTexture.removeElement(this);\n            }\n        }\n\n        const prevSource = this.__core.displayedTextureSource ? this.__core.displayedTextureSource._source : null;\n        const sourceChanged = (v ? v._source : null) !== prevSource;\n\n        this.__displayedTexture = v;\n        this._updateDimensions();\n\n        if (this.__displayedTexture) {\n            if (sourceChanged) {\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\n                this._updateTextureCoords();\n                this.__core.setDisplayedTextureSource(this.__displayedTexture._source);\n            }\n        } else {\n            this.__core.setDisplayedTextureSource(null);\n        }\n\n        if (sourceChanged) {\n            if (this.__displayedTexture) {\n                this.emit('txLoaded', this.__displayedTexture);\n            } else {\n                this.emit('txUnloaded', this.__displayedTexture);\n            }\n        }\n    }\n\n    onTextureSourceLoaded() {\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\n        if (this.active) {\n            // We may be dealing with a texture reloading, so we must force update.\n            this._setDisplayedTexture(this.__texture);\n        }\n    };\n\n    onTextureSourceLoadError(e) {\n        this.emit('txError', e, this.__texture._source);\n    };\n\n    forceRenderUpdate() {\n        this.__core.setHasRenderUpdates(3);\n    }\n\n    onDisplayedTextureClippingChanged() {\n        this._updateDimensions();\n        this._updateTextureCoords();\n    };\n\n    onPrecisionChanged() {\n        this._updateDimensions();\n    };\n\n    onDimensionsChanged(w, h) {\n        if (this.texture instanceof TextTexture) {\n            this.texture.w = w;\n            this.texture.h = h;\n            this.w = w;\n            this.h = h;\n        }\n    }\n\n    _updateDimensions() {\n        let w = this._getRenderWidth();\n        let h = this._getRenderHeight();\n\n        let unknownSize = false;\n        if (!w || !h) {\n            if (!this.__displayedTexture && this.__texture) {\n                // We use a 'max width' replacement instead in the ElementCore calcs.\n                // This makes sure that it is able to determine withinBounds.\n                w = w || this.__texture.mw;\n                h = h || this.__texture.mh;\n\n                if ((!w || !h) && this.__texture.isAutosizeTexture()) {\n                    unknownSize = true;\n                }\n            }\n        }\n\n        if (this.__core.setDimensions(w, h, unknownSize)) {\n            this._onResize();\n        }\n    }\n\n    _updateTextureCoords() {\n        if (this.displayedTexture && this.displayedTexture._source) {\n            let displayedTexture = this.displayedTexture;\n            let displayedTextureSource = this.displayedTexture._source;\n\n            let tx1 = 0, ty1 = 0, tx2 = 1.0, ty2 = 1.0;\n            if (displayedTexture.clipping) {\n                // Apply texture clipping.\n                let w = displayedTextureSource.getRenderWidth();\n                let h = displayedTextureSource.getRenderHeight();\n                let iw, ih, rw, rh;\n                iw = 1 / w;\n                ih = 1 / h;\n\n                if (displayedTexture.pw) {\n                    rw = (displayedTexture.pw) * iw;\n                } else {\n                    rw = (w - displayedTexture.px) * iw;\n                }\n\n                if (displayedTexture.ph) {\n                    rh = displayedTexture.ph * ih;\n                } else {\n                    rh = (h - displayedTexture.py) * ih;\n                }\n\n                iw *= (displayedTexture.px);\n                ih *= (displayedTexture.py);\n\n                tx1 = iw;\n                ty1 = ih;\n                tx2 = tx2 * rw + iw;\n                ty2 = ty2 * rh + ih;\n\n                tx1 = Math.max(0, tx1);\n                ty1 = Math.max(0, ty1);\n                tx2 = Math.min(1, tx2);\n                ty2 = Math.min(1, ty2);\n            }\n\n            if (displayedTextureSource._flipTextureY) {\n                let tempty = ty2;\n                ty2 = ty1;\n                ty1 = tempty;\n            }\n            this.__core.setTextureCoords(tx1, ty1, tx2, ty2);\n        }\n    }\n\n    getCornerPoints() {\n        return this.__core.getCornerPoints();\n    }\n\n    _unsetTagsParent() {\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                // Remove from treeTags.\n                let p = this;\n                while (p = p.__parent) {\n                    let parentTreeTags = p.__treeTags.get(tag);\n                    parentTreeTags.delete(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        let tags = null;\n        let n = 0;\n        if (this.__treeTags) {\n            if (!this.__tagRoot) {\n                tags = Utils.iteratorToArray(this.__treeTags.keys());\n                n = tags.length;\n\n                if (n > 0) {\n                    for (let i = 0; i < n; i++) {\n                        let tagSet = this.__treeTags.get(tags[i]);\n\n                        // Remove from treeTags.\n                        let p = this;\n                        while ((p = p.__parent)) {\n                            let parentTreeTags = p.__treeTags.get(tags[i]);\n\n                            tagSet.forEach(function (comp) {\n                                parentTreeTags.delete(comp);\n                            });\n\n                            if (p.__tagRoot) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    _setTagsParent() {\n        // Just copy over the 'local' tags.\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                let p = this;\n                while (p = p.__parent) {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        if (this.__treeTags && this.__treeTags.size) {\n            if (!this.__tagRoot) {\n                this.__treeTags.forEach((tagSet, tag) => {\n                    let p = this;\n                    while (!p.__tagRoot && (p = p.__parent)) {\n                        if (p.__tagRoot) {\n                            // Do not copy all subs.\n                        }\n                        if (!p.__treeTags) {\n                            p.__treeTags = new Map();\n                        }\n\n                        let s = p.__treeTags.get(tag);\n                        if (!s) {\n                            s = new Set();\n                            p.__treeTags.set(tag, s);\n                        }\n\n                        tagSet.forEach(function (comp) {\n                            s.add(comp);\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n\n    _getByTag(tag) {\n        if (!this.__treeTags) {\n            return [];\n        }\n        let t = this.__treeTags.get(tag);\n        return t ? Utils.setToArray(t) : [];\n    };\n\n    getTags() {\n        return this.__tags ? this.__tags : [];\n    };\n\n    setTags(tags) {\n        tags = tags.reduce((acc, tag) => {\n            return acc.concat(tag.split(' '));\n        }, []);\n\n        if (this.__ref) {\n            tags.push(this.__ref);\n        }\n\n        let i, n = tags.length;\n        let removes = [];\n        let adds = [];\n        for (i = 0; i < n; i++) {\n            if (!this.hasTag(tags[i])) {\n                adds.push(tags[i]);\n            }\n        }\n\n        let currentTags = this.tags || [];\n        n = currentTags.length;\n        for (i = 0; i < n; i++) {\n            if (tags.indexOf(currentTags[i]) == -1) {\n                removes.push(currentTags[i]);\n            }\n        }\n\n        for (i = 0; i < removes.length; i++) {\n            this.removeTag(removes[i]);\n        }\n\n        for (i = 0; i < adds.length; i++) {\n            this.addTag(adds[i]);\n        }\n    }\n\n    addTag(tag) {\n        if (tag.indexOf(' ') === -1) {\n            if (Utils.isUcChar(tag.charCodeAt(0))) {\n                this._throwError(\"Tag may not start with an upper case character.\");\n            }\n\n            this._addTag(tag);\n        } else {\n            const tags = tag.split(' ');\n            for (let i = 0, m = tags.length; i < m; i++) {\n                const tag = tags[i];\n\n                if (Utils.isUcChar(tag.charCodeAt(0))) {\n                    this._throwError(\"Tag may not start with an upper case character.\");\n                }\n\n                this._addTag(tag);\n            }\n        }\n    }\n\n    _addTag(tag) {\n        if (!this.__tags) {\n            this.__tags = [];\n        }\n        if (this.__tags.indexOf(tag) === -1) {\n            this.__tags.push(tag);\n\n            // Add to treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    removeTag(tag) {\n        let i = this.__tags.indexOf(tag);\n        if (i !== -1) {\n            this.__tags.splice(i, 1);\n\n            // Remove from treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    let list = p.__treeTags.get(tag);\n                    if (list) {\n                        list.delete(this);\n                    }\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    hasTag(tag) {\n        return (this.__tags && (this.__tags.indexOf(tag) !== -1));\n    }\n\n    /**\n     * Returns one of the elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element}\n     */\n    _tag(tag) {\n        if (tag.indexOf(\".\") !== -1) {\n            return this.mtag(tag)[0];\n        } else {\n            if (this.__treeTags) {\n                let t = this.__treeTags.get(tag);\n                if (t) {\n                    const item = t.values().next();\n                    return item ? item.value : undefined;\n                }\n            }\n        }\n    };\n\n    get tag() {\n        return this._tag;\n    }\n\n    set tag(t) {\n        this.tags = t;\n    }\n\n    /**\n     * Returns all elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element[]}\n     */\n    mtag(tag) {\n        let idx = tag.indexOf(\".\");\n        if (idx >= 0) {\n            let parts = tag.split('.');\n            let res = this._getByTag(parts[0]);\n            let level = 1;\n            let c = parts.length;\n            while (res.length && level < c) {\n                let resn = [];\n                for (let j = 0, n = res.length; j < n; j++) {\n                    resn = resn.concat(res[j]._getByTag(parts[level]));\n                }\n\n                res = resn;\n                level++;\n            }\n            return res;\n        } else {\n            return this._getByTag(tag);\n        }\n    };\n\n    stag(tag, settings) {\n        let t = this.mtag(tag);\n        let n = t.length;\n        for (let i = 0; i < n; i++) {\n            Base.patchObject(t[i], settings);\n        }\n    }\n\n    get tagRoot() {\n        return this.__tagRoot;\n    }\n\n    set tagRoot(v) {\n        if (this.__tagRoot !== v) {\n            if (!v) {\n                this._setTagsParent();\n            } else {\n                this._unsetTagsParent();\n            }\n\n            this.__tagRoot = v;\n        }\n    }\n\n    sel(path) {\n        const results = this.select(path);\n        if (results.length) {\n            return results[0];\n        } else {\n            return undefined;\n        }\n    }\n\n    select(path) {\n        if (path.indexOf(\",\") !== -1) {\n            let selectors = path.split(',');\n            let res = [];\n            for (let i = 0; i < selectors.length; i++) {\n                res = res.concat(this._select(selectors[i]));\n            }\n            return res;\n        } else {\n            return this._select(path);\n        }\n    }\n\n    _select(path) {\n        if (path === \"\") return [this];\n\n\n        let pointIdx = path.indexOf(\".\");\n        let arrowIdx = path.indexOf(\">\");\n        if (pointIdx === -1 && arrowIdx === -1) {\n            // Quick case.\n            return this.mtag(path);\n        }\n\n        // Detect by first char.\n        let isRef;\n        if (arrowIdx === 0) {\n            isRef = true;\n            path = path.substr(1);\n        } else if (pointIdx === 0) {\n            isRef = false;\n            path = path.substr(1);\n        } else {\n            isRef = false;\n        }\n\n        return this._selectChilds(path, isRef);\n    }\n\n    _selectChilds(path, isRef) {\n        const pointIdx = path.indexOf(\".\");\n        const arrowIdx = path.indexOf(\">\");\n\n        if (pointIdx === -1 && arrowIdx === -1) {\n            if (isRef) {\n                const ref = this.getByRef(path);\n                return ref ? [ref] : [];\n            } else {\n                return this.mtag(path);\n            }\n        }\n\n        if ((arrowIdx === -1) || (pointIdx !== -1 && pointIdx < arrowIdx)) {\n            let next;\n            const str = path.substr(0, pointIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(pointIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, false));\n            }\n            return total;\n        } else {\n            let next;\n            const str = path.substr(0, arrowIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(arrowIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, true));\n            }\n            return total;\n        }\n    }\n\n    getByRef(ref) {\n        return this.childList.getByRef(ref);\n    }\n\n    getLocationString() {\n        let i;\n        i = this.__parent ? this.__parent._children.getIndex(this) : \"R\";\n        let localTags = this.getTags();\n        let str = this.__parent ? this.__parent.getLocationString(): \"\";\n        if (this.ref) {\n            str += \":[\" + i + \"]\" + this.ref;\n        } else if (localTags.length) {\n            str += \":[\" + i + \"]\" + localTags.join(\",\");\n        } else {\n            str += \":[\" + i + \"]#\" + this.id;\n        }\n        return str;\n    }\n\n    toString() {\n        let obj = this.getSettings();\n        return Element.getPrettyString(obj, \"\");\n    };\n\n    static getPrettyString(obj, indent) {\n        let children = obj.children;\n        delete obj.children;\n\n\n        // Convert singular json settings object.\n        let colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\n        let str = JSON.stringify(obj, function (k, v) {\n            if (colorKeys.indexOf(k) !== -1) {\n                return \"COLOR[\" + v.toString(16) + \"]\";\n            }\n            return v;\n        });\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\n\n        if (children) {\n            let childStr = \"\";\n            if (Utils.isObjectLiteral(children)) {\n                let refs = Object.keys(children);\n                childStr = \"\";\n                for (let i = 0, n = refs.length; i < n; i++) {\n                    childStr += `\\n${indent}  \"${refs[i]}\":`\n                    delete children[refs[i]].ref;\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\n                }\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\n            } else {\n                let n = children.length;\n                childStr = \"[\";\n                for (let i = 0; i < n; i++) {\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\n                }\n                childStr += indent + \"]}\";\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + \"\\\"children\\\":\\n\" + indent + childStr + \"}\";\n            }\n\n        }\n\n        return str;\n    }\n\n    getSettings() {\n        let settings = this.getNonDefaults();\n\n        let children = this._children.get();\n        if (children) {\n            let n = children.length;\n            if (n) {\n                const childArray = [];\n                let missing = false;\n                for (let i = 0; i < n; i++) {\n                    childArray.push(children[i].getSettings());\n                    missing = missing || !children[i].ref;\n                }\n\n                if (!missing) {\n                    settings.children = {}\n                    childArray.forEach(child => {\n                        settings.children[child.ref] = child;\n                    });\n                } else {\n                    settings.children = childArray;\n                }\n            }\n        }\n\n        settings.id = this.id;\n\n        return settings;\n    }\n\n    getNonDefaults() {\n        let settings = {};\n\n        if (this.constructor !== Element) {\n            settings.type = this.constructor.name;\n        }\n\n        if (this.__ref) {\n            settings.ref = this.__ref;\n        }\n\n        if (this.__tags && this.__tags.length) {\n            settings.tags = this.__tags;\n        }\n\n        if (this.x !== 0) settings.x = this.x;\n        if (this.y !== 0) settings.y = this.y;\n        if (this.w !== 0) settings.w = this.w;\n        if (this.h !== 0) settings.h = this.h;\n\n        if (this.scaleX === this.scaleY) {\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\n        } else {\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\n        }\n\n        if (this.pivotX === this.pivotY) {\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\n        } else {\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\n        }\n\n        if (this.mountX === this.mountY) {\n            if (this.mountX !== 0) settings.mount = this.mountX;\n        } else {\n            if (this.mountX !== 0) settings.mountX = this.mountX;\n            if (this.mountY !== 0) settings.mountY = this.mountY;\n        }\n\n        if (this.alpha !== 1) settings.alpha = this.alpha;\n\n        if (!this.visible) settings.visible = false;\n\n        if (this.rotation !== 0) settings.rotation = this.rotation;\n\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\n            if (this.colorUl !== 0xFFFFFFFF) settings.color = this.colorUl.toString(16);\n        } else {\n            if (this.colorUl !== 0xFFFFFFFF) settings.colorUl = this.colorUl.toString(16);\n            if (this.colorUr !== 0xFFFFFFFF) settings.colorUr = this.colorUr.toString(16);\n            if (this.colorBl !== 0xFFFFFFFF) settings.colorBl = this.colorBl.toString(16);\n            if (this.colorBr !== 0xFFFFFFFF) settings.colorBr = this.colorBr.toString(16);\n        }\n\n        if (this.zIndex) settings.zIndex = this.zIndex;\n\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\n\n        if (this.clipping) settings.clipping = this.clipping;\n\n        if (!this.clipbox) settings.clipbox = this.clipbox;\n\n        if (this.__texture) {\n            let tnd = this.__texture.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.texture = tnd;\n            }\n        }\n\n        if (this.shader && Utils.isFunction(this.shader.getNonDefaults)) {\n            let tnd = this.shader.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.shader = tnd;\n            }\n        }\n\n        if (this._hasTexturizer()) {\n            if (this.texturizer.enabled) {\n                settings.renderToTexture = this.texturizer.enabled;\n            }\n            if (this.texturizer.lazy) {\n                settings.renderToTextureLazy = this.texturizer.lazy;\n            }\n            if (this.texturizer.colorize) {\n                settings.colorizeResultTexture = this.texturizer.colorize;\n            }\n            if (this.texturizer.renderOffscreen) {\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\n            }\n        }\n\n        return settings;\n    };\n\n    static getGetter(propertyPath) {\n        let getter = Element.PROP_GETTERS.get(propertyPath);\n        if (!getter) {\n            getter = new Function('obj', 'return obj.' + propertyPath);\n            Element.PROP_GETTERS.set(propertyPath, getter);\n        }\n        return getter;\n    }\n\n    static getSetter(propertyPath) {\n        let setter = Element.PROP_SETTERS.get(propertyPath);\n        if (!setter) {\n            setter = new Function('obj', 'v', 'obj.' + propertyPath + ' = v');\n            Element.PROP_SETTERS.set(propertyPath, setter);\n        }\n        return setter;\n    }\n\n    get withinBoundsMargin() {\n        return this.__core._withinBoundsMargin;\n    }\n\n    _enableWithinBoundsMargin() {\n        // Iff enabled, this toggles the active flag.\n        if (this.__enabled) {\n            this._setActiveFlag();\n        }\n    }\n\n    _disableWithinBoundsMargin() {\n        // Iff active, this toggles the active flag.\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n    }\n\n    set boundsMargin(v) {\n        if (!Array.isArray(v) && v !== null) {\n            throw new Error(\"boundsMargin should be an array of left-top-right-bottom values or null (inherit margin)\");\n        }\n        this.__core.boundsMargin = v;\n    }\n\n    get boundsMargin() {\n        return this.__core.boundsMargin;\n    }\n\n    get x() {\n        return this.__core.offsetX;\n    }\n\n    set x(v) {\n        this.__core.offsetX = v;\n    }\n\n    get y() {\n        return this.__core.offsetY;\n    }\n\n    set y(v) {\n        this.__core.offsetY = v;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (Utils.isFunction(v)) {\n            this._w = 0;\n            this.__core.funcW = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._w !== v) {\n                this.__core.disableFuncW();\n                this._w = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (Utils.isFunction(v)) {\n            this._h = 0;\n            this.__core.funcH = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._h !== v) {\n                this.__core.disableFuncH();\n                this._h = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get scaleX() {\n        return this.__core.scaleX;\n    }\n\n    set scaleX(v) {\n        this.__core.scaleX = v;\n    }\n\n    get scaleY() {\n        return this.__core.scaleY;\n    }\n\n    set scaleY(v) {\n        this.__core.scaleY = v;\n    }\n\n    get scale() {\n        return this.__core.scale;\n    }\n\n    set scale(v) {\n        this.__core.scale = v;\n    }\n\n    get pivotX() {\n        return this.__core.pivotX;\n    }\n\n    set pivotX(v) {\n        this.__core.pivotX = v;\n    }\n\n    get pivotY() {\n        return this.__core.pivotY;\n    }\n\n    set pivotY(v) {\n        this.__core.pivotY = v;\n    }\n\n    get pivot() {\n        return this.__core.pivot;\n    }\n\n    set pivot(v) {\n        this.__core.pivot = v;\n    }\n\n    get mountX() {\n        return this.__core.mountX;\n    }\n\n    set mountX(v) {\n        this.__core.mountX = v;\n    }\n\n    get mountY() {\n        return this.__core.mountY;\n    }\n\n    set mountY(v) {\n        this.__core.mountY = v;\n    }\n\n    get mount() {\n        return this.__core.mount;\n    }\n\n    set mount(v) {\n        this.__core.mount = v;\n    }\n\n    get rotation() {\n        return this.__core.rotation;\n    }\n\n    set rotation(v) {\n        this.__core.rotation = v;\n    }\n\n    get alpha() {\n        return this.__core.alpha;\n    }\n\n    set alpha(v) {\n        this.__core.alpha = v;\n    }\n\n    get visible() {\n        return this.__core.visible;\n    }\n\n    set visible(v) {\n        this.__core.visible = v;\n    }\n    \n    get colorUl() {\n        return this.__core.colorUl;\n    }\n\n    set colorUl(v) {\n        this.__core.colorUl = v;\n    }\n\n    get colorUr() {\n        return this.__core.colorUr;\n    }\n\n    set colorUr(v) {\n        this.__core.colorUr = v;\n    }\n\n    get colorBl() {\n        return this.__core.colorBl;\n    }\n\n    set colorBl(v) {\n        this.__core.colorBl = v;\n    }\n\n    get colorBr() {\n        return this.__core.colorBr;\n    }\n\n    set colorBr(v) {\n        this.__core.colorBr = v;\n    }\n\n    get color() {\n        return this.__core.colorUl;\n    }\n\n    set color(v) {\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorTop() {\n        return this.colorUl;\n    }\n\n    set colorTop(v) {\n        if (this.colorUl !== v || this.colorUr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n        }\n    }\n\n    get colorBottom() {\n        return this.colorBl;\n    }\n\n    set colorBottom(v) {\n        if (this.colorBl !== v || this.colorBr !== v) {\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorLeft() {\n        return this.colorUl;\n    }\n\n    set colorLeft(v) {\n        if (this.colorUl !== v || this.colorBl !== v) {\n            this.colorUl = v;\n            this.colorBl = v;\n        }\n    }\n\n    get colorRight() {\n        return this.colorUr;\n    }\n\n    set colorRight(v) {\n        if (this.colorUr !== v || this.colorBr !== v) {\n            this.colorUr = v;\n            this.colorBr = v;\n        }\n    }\n\n    get zIndex() {return this.__core.zIndex}\n    set zIndex(v) {\n        this.__core.zIndex = v;\n    }\n\n    get forceZIndexContext() {return this.__core.forceZIndexContext}\n    set forceZIndexContext(v) {\n        this.__core.forceZIndexContext = v;\n    }\n\n    get clipping() {return this.__core.clipping}\n    set clipping(v) {\n        this.__core.clipping = v;\n    }\n\n    get clipbox() {return this.__core.clipbox}\n    set clipbox(v) {\n        this.__core.clipbox = v;\n    }\n\n    get tags() {\n        return this.getTags();\n    }\n\n    set tags(v) {\n        if (!Array.isArray(v)) v = [v];\n        this.setTags(v);\n    }\n\n    set t(v) {\n        this.tags = v;\n    }\n\n    get _children() {\n        if (!this.__childList) {\n            this.__childList = new ElementChildList(this, false);\n        }\n        return this.__childList;\n    }\n\n    get childList() {\n        if (!this._allowChildrenAccess()) {\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\n        }\n        return this._children;\n    }\n\n    hasChildren() {\n        return this._allowChildrenAccess() && this.__childList && (this.__childList.length > 0);\n    }\n\n    _allowChildrenAccess() {\n        return true;\n    }\n\n    get children() {\n        return this.childList.get();\n    }\n\n    set children(children) {\n        this.childList.patch(children);\n    }\n\n    add(o) {\n        return this.childList.a(o);\n    }\n\n    get p() {\n        return this.__parent;\n    }\n\n    get parent() {\n        return this.__parent;\n    }\n\n    get src() {\n        if (this.texture && this.texture instanceof ImageTexture) {\n            return this.texture._src;\n        } else {\n            return undefined;\n        }\n    }\n\n    set src(v) {\n        const texture = new ImageTexture(this.stage);\n        texture.src = v;\n        this.texture = texture;\n    }\n\n    set mw(v) {\n        if (this.texture) {\n            this.texture.mw = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mw after setting a texture.');\n        }\n    }\n\n    set mh(v) {\n        if (this.texture) {\n            this.texture.mh = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mh after setting a texture.');\n        }\n    }\n\n    get rect() {\n        return (this.texture === this.stage.rectangleTexture);\n    }\n\n    set rect(v) {\n        if (v) {\n            this.texture = this.stage.rectangleTexture;\n        } else {\n            this.texture = null;\n        }\n    }\n\n    enableTextTexture() {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.texture = new TextTexture(this.stage);\n\n            if (!this.texture.w && !this.texture.h) {\n                // Inherit dimensions from element.\n                // This allows userland to set dimensions of the Element and then later specify the text.\n                this.texture.w = this.w;\n                this.texture.h = this.h;\n            }\n        }\n        return this.texture;\n    }\n\n    get text() {\n        if (this.texture && (this.texture instanceof TextTexture)) {\n            return this.texture;\n        } else {\n            return null;\n        }\n    }\n\n    set text(v) {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.enableTextTexture();\n        }\n        if (Utils.isString(v)) {\n            this.texture.text = v;\n        } else {\n            this.texture.patch(v);\n        }\n    }\n\n    set onUpdate(f) {\n        this.__core.onUpdate = f;\n    }\n\n    set onAfterCalcs(f) {\n        this.__core.onAfterCalcs = f;\n    }\n\n    set onAfterUpdate(f) {\n        this.__core.onAfterUpdate = f;\n    }\n\n    forceUpdate() {\n        // Make sure that the update loop is run.\n        this.__core._setHasUpdates();\n    }\n\n    get shader() {\n        return this.__core.shader;\n    }\n\n    set shader(v) {\n        if (Utils.isObjectLiteral(v) && !v.type) {\n            // Setting properties on an existing shader.\n            if (this.shader) {\n                this.shader.patch(v);\n            }\n        } else {\n            const shader = Shader.create(this.stage, v);\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.removeElement(this.__core);\n            }\n\n            this.__core.shader = shader;\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.addElement(this.__core);\n            }\n        }\n    }\n\n    _hasTexturizer() {\n        return !!this.__core._texturizer;\n    }\n\n    get renderToTexture() {\n        return this.rtt\n    }\n\n    set renderToTexture(v) {\n        this.rtt = v\n    }\n\n    get rtt() {\n        return this._hasTexturizer() && this.texturizer.enabled;\n    }\n\n    set rtt(v) {\n        this.texturizer.enabled = v;\n    }\n\n    get rttLazy() {\n        return this._hasTexturizer() && this.texturizer.lazy;\n    }\n\n    set rttLazy(v) {\n        this.texturizer.lazy = v;\n    }\n\n    get renderOffscreen() {\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this.texturizer.renderOffscreen = v;\n    }\n\n    get colorizeResultTexture() {\n        return this._hasTexturizer() && this.texturizer.colorize;\n    }\n\n    set colorizeResultTexture(v) {\n        this.texturizer.colorize = v;\n    }\n\n    getTexture() {\n        return this.texturizer._getTextureSource();\n    }\n\n    get texturizer() {\n        return this.__core.texturizer;\n    }\n\n    patch(settings) {\n        let paths = Object.keys(settings);\n\n        for (let i = 0, n = paths.length; i < n; i++) {\n            let path = paths[i];\n            const v = settings[path];\n\n            const firstCharCode = path.charCodeAt(0);\n            if (Utils.isUcChar(firstCharCode)) {\n                // Ref.\n                const child = this.getByRef(path);\n                if (!child) {\n                    if (v !== undefined) {\n                        // Add to list immediately.\n                        let c;\n                        if (Utils.isObjectLiteral(v)) {\n                            // Catch this case to capture createMode flag.\n                            c = this.childList.createItem(v);\n                            c.patch(v);\n                        } else if (Utils.isObject(v)) {\n                            c = v;\n                        }\n                        if (c.isElement) {\n                            c.ref = path;\n                        }\n\n                        this.childList.a(c);\n                    }\n                } else {\n                    if (v === undefined) {\n                        if (child.parent) {\n                            child.parent.childList.remove(child);\n                        }\n                    } else if (Utils.isObjectLiteral(v)) {\n                        child.patch(v);\n                    } else if (v.isElement) {\n                        // Replace element by new element.\n                        v.ref = path;\n                        this.childList.replace(v, child);\n                    } else {\n                        this._throwError(\"Unexpected value for path: \" + path);\n                    }\n                }\n            } else {\n                // Property.\n                Base.patchObjectProperty(this, path, v);\n            }\n        }\n    }\n\n    _throwError(message) {\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\n    }\n\n    animation(settings) {\n        return this.stage.animations.createAnimation(this, settings);\n    }\n\n    transition(property, settings = null) {\n        if (settings === null) {\n            return this._getTransition(property);\n        } else {\n            this._setTransition(property, settings);\n            // We do not create/return the transition, because it would undo the 'lazy transition creation' optimization.\n            return null;\n        }\n    }\n\n    set transitions(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            this.transition(property, object[property]);\n        });\n    }\n\n    set smooth(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            let value = object[property];\n            if (Array.isArray(value)) {\n                this.setSmooth(property, value[0], value[1]);\n            } else {\n                this.setSmooth(property, value);\n            }\n        });\n    }\n\n    fastForward(property) {\n        if (this._transitions) {\n            let t = this._transitions[property];\n            if (t && t.isTransition) {\n                t.finish();\n            }\n        }\n    }\n\n    _getTransition(property) {\n        if (!this._transitions) {\n            this._transitions = {};\n        }\n        let t = this._transitions[property];\n        if (!t) {\n            // Create default transition.\n            t = new Transition(this.stage.transitions, this.stage.transitions.defaultTransitionSettings, this, property);\n        } else if (t.isTransitionSettings) {\n            // Upgrade to 'real' transition.\n            t = new Transition(\n                this.stage.transitions,\n                t,\n                this,\n                property\n            );\n        }\n        this._transitions[property] = t;\n        return t;\n    }\n\n    _setTransition(property, settings) {\n        if (!settings) {\n            this._removeTransition(property);\n        } else {\n            if (Utils.isObjectLiteral(settings)) {\n                // Convert plain object to proper settings object.\n                settings = this.stage.transitions.createSettings(settings);\n            }\n\n            if (!this._transitions) {\n                this._transitions = {};\n            }\n\n            let current = this._transitions[property];\n            if (current && current.isTransition) {\n                // Runtime settings change.\n                current.settings = settings;\n                return current;\n            } else {\n                // Initially, only set the settings and upgrade to a 'real' transition when it is used.\n                this._transitions[property] = settings;\n            }\n        }\n    }\n\n    _removeTransition(property) {\n        if (this._transitions) {\n            delete this._transitions[property];\n        }\n    }\n\n    getSmooth(property, v) {\n        let t = this._getTransition(property);\n        if (t && t.isAttached()) {\n            return t.targetValue;\n        } else {\n            return v;\n        }\n    }\n\n    setSmooth(property, v, settings) {\n        if (settings) {\n            this._setTransition(property, settings);\n        }\n        let t = this._getTransition(property);\n        t.start(v);\n        return t;\n    }\n\n    get flex() {\n        return this.__core.flex;\n    }\n\n    set flex(v) {\n        this.__core.flex = v;\n    }\n\n    get flexItem() {\n        return this.__core.flexItem;\n    }\n\n    set flexItem(v) {\n        this.__core.flexItem = v;\n    }\n\n    static isColorProperty(property) {\n        return property.toLowerCase().indexOf(\"color\") >= 0;\n    }\n\n    static getMerger(property) {\n        if (Element.isColorProperty(property)) {\n            return StageUtils.mergeColors;\n        } else {\n            return StageUtils.mergeNumbers;\n        }\n    }\n\n    toJSON() {\n        const ref = [`${this.constructor.name}`];\n        const tree = {[ref]: {}};\n\n        if (this.hasChildren()) {\n            Element.collectChildren(tree[ref], this.__childList);\n        } else {\n            tree[ref] = {...Element.getProperties(this)};\n        }\n        return tree;\n    }\n\n    static collectChildren(tree, children) {\n        const childList = children;\n        for (let i = 0, j = childList.length; i < j; i++) {\n            const element = childList.getAt(i);\n            const ref = `${element.__ref || `Element-${element.id}`}`;\n            const properties = this.getProperties(element);\n\n            tree[ref] = {...properties};\n\n            if (element.hasChildren()) {\n                tree[ref].children = {};\n                this.collectChildren(\n                    tree[ref].children, element.__childList\n                );\n            }\n        }\n    }\n\n    static getProperties(element) {\n        const props = {};\n        const list = [\n            \"alpha\", \"active\", \"attached\", \"boundsMargin\", \"color\", \"clipping\", \"enabled\", \"h\", \"id\", \"isComponent\",\n            \"mount\", \"mountY\", \"mountX\", \"pivot\", \"pivotX\", \"pivotY\", \"ref\", \"renderOfScreen\", \"renderToTexture\", \"scale\",\n            \"scaleX\", \"scaleY\", \"state\", \"tag\", \"visible\", \"w\", \"x\", \"y\", \"zIndex\",\n            \"!!flex\", \"!!flexItem\", \"hasFocus()\", \"hasFinalFocus()\"\n        ];\n        let n = list.length;\n\n        while (n--) {\n            let key = list[n];\n            const getBoolean = /^!{2}/;\n            const isFunction = /\\(\\)$/;\n\n            if (getBoolean.test(key)) {\n                key = key.substring(2, key.length);\n                props[key] = !!element[key];\n            } else if (isFunction.test(key)) {\n                key = key.substring(0, key.length - 2);\n                if (typeof element[key] === \"function\") {\n                    props[key] = element[key]();\n                }\n            } else {\n                props[key] = element[key];\n            }\n        }\n        return {...props, ...element.getNonDefaults()};\n    }\n}\n\n// This gives a slight performance benefit compared to extending EventEmitter.\nEventEmitter.addAsMixin(Element);\n\nElement.prototype.isElement = 1;\n\nElement.id = 1;\n\n// Getters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_GETTERS = new Map();\n\n// Setters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_SETTERS = new Map();\n\nimport Texture from \"./Texture.mjs\";\nimport ImageTexture from \"../textures/ImageTexture.mjs\";\nimport TextTexture from \"../textures/TextTexture.mjs\";\nimport SourceTexture from \"../textures/SourceTexture.mjs\";\nimport Transition from \"../animation/Transition.mjs\";\nimport ElementChildList from \"./ElementChildList.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StateMachine {\n\n    constructor() {\n        StateMachine.setupStateMachine(this);\n    }\n\n    static setupStateMachine(target) {\n        const targetConstructor = target.constructor;\n        const router = StateMachine.create(targetConstructor);\n        Object.setPrototypeOf(target, router.prototype);\n        target.constructor = targetConstructor;\n        target._initStateMachine();\n    }\n\n    /**\n     * Creates a state machine implementation.\n     * It extends the original type and should be used when creating new instances.\n     * The original type is available as static property 'original', and it must be used when subclassing as follows:\n     * const type = StateMachine.create(class YourNewStateMachineClass extends YourBaseStateMachineClass.original {  })\n     * @param {Class} type\n     * @returns {StateMachine}\n     */\n    static create(type) {\n        if (!type.hasOwnProperty('_sm')) {\n            // Only need to run once.\n            const stateMachineType = new StateMachineType(type);\n            type._sm = stateMachineType;\n        }\n\n        return type._sm.router;\n    }\n\n    /**\n     * Calls the specified method if it exists.\n     * @param {string} event\n     * @param {*...} args\n     */\n    fire(event, ...args) {\n        if (this._hasMethod(event)) {\n            return this[event](...args);\n        }\n    }\n\n    /**\n     * Returns the current state path (for example \"Initialized.Loading\").\n     * @returns {string}\n     * @protected\n     */\n    _getState() {\n        return this._state.__path;\n    }\n\n    /**\n     * Returns true iff statePath is (an ancestor of) currentStatePath.\n     * @param {string} statePath\n     * @param {string} currentStatePath\n     * @returns {Boolean}\n     * @protected\n     */\n    _inState(statePath, currentStatePath = this._state.__path) {\n        const state = this._sm.getStateByPath(statePath);\n        const currentState = this._sm.getStateByPath(currentStatePath);\n        const level = state.__level;\n        const stateAtLevel = StateMachine._getStateAtLevel(currentState, level);\n        return (stateAtLevel === state);\n    }\n\n    /**\n     * Returns true if the specified class member is defined for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMember(name) {\n        return !!this.constructor.prototype[name];\n    }\n\n    /**\n     * Returns true if the specified class member is a method for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMethod(name) {\n        const member = this.constructor.prototype[name];\n        return !!member && (typeof member === \"function\")\n    }\n\n    /**\n     * Switches to the specified state.\n     * @param {string} statePath\n     *   Substates are seperated by a underscores (for example \"Initialized.Loading\").\n     * @param {*[]} [args]\n     *   Args that are supplied in $enter and $exit events.\n     * @protected\n     */\n    _setState(statePath, args) {\n        const setStateId = ++this._setStateCounter;\n        this._setStateId = setStateId;\n\n        if (this._state.__path !== statePath) {\n            // Performance optimization.\n            let newState = this._sm._stateMap[statePath];\n            if (!newState) {\n                // Check for super state.\n                newState = this._sm.getStateByPath(statePath);\n            }\n\n            const prevState = this._state;\n\n            const hasDifferentEnterMethod = (newState.prototype.$enter !== this._state.prototype.$enter);\n            const hasDifferentExitMethod = (newState.prototype.$exit !== this._state.prototype.$exit);\n            if (hasDifferentEnterMethod || hasDifferentExitMethod) {\n                const sharedState = StateMachine._getSharedState(this._state, newState);\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path,\n                    sharedState: sharedState.__path\n                };\n                const sharedLevel = sharedState.__level;\n\n                if (hasDifferentExitMethod) {\n                    const exitStates = StateMachine._getStatesUntilLevel(this._state, sharedLevel);\n                    for (let i = 0, n = exitStates.length; i < n; i++) {\n                        this.__setState(exitStates[i]);\n                        this._callExit(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n                if (hasDifferentEnterMethod) {\n                    const enterStates = StateMachine._getStatesUntilLevel(newState, sharedLevel).reverse();\n                    for (let i = 0, n = enterStates.length; i < n; i++) {\n                        this.__setState(enterStates[i]);\n                        this._callEnter(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n            }\n\n            this.__setState(newState);\n\n            if (this._changedState) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n\n                if (args) {\n                    this._changedState(context, ...args);\n                } else {\n                    this._changedState(context);\n                }\n            }\n\n            if (this._onStateChange) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n                this._onStateChange(context);\n            }\n\n        }\n    }\n\n    _callEnter(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$enter) {\n            if (!hasParent || (state.__parent.prototype.$enter !== state.prototype.$enter)) {\n                state.prototype.$enter.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    _callExit(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$exit) {\n            if (!hasParent || (state.__parent.prototype.$exit !== state.prototype.$exit)) {\n                state.prototype.$exit.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    __setState(state) {\n        this._state = state;\n        this._stateIndex = state.__index;\n        this.constructor = state;\n    }\n\n    _initStateMachine() {\n        this._state = null;\n        this._stateIndex = 0;\n        this._setStateCounter = 0;\n        this._sm = this._routedType._sm;\n        this.__setState(this._sm.getStateByPath(\"\"));\n        const context = {newState: \"\", prevState: undefined, sharedState: undefined};\n        this._callEnter(this._state, [], context);\n        this._onStateChange = undefined;\n    }\n\n    /**\n     * Between multiple member names, select the one specified in the deepest state.\n     * If multiple member names are specified in the same deepest state, the first one in the array is returned.\n     * @param {string[]} memberNames\n     * @returns {string|undefined}\n     * @protected\n     */\n    _getMostSpecificHandledMember(memberNames) {\n        let cur = this._state;\n        do {\n            for (let i = 0, n = memberNames.length; i < n; i++) {\n                const memberName = memberNames[i];\n                if (!cur.__parent) {\n                    if (cur.prototype[memberName]) {\n                        return memberName;\n                    }\n                } else {\n                    const alias = StateMachineType.getStateMemberAlias(cur.__path, memberName);\n                    if (this[alias]) {\n                        return memberName;\n                    }\n                }\n            }\n            cur = cur.__parent;\n        } while (cur);\n    }\n\n    static _getStatesUntilLevel(state, level) {\n        const states = [];\n        while (state.__level > level) {\n            states.push(state);\n            state = state.__parent;\n        }\n        return states;\n    }\n\n    static _getSharedState(state1, state2) {\n        const state1Array = StateMachine._getAncestorStates(state1);\n        const state2Array = StateMachine._getAncestorStates(state2);\n        const n = Math.min(state1Array.length, state2Array.length);\n        for (let i = 0; i < n; i++) {\n            if (state1Array[i] !== state2Array[i]) {\n                return state1Array[i - 1];\n            }\n        }\n        return state1Array[n - 1];\n    }\n\n    static _getAncestorStates(state) {\n        const result = [];\n        do {\n            result.push(state);\n        } while(state = state.__parent);\n        return result.reverse();\n    }\n\n    static _getStateAtLevel(state, level) {\n        if (level > state.__level) {\n            return undefined;\n        }\n\n        while(level < state.__level) {\n            state = state.__parent;\n        }\n        return state;\n    }\n}\n\nclass StateMachineType {\n\n    constructor(type) {\n        this._type = type;\n        this._router = null;\n\n        this.init();\n    }\n\n    get router() {\n        return this._router;\n    }\n\n    init() {\n        this._router = this._createRouter();\n\n        this._stateMap = this._getStateMap();\n\n        this._addStateMemberDelegatorsToRouter();\n\n    }\n\n    _createRouter() {\n        const type = this._type;\n\n        const router = class StateMachineRouter extends type {\n            constructor() {\n                super(...arguments);\n                if (!this.constructor.hasOwnProperty('_isRouter')) {\n                    throw new Error(`You need to extend ${type.name}.original instead of ${type.name}.`);\n                }\n            }\n        };\n        router._isRouter = true;\n        router.prototype._routedType = type;\n        router.original = type;\n\n        this._mixinStateMachineMethods(router);\n\n        return router;\n    }\n\n    _mixinStateMachineMethods(router) {\n        // Mixin the state machine methods, so that we reuse the methods instead of re-creating them.\n        const names = Object.getOwnPropertyNames(StateMachine.prototype);\n        for (let i = 0, n = names.length; i < n; i++) {\n            const name = names[i];\n            if (name !== \"constructor\") {\n                const descriptor = Object.getOwnPropertyDescriptor(StateMachine.prototype, name);\n                Object.defineProperty(router.prototype, name, descriptor);\n            }\n        }\n    }\n\n    _addStateMemberDelegatorsToRouter() {\n        const members = this._getAllMemberNames();\n\n        members.forEach(member => {\n            this._addMemberRouter(member);\n        });\n    }\n\n    /**\n     * @note We are generating code because it yields much better performance.\n     */\n    _addMemberRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member);\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        let type = undefined;\n        descriptors.forEach(descriptor => {\n            if (descriptor) {\n                const descType = this._getDescriptorType(descriptor);\n                if (type && (type !== descType)) {\n                    console.warn(`Member ${member} in ${this._type.name} has inconsistent types.`);\n                    return;\n                }\n                type = descType;\n            }\n        });\n\n        switch(type) {\n            case \"method\":\n                this._addMethodRouter(member, descriptors, aliases);\n                break;\n            case \"getter\":\n                this._addGetterSetterRouters(member);\n                break;\n            case \"property\":\n                console.warn(\"Fixed properties are not supported; please use a getter instead!\")\n                break;\n        }\n    }\n\n    _getDescriptor(state, member, isValid = () => true) {\n        let type = state;\n        let curState = state;\n\n        do {\n            const descriptor = Object.getOwnPropertyDescriptor(type.prototype, member);\n            if (descriptor) {\n                if (isValid(descriptor)) {\n                    descriptor._source = curState;\n                    return descriptor;\n                }\n            }\n            type = Object.getPrototypeOf(type);\n            if (type && type.hasOwnProperty('__state')) {\n                curState = type;\n            }\n        } while(type && type.prototype);\n        return undefined;\n    }\n\n    _getDescriptorType(descriptor) {\n        if (descriptor.get || descriptor.set) {\n            return 'getter';\n        } else {\n            if (typeof descriptor.value === \"function\") {\n                return 'method';\n            } else {\n                return 'property';\n            }\n        }\n    }\n\n    static _supportsSpread() {\n        if (this.__supportsSpread === undefined) {\n            this.__supportsSpread = false;\n            try {\n                const func = new Function(\"return [].concat(...arguments);\");\n                func();\n                this.__supportsSpread = true;\n            } catch(e) {}\n        }\n        return this.__supportsSpread;\n    }\n\n    _addMethodRouter(member, descriptors, aliases) {\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"const i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        const supportsSpread = StateMachineType._supportsSpread();\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    if (supportsSpread) {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"](...arguments); else`);\n                    } else {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"].apply(this, arguments); else`);\n                    }\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            if (supportsSpread) {\n                code.push(`return this[\"${cur}\"](...arguments);`);\n            } else {\n                code.push(`return this[\"${cur}\"].apply(this, arguments);`);\n            }\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n\n        const descriptor = {value: router};\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _addGetterSetterRouters(member) {\n        const getter = this._getGetterRouter(member);\n        const setter = this._getSetterRouter(member);\n        const descriptor = {\n            get: getter,\n            set: setter\n        };\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _getGetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.get));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"const i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) return this[\"${cur}\"]; else`);\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`return this[\"${cur}\"];`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n        return router;\n    }\n\n    _getSetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.set));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"const i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) this[\"${cur}\"] = arg; else`);\n                } else {\n                    code.push(`if (i < ${i}) ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`this[\"${cur}\"] = arg;`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([\"arg\"], functionBody);\n        return router;\n    }\n\n    static getStateMemberAlias(path, member) {\n        return \"$\" + (path ? path + \".\" : \"\") + member;\n    }\n\n    _getAllMemberNames() {\n        const stateMap = this._stateMap;\n        const map = Object.keys(stateMap);\n        let members = new Set();\n        map.forEach(statePath => {\n            if (statePath === \"\") {\n                // Root state can be skipped: if the method only occurs in the root state, we don't need to re-delegate it based on state.\n                return;\n            }\n            const state = stateMap[statePath];\n            const names = this._getStateMemberNames(state);\n            names.forEach(name => {\n                members.add(name);\n            })\n        });\n        return [...members];\n    }\n\n    _getStateMemberNames(state) {\n        let type = state;\n        let members = new Set();\n        const isRoot = this._type === state;\n        do {\n            const names = this._getStateMemberNamesForType(type);\n            names.forEach(name => {\n                members.add(name)\n            });\n\n            type = Object.getPrototypeOf(type);\n        } while(type && type.prototype && (!type.hasOwnProperty(\"__state\") || isRoot));\n\n        return members;\n    }\n\n    _getStateMemberNamesForType(type) {\n        const memberNames = Object.getOwnPropertyNames(type.prototype);\n        return memberNames.filter(memberName => {\n            return (memberName !== \"constructor\") && !StateMachineType._isStateLocalMember(memberName);\n        });\n    }\n\n    static _isStateLocalMember(memberName) {\n        return (memberName === \"$enter\") || (memberName === \"$exit\");\n    }\n\n    getStateByPath(statePath) {\n        if (this._stateMap[statePath]) {\n            return this._stateMap[statePath];\n        }\n\n        // Search for closest match.\n        const parts = statePath.split(\".\");\n        while(parts.pop()) {\n            const statePath = parts.join(\".\");\n            if (this._stateMap[statePath]) {\n                return this._stateMap[statePath];\n            }\n        }\n    }\n\n    _getStateMap() {\n        if (!this._stateMap) {\n            this._stateMap = this._createStateMap();\n        }\n        return this._stateMap;\n    }\n\n    _createStateMap() {\n        const stateMap = {};\n        this._addState(this._type, null, \"\", stateMap);\n        return stateMap;\n    }\n\n    _addState(state, parentState, name, stateMap) {\n        state.__state = true;\n        state.__name = name;\n\n        this._addStaticStateProperty(state, parentState);\n\n        const parentPath = (parentState ? parentState.__path : \"\");\n        let path = (parentPath ? parentPath + \".\" : \"\") + name;\n        state.__path = path;\n        state.__level = parentState ? parentState.__level + 1 : 0;\n        state.__parent = parentState;\n        state.__index = Object.keys(stateMap).length;\n        stateMap[path] = state;\n\n        const states = state._states;\n        if (states) {\n            const isInheritedFromParent = (parentState && parentState._states === states);\n            if (!isInheritedFromParent) {\n                const subStates = state._states();\n                subStates.forEach(subState => {\n                    const stateName = StateMachineType._getStateName(subState);\n                    this._addState(subState, state, stateName, stateMap);\n                });\n            }\n        }\n    }\n\n    static _getStateName(state) {\n        const name = state.name;\n\n        const index = name.indexOf('$');\n        if (index > 0) {\n            // Strip off rollup name suffix.\n            return name.substr(0, index);\n        }\n\n        return name;\n    }\n\n    _addStaticStateProperty(state, parentState) {\n        if (parentState) {\n            const isClassStateLevel = parentState && !parentState.__parent;\n            if (isClassStateLevel) {\n                this._router[state.__name] = state;\n            } else {\n                parentState[state.__name] = state;\n            }\n        }\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Element from \"../tree/Element.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport StateMachine from \"./StateMachine.mjs\";\n\n/**\n * @extends StateMachine\n */\nexport default class Component extends Element {\n\n    constructor(stage, properties) {\n        super(stage);\n\n        // Encapsulate tags to prevent leaking.\n        this.tagRoot = true;\n\n        if (Utils.isObjectLiteral(properties)) {\n            Object.assign(this, properties);\n        }\n\n        this.__initialized = false;\n        this.__firstActive = false;\n        this.__firstEnable = false;\n\n        this.__signals = undefined;\n\n        this.__passSignals = undefined;\n\n        this.__construct();\n\n        // Quick-apply template.\n        const func = this.constructor.getTemplateFunc();\n        func.f(this, func.a);\n\n        this._build();\n    }\n\n    __start() {\n        StateMachine.setupStateMachine(this);\n        this._onStateChange = Component.prototype.__onStateChange;\n    }\n\n    get state() {\n        return this._getState();\n    }\n\n    __onStateChange() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    _refocus() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    /**\n     * Returns a high-performance template patcher.\n     */\n    static getTemplateFunc() {\n        // We need a different template function per patch id.\n        const name = \"_templateFunc\";\n\n        // Be careful with class-based static inheritance.\n        const hasName = '__has' + name;\n        if (this[hasName] !== this) {\n            this[hasName] = this;\n            this[name] = this.parseTemplate(this._template());\n        }\n        return this[name];\n    }\n\n    static parseTemplate(obj) {\n        const context = {\n            loc: [],\n            store: [],\n            rid: 0\n        };\n\n        this.parseTemplateRec(obj, context, \"element\");\n\n        const code = context.loc.join(\";\\n\");\n        const f = new Function(\"element\", \"store\", code);\n        return {f:f, a:context.store}\n    }\n\n    static parseTemplateRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            let value = obj[key];\n            if (Utils.isUcChar(key.charCodeAt(0))) {\n                // Value must be expanded as well.\n                if (Utils.isObjectLiteral(value)) {\n                    // Ref.\n                    const childCursor = `r${key.replace(/[^a-z0-9]/gi, \"\") + context.rid}`;\n                    let type = value.type ? value.type : Element;\n                    if (type === Element) {\n                        loc.push(`const ${childCursor} = element.stage.createElement()`);\n                    } else {\n                        store.push(type);\n                        loc.push(`const ${childCursor} = new store[${store.length - 1}](${cursor}.stage)`);\n                    }\n                    loc.push(`${childCursor}.ref = \"${key}\"`);\n                    context.rid++;\n\n                    // Enter sub.\n                    this.parseTemplateRec(value, context, childCursor);\n\n                    loc.push(`${cursor}.childList.add(${childCursor})`);\n                } else if (Utils.isObject(value)) {\n                    // Dynamic assignment.\n                    store.push(value);\n                    loc.push(`${cursor}.childList.add(store[${store.length - 1}])`);\n                }\n            } else {\n                if (key === \"text\") {\n                    const propKey = cursor + \"__text\";\n                    loc.push(`const ${propKey} = ${cursor}.enableTextTexture()`);\n                    this.parseTemplatePropRec(value, context, propKey);\n                } else if (key === \"texture\" && Utils.isObjectLiteral(value)) {\n                    const propKey = cursor + \"__texture\";\n                    const type = value.type;\n                    if (type) {\n                        store.push(type);\n                        loc.push(`const ${propKey} = new store[${store.length - 1}](${cursor}.stage)`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                        loc.push(`${cursor}[\"${key}\"] = ${propKey}`);\n                    } else {\n                        loc.push(`${propKey} = ${cursor}.texture`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else {\n                    // Property;\n                    if (Utils.isNumber(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                    } else if (Utils.isBoolean(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                    } else if (Utils.isObject(value) || Array.isArray(value)) {\n                        // Dynamic assignment.\n                        // Because literal objects may contain dynamics, we store the full object.\n                        store.push(value);\n                        loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    } else {\n                        // String etc.\n                        loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                    }\n                }\n            }\n        });\n    }\n\n    static parseTemplatePropRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isNumber(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                } else if (Utils.isBoolean(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                } else if (Utils.isObject(value) || Array.isArray(value)) {\n                    // Dynamic assignment.\n                    // Because literal objects may contain dynamics, we store the full object.\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                } else {\n                    // String etc.\n                    loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                }\n            }\n        });\n    }\n\n    _onSetup() {\n        if (!this.__initialized) {\n            this._setup();\n        }\n    }\n\n    _setup() {\n    }\n\n    _onAttach() {\n        if (!this.__initialized) {\n            this.__init();\n            this.__initialized = true;\n        }\n\n        this._attach();\n    }\n\n    _attach() {\n    }\n\n    _onDetach() {\n        this._detach();\n    }\n\n    _detach() {\n    }\n\n    _onEnabled() {\n        if (!this.__firstEnable) {\n            this._firstEnable();\n            this.__firstEnable = true;\n        }\n\n        this._enable();\n    }\n\n    _firstEnable() {\n    }\n\n    _enable() {\n    }\n\n    _onDisabled() {\n        this._disable();\n    }\n\n    _disable() {\n    }\n\n    _onActive() {\n        if (!this.__firstActive) {\n            this._firstActive();\n            this.__firstActive = true;\n        }\n\n        this._active();\n    }\n\n    _firstActive() {\n    }\n\n    _active() {\n    }\n\n    _onInactive() {\n        this._inactive();\n    }\n\n    _inactive() {\n    }\n\n    get application() {\n        return this.stage.application;\n    }\n\n    __construct() {\n        this._construct();\n    }\n    \n    _construct() {\n    }\n\n    _build() {\n    }\n    \n    __init() {\n        this._init();\n    }\n\n    _init() {\n    }\n\n    _focus(newTarget, prevTarget) {\n    }\n\n    _unfocus(newTarget) {\n    }\n\n    _focusChange(target, newTarget) {\n    }\n\n    _getFocused() {\n        // Override to delegate focus to child components.\n        return this;\n    }\n\n    _setFocusSettings(settings) {\n        // Override to add custom settings. See Application._handleFocusSettings().\n    }\n\n    _handleFocusSettings(settings) {\n        // Override to react on custom settings. See Application._handleFocusSettings().\n    }\n\n    static _template() {\n        return {}\n    }\n\n    hasFinalFocus() {\n        let path = this.application._focusPath;\n        return path && path.length && path[path.length - 1] === this;\n    }\n\n    hasFocus() {\n        let path = this.application._focusPath;\n        return path && (path.indexOf(this) >= 0);\n    }\n\n    get cparent() {\n        return Component.getParent(this);\n    }\n\n    seekAncestorByType(type) {\n        let c = this.cparent;\n        while(c) {\n            if (c.constructor === type) {\n                return c;\n            }\n            c = c.cparent;\n        }\n    }\n\n    getSharedAncestorComponent(element) {\n        let ancestor = this.getSharedAncestor(element);\n        while(ancestor && !ancestor.isComponent) {\n            ancestor = ancestor.parent;\n        }\n        return ancestor;\n    }\n\n    get signals() {\n        return this.__signals;\n    }\n\n    set signals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        this.__signals = v;\n    }\n\n    set alterSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__signals) {\n            this.__signals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__signals[key];\n            } else {\n                this.__signals[key] = v;\n            }\n        }\n    }\n\n    get passSignals() {\n        return this.__passSignals || {};\n    }\n\n    set passSignals(v) {\n        this.__passSignals = Object.assign(this.__passSignals || {}, v);\n    }\n\n    set alterPassSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__passSignals) {\n            this.__passSignals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__passSignals[key];\n            } else {\n                this.__passSignals[key] = v;\n            }\n        }\n    }\n\n    /**\n     * Signals the parent of the specified event.\n     * A parent/ancestor that wishes to handle the signal should set the 'signals' property on this component.\n     * @param {string} event\n     * @param {...*} args\n     */\n    signal(event, ...args) {\n        return this._signal(event, args);\n    }\n\n    _signal(event, args) {\n        const signalParent = this._getParentSignalHandler();\n        if (signalParent) {\n            if (this.__signals) {\n                let fireEvent = this.__signals[event];\n                if (fireEvent === false) {\n                    // Ignore event.\n                    return;\n                }\n                if (fireEvent) {\n                    if (fireEvent === true) {\n                        fireEvent = event;\n                    }\n\n                    if (signalParent._hasMethod(fireEvent)) {\n                        return signalParent[fireEvent](...args);\n                    }\n                }\n            }\n\n            let passSignal = (this.__passSignals && this.__passSignals[event]);\n            if (passSignal) {\n                // Bubble up.\n                if (passSignal && passSignal !== true) {\n                    // Replace signal name.\n                    event = passSignal;\n                }\n\n                return signalParent._signal(event, args);\n            }\n        }\n    }\n\n    _getParentSignalHandler() {\n        return this.cparent ? this.cparent._getSignalHandler() : null;\n    }\n\n    _getSignalHandler() {\n        if (this._signalProxy) {\n            return this.cparent ? this.cparent._getSignalHandler() : null;\n        }\n        return this;\n    }\n\n    get _signalProxy() {\n        return false;\n    }\n\n    fireAncestors(name, ...args) {\n        if (!name.startsWith('$')) {\n            throw new Error(\"Ancestor event name must be prefixed by dollar sign.\");\n        }\n\n        const parent = this._getParentSignalHandler();\n        if (parent) {\n            return parent._doFireAncestors(name, args);\n        }\n    }\n\n    _doFireAncestors(name, args) {\n        if (this._hasMethod(name)) {\n            return this.fire(name, ...args);\n        } else {\n            const signalParent = this._getParentSignalHandler();\n            if (signalParent) {\n                return signalParent._doFireAncestors(name, args);\n            }\n        }\n    }\n\n    static collectSubComponents(subs, element) {\n        if (element.hasChildren()) {\n            const childList = element.__childList;\n            for (let i = 0, n = childList.length; i < n; i++) {\n                const child = childList.getAt(i);\n                if (child.isComponent) {\n                    subs.push(child);\n                } else {\n                    Component.collectSubComponents(subs, child);\n                }\n            }\n        }\n    }\n\n    static getComponent(element) {\n        let parent = element;\n        while (parent && !parent.isComponent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n\n    static getParent(element) {\n        return Component.getComponent(element.parent);\n    }\n}\n\nComponent.prototype.isComponent = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreQuadList {\n\n    constructor(ctx) {\n\n        this.ctx = ctx;\n\n        this.quadTextures = [];\n\n        this.quadElements = [];\n    }\n\n    get length() {\n        return this.quadTextures.length;\n    }\n\n    reset() {\n        this.quadTextures = [];\n        this.quadElements = [];\n        this.dataLength = 0;\n    }\n\n    getElement(index) {\n        return this.quadElements[index]._element;\n    }\n\n    getElementCore(index) {\n        return this.quadElements[index];\n    }\n\n    getTexture(index) {\n        return this.quadTextures[index];\n    }\n\n    getTextureWidth(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.w) {\n            // Render texture;\n            return nativeTexture.w;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.w;\n        }\n    }\n\n    getTextureHeight(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.h) {\n            // Render texture;\n            return nativeTexture.h;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class WebGLCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\n        // We do not (want to) handle memory overflow.\n        const byteSize = ctx.stage.getOption('bufferMemory');\n\n        this.dataLength = 0;\n\n        this.data = new ArrayBuffer(byteSize);\n        this.floats = new Float32Array(this.data);\n        this.uints = new Uint32Array(this.data);\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return index * 80;\n    }\n\n    getQuadContents() {\n        // Debug: log contents of quad buffer.\n        let floats = this.floats;\n        let uints = this.uints;\n        let lines = [];\n        for (let i = 1; i <= this.length; i++) {\n            let str = 'entry ' + i + ': ';\n            for (let j = 0; j < 4; j++) {\n                let b = i * 20 + j * 4;\n                str += floats[b] + ',' + floats[b+1] + ':' + floats[b+2] + ',' + floats[b+3] + '[' + uints[b+4].toString(16) + '] ';\n            }\n            lines.push(str);\n        }\n\n        return lines;\n    }\n\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n\n        this.ctx = ctx;\n        this.shader = shader;\n        this.shaderOwner = shaderOwner;\n        this.renderTextureInfo = renderTextureInfo;\n        this.scissor = scissor;\n        this.index = index;\n        this.length = 0;\n\n    }\n\n    get quads() {\n        return this.ctx.renderState.quads;\n    }\n\n    getTexture(index) {\n        return this.quads.getTexture(this.index + index);\n    }\n\n    getElementCore(index) {\n        return this.quads.getElementCore(this.index + index);\n    }\n\n    getElement(index) {\n        return this.quads.getElement(this.index + index);\n    }\n\n    getElementWidth(index) {\n        return this.getElement(index).renderWidth;\n    }\n\n    getElementHeight(index) {\n        return this.getElement(index).renderHeight;\n    }\n\n    getTextureWidth(index) {\n        return this.quads.getTextureWidth(this.index + index);\n    }\n\n    getTextureHeight(index) {\n        return this.quads.getTextureHeight(this.index + index);\n    }\n\n    getRenderWidth() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.w;\n        } else {\n            return this.ctx.stage.w;\n        }\n    }\n\n    getRenderHeight() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.h;\n        } else {\n            return this.ctx.stage.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class WebGLCoreQuadOperation extends CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        super(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n\n        this.extraAttribsDataByteOffset = 0;\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return this.quads.getAttribsDataByteOffset(this.index + index);\n    }\n\n    /**\n     * Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\n     * @param x\n     * @param y\n     * @return {number[]}\n     */\n    getNormalRenderTextureCoords(x, y) {\n        let coords = this.shaderOwner.getRenderTextureCoords(x, y);\n        coords[0] /= this.getRenderWidth();\n        coords[1] /= this.getRenderHeight();\n        coords[0] = coords[0] * 2 - 1;\n        coords[1] = 1 - coords[1] * 2;\n        return coords;\n    }\n\n    getProjection() {\n        if (this.renderTextureInfo === null) {\n            return this.ctx.renderExec._projection;\n        } else {\n            return this.renderTextureInfo.nativeTexture.projection;\n        }\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreRenderExecutor {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.renderState = ctx.renderState;\n\n        this.gl = this.ctx.stage.gl;\n    }\n\n    destroy() {\n    }\n\n    _reset() {\n        this._bindRenderTexture(null);\n        this._setScissor(null);\n        this._clearRenderTexture();\n    }\n\n    execute() {\n        this._reset();\n\n        let qops = this.renderState.quadOperations;\n\n        let i = 0, j = 0, n = qops.length;\n        while (i < n) {\n            this._processQuadOperation(qops[i]);\n            i++;\n        }\n    }\n\n    _processQuadOperation(quadOperation) {\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\n            return;\n        }\n\n        this._setupQuadOperation(quadOperation);\n        this._execQuadOperation(quadOperation);\n\n    }\n\n    _setupQuadOperation(quadOperation) {\n    }\n\n    _execQuadOperation(op) {\n        // Set render texture.\n        let nativeTexture = op.renderTextureInfo ? op.renderTextureInfo.nativeTexture : null;\n\n        if (this._renderTexture !== nativeTexture) {\n            this._bindRenderTexture(nativeTexture);\n        }\n\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\n            this._setScissor(null);\n            this._clearRenderTexture();\n            op.renderTextureInfo.cleared = true;\n            this._setScissor(op.scissor);\n        } else {\n            this._setScissor(op.scissor);\n        }\n\n        this._renderQuadOperation(op);\n    }\n\n    _renderQuadOperation(op) {\n    }\n\n    _bindRenderTexture(renderTexture) {\n        this._renderTexture = renderTexture;\n    }\n\n    _clearRenderTexture(renderTexture) {\n    }\n\n    _setScissor(area) {\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\n\nexport default class WebGLCoreRenderExecutor extends CoreRenderExecutor {\n\n    constructor(ctx) {\n        super(ctx)\n\n        this.gl = this.ctx.stage.gl;\n\n        this.init();\n    }\n\n    init() {\n        let gl = this.gl;\n\n        // Create new sharable buffer for params.\n        this._attribsBuffer = gl.createBuffer();\n\n        let maxQuads = Math.floor(this.renderState.quads.data.byteLength / 80);\n\n        // Init webgl arrays.\n        let allIndices = new Uint16Array(maxQuads * 6);\n\n        // fill the indices with the quads to draw.\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n            allIndices[i] = j;\n            allIndices[i + 1] = j + 1;\n            allIndices[i + 2] = j + 2;\n            allIndices[i + 3] = j;\n            allIndices[i + 4] = j + 2;\n            allIndices[i + 5] = j + 3;\n        }\n\n        // The quads buffer can be (re)used to draw a range of quads.\n        this._quadsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\n\n        // The matrix that causes the [0,0 - W,H] box to map to [-1,-1 - 1,1] in the end results.\n        this._projection = new Float32Array([2/this.ctx.stage.coordsWidth, -2/this.ctx.stage.coordsHeight]);\n\n    }\n\n    destroy() {\n        super.destroy();\n        this.gl.deleteBuffer(this._attribsBuffer);\n        this.gl.deleteBuffer(this._quadsBuffer);\n    }\n\n    _reset() {\n        super._reset();\n\n        let gl = this.gl;\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.disable(gl.DEPTH_TEST);\n\n        this._stopShaderProgram();\n        this._setupBuffers();\n    }\n\n    _setupBuffers() {\n        let gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        let element = new Float32Array(this.renderState.quads.data, 0, this.renderState.quads.dataLength);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._attribsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\n    }\n\n    _setupQuadOperation(quadOperation) {\n        super._setupQuadOperation(quadOperation);\n        this._useShaderProgram(quadOperation.shader, quadOperation);\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            shader.beforeDraw(op);\n            shader.draw(op);\n            shader.afterDraw(op);\n        }\n    }\n\n    /**\n     * @param {WebGLShader} shader;\n     * @param {CoreQuadOperation} operation;\n     */\n    _useShaderProgram(shader, operation) {\n        if (!shader.hasSameProgram(this._currentShaderProgram)) {\n            if (this._currentShaderProgram) {\n                this._currentShaderProgram.stopProgram();\n            }\n            shader.useProgram();\n            this._currentShaderProgram = shader;\n        }\n        shader.setupUniforms(operation);\n    }\n\n    _stopShaderProgram() {\n        if (this._currentShaderProgram) {\n            // The currently used shader program should be stopped gracefully.\n            this._currentShaderProgram.stopProgram();\n            this._currentShaderProgram = null;\n        }\n    }\n\n    _bindRenderTexture(renderTexture) {\n        super._bindRenderTexture(renderTexture);\n\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0,0,this.ctx.stage.w,this.ctx.stage.h);\n        } else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._renderTexture.framebuffer);\n            gl.viewport(0,0,this._renderTexture.w, this._renderTexture.h);\n        }\n    }\n\n    _clearRenderTexture() {\n        super._clearRenderTexture();\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            let glClearColor = this.ctx.stage.getClearColor();\n            if (glClearColor) {\n                gl.clearColor(glClearColor[0] * glClearColor[3], glClearColor[1] * glClearColor[3], glClearColor[2] * glClearColor[3], glClearColor[3]);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n            }\n        } else {\n            // Clear texture.\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n    }\n\n    _setScissor(area) {\n        super._setScissor(area);\n\n        if (this._scissor === area) {\n            return;\n        }\n        this._scissor = area;\n\n        let gl = this.gl;\n        if (!area) {\n            gl.disable(gl.SCISSOR_TEST);\n        } else {\n            gl.enable(gl.SCISSOR_TEST);\n            let precision = this.ctx.stage.getRenderPrecision();\n            let y = area[1];\n            if (this._renderTexture === null) {\n                // Flip.\n                y = (this.ctx.stage.h / precision - (area[1] + area[3]));\n            }\n            gl.scissor(Math.round(area[0] * precision), Math.round(y * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreRenderState {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.stage = ctx.stage;\n\n        this.defaultShader = this.stage.renderer.getDefaultShader(ctx);\n\n        this.renderer = ctx.stage.renderer;\n\n        this.quads = this.renderer.createCoreQuadList(ctx);\n\n    }\n\n    reset() {\n        this._renderTextureInfo = null;\n\n        this._scissor = null;\n\n        this._shader = null;\n\n        this._shaderOwner = null;\n\n        this._realShader = null;\n\n        this._check = false;\n\n        this.quadOperations = [];\n\n        this._texturizer = null;\n\n        this._texturizerTemporary = false;\n\n        this._quadOperation = null;\n\n        this.quads.reset();\n\n        this._temporaryTexturizers = [];\n        \n        this._isCachingTexturizer = false;\n\n    }\n\n    get length() {\n        return this.quads.quadTextures.length;\n    }\n\n    setShader(shader, owner) {\n        if (this._shaderOwner !== owner || this._realShader !== shader) {\n            // Same shader owner: active shader is also the same.\n            // Prevent any shader usage to save performance.\n\n            this._realShader = shader;\n\n            if (shader.useDefault()) {\n                // Use the default shader when possible to prevent unnecessary program changes.\n                shader = this.defaultShader;\n            }\n            if (this._shader !== shader || this._shaderOwner !== owner) {\n                this._shader = shader;\n                this._shaderOwner = owner;\n                this._check = true;\n            }\n        }\n    }\n\n    get renderTextureInfo() {\n        return this._renderTextureInfo;\n    }\n\n    setScissor(area) {\n        if (this._scissor !== area) {\n            if (area) {\n                this._scissor = area;\n            } else {\n                this._scissor = null;\n            }\n            this._check = true;\n        }\n    }\n\n    getScissor() {\n        return this._scissor;\n    }\n\n    setRenderTextureInfo(renderTextureInfo) {\n        if (this._renderTextureInfo !== renderTextureInfo) {\n            this._renderTextureInfo = renderTextureInfo;\n            this._scissor = null;\n            this._check = true;\n        }\n    }\n\n    /**\n     * Sets the texturizer to be drawn during subsequent addQuads.\n     * @param {ElementTexturizer} texturizer\n     */\n    setTexturizer(texturizer, cache = false) {\n        this._texturizer = texturizer;\n        this._cacheTexturizer = cache;\n    }\n\n    set isCachingTexturizer(v) {\n        this._isCachingTexturizer = v;\n    }\n\n    get isCachingTexturizer() {\n        return this._isCachingTexturizer;\n    }\n\n    addQuad(elementCore) {\n        if (!this._quadOperation) {\n            this._createQuadOperation();\n        } else if (this._check && this._hasChanges()) {\n            this._finishQuadOperation();\n            this._check = false;\n        }\n\n        let nativeTexture = null;\n        if (this._texturizer) {\n            nativeTexture = this._texturizer.getResultTexture();\n\n            if (!this._cacheTexturizer) {\n                // We can release the temporary texture immediately after finalizing this quad operation.\n                this._temporaryTexturizers.push(this._texturizer);\n            }\n        }\n\n        if (!nativeTexture) {\n            nativeTexture = elementCore._displayedTextureSource.nativeTexture;\n        }\n\n        if (this._renderTextureInfo) {\n            if (this._shader === this.defaultShader && this._renderTextureInfo.empty) {\n                // The texture might be reusable under some conditions. We will check them in ElementCore.renderer.\n                this._renderTextureInfo.nativeTexture = nativeTexture;\n                this._renderTextureInfo.offset = this.length;\n            } else {\n                // It is not possible to reuse another texture when there is more than one quad.\n                this._renderTextureInfo.nativeTexture = null;\n            }\n            this._renderTextureInfo.empty = false;\n        }\n\n        this.quads.quadTextures.push(nativeTexture);\n        this.quads.quadElements.push(elementCore);\n\n        this._quadOperation.length++;\n\n        this.renderer.addQuad(this, this.quads, this.length - 1)\n    }\n\n    finishedRenderTexture() {\n        if (this._renderTextureInfo.nativeTexture) {\n            // There was only one texture drawn in this render texture.\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\n            // (it should exactly span this render texture).\n            if (!this._isRenderTextureReusable()) {\n                this._renderTextureInfo.nativeTexture = null;\n            }\n        }\n    }\n\n    _isRenderTextureReusable() {\n        const offset = this._renderTextureInfo.offset;\n        return (this.quads.quadTextures[offset].w === this._renderTextureInfo.w) &&\n            (this.quads.quadTextures[offset].h === this._renderTextureInfo.h) &&\n            this.renderer.isRenderTextureReusable(this, this._renderTextureInfo)\n    }\n\n    _hasChanges() {\n        let q = this._quadOperation;\n        if (this._shader !== q.shader) return true;\n        if (this._shaderOwner !== q.shaderOwner) return true;\n        if (this._renderTextureInfo !== q.renderTextureInfo) return true;\n        if (this._scissor !== q.scissor) {\n            if ((this._scissor[0] !== q.scissor[0]) || (this._scissor[1] !== q.scissor[1]) || (this._scissor[2] !== q.scissor[2]) || (this._scissor[3] !== q.scissor[3])) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    _finishQuadOperation(create = true) {\n        if (this._quadOperation) {\n            if (this._quadOperation.length || this._shader.addEmpty()) {\n                if (!this._quadOperation.scissor || ((this._quadOperation.scissor[2] > 0) && (this._quadOperation.scissor[3] > 0))) {\n                    // Ignore empty clipping regions.\n                    this.quadOperations.push(this._quadOperation);\n                }\n            }\n\n            if (this._temporaryTexturizers.length) {\n                for (let i = 0, n = this._temporaryTexturizers.length; i < n; i++) {\n                    // We can now reuse these render-to-textures in subsequent stages.\n                    // Huge performance benefit when filtering (fast blur).\n                    this._temporaryTexturizers[i].releaseRenderTexture();\n                }\n                this._temporaryTexturizers = [];\n            }\n\n            this._quadOperation = null;\n        }\n\n        if (create) {\n            this._createQuadOperation();\n        }\n    }\n\n    _createQuadOperation() {\n        this._quadOperation = this.renderer.createCoreQuadOperation(\n            this.ctx,\n            this._shader,\n            this._shaderOwner,\n            this._renderTextureInfo,\n            this._scissor,\n            this.length\n        );\n        this._check = false;\n    }\n\n    finish() {\n        if (this._quadOperation) {\n            // Add remaining.\n            this._finishQuadOperation(false);\n        }\n\n        this.renderer.finishRenderState(this);\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base functionality for shader setup/destroy.\n */\nexport default class WebGLShaderProgram {\n\n    constructor(vertexShaderSource, fragmentShaderSource) {\n\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n\n        this._program = null;\n\n        this._uniformLocations = new Map();\n        this._attributeLocations = new Map();\n\n        this._currentUniformValues = {};\n    }\n\n    compile(gl) {\n        if (this._program) return;\n\n        this.gl = gl;\n\n        this._program = gl.createProgram();\n\n        let glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\n        let glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\n\n        gl.attachShader(this._program, glVertShader);\n        gl.attachShader(this._program, glFragShader);\n        gl.linkProgram(this._program);\n\n        // if linking fails, then log and cleanup\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\n            console.error('Error: Could not initialize shader.');\n            console.error('gl.VALIDATE_STATUS', gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\n            console.error('gl.getError()', gl.getError());\n\n            // if there is a program info log, log it\n            if (gl.getProgramInfoLog(this._program) !== '') {\n                console.warn('Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(this._program));\n            }\n\n            gl.deleteProgram(this._program);\n            this._program = null;\n        }\n\n        // clean up some shaders\n        gl.deleteShader(glVertShader);\n        gl.deleteShader(glFragShader);\n    }\n\n    _glCompile(type, src) {\n        let shader = this.gl.createShader(type);\n\n        this.gl.shaderSource(shader, src);\n        this.gl.compileShader(shader);\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.log(this.constructor.name, 'Type: ' + (type === this.gl.VERTEX_SHADER ? 'vertex shader' : 'fragment shader') );\n            console.log(this.gl.getShaderInfoLog(shader));\n            let idx = 0;\n            console.log(\"========== source ==========\\n\" + src.split(\"\\n\").map(line => \"\" + (++idx) + \": \" + line).join(\"\\n\"));\n            return null;\n        }\n\n        return shader;\n    }\n\n    getUniformLocation(name) {\n        let location = this._uniformLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getUniformLocation(this._program, name);\n            this._uniformLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    getAttribLocation(name) {\n        let location = this._attributeLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getAttribLocation(this._program, name);\n            this._attributeLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    destroy() {\n        if (this._program) {\n            this.gl.deleteProgram(this._program);\n            this._program = null;\n        }\n    }\n\n    get glProgram() {\n        return this._program;\n    }\n\n    get compiled() {\n        return !!this._program;\n    }\n\n    _valueEquals(v1, v2) {\n        // Uniform value is either a typed array or a numeric value.\n        if (v1.length && v2.length) {\n            for (let i = 0, n = v1.length; i < n; i++) {\n                if (v1[i] !== v2[i]) return false;\n            }\n            return true;\n        } else {\n            return (v1 === v2);\n        }\n    }\n\n    _valueClone(v) {\n        if (v.length) {\n            return v.slice(0);\n        } else {\n            return v;\n        }\n    }\n\n    setUniformValue(name, value, glFunction) {\n        let v = this._currentUniformValues[name];\n        if (v === undefined || !this._valueEquals(v, value)) {\n            let clonedValue = this._valueClone(value);\n            this._currentUniformValues[name] = clonedValue;\n\n            let loc = this.getUniformLocation(name);\n            if (loc) {\n                let isMatrix = (glFunction === this.gl.uniformMatrix2fv || glFunction === this.gl.uniformMatrix3fv || glFunction === this.gl.uniformMatrix4fv);\n                if (isMatrix) {\n                    glFunction.call(this.gl, loc, false, clonedValue);\n                } else {\n                    glFunction.call(this.gl, loc, clonedValue);\n                }\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShaderProgram from \"./WebGLShaderProgram.mjs\";\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class WebGLShader extends Shader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        const stage = ctx.stage;\n\n        this._program = stage.renderer.shaderPrograms.get(this.constructor);\n        if (!this._program) {\n            this._program = new WebGLShaderProgram(this.constructor.vertexShaderSource, this.constructor.fragmentShaderSource);\n\n            // Let the vbo context perform garbage collection.\n            stage.renderer.shaderPrograms.set(this.constructor, this._program);\n        }\n\n        this.gl = stage.gl;\n    }\n\n    get glProgram() {\n        return this._program.glProgram;\n    }\n\n    _init() {\n        if (!this._initialized) {\n            this.initialize();\n            this._initialized = true;\n        }\n    }\n\n    initialize() {\n        this._program.compile(this.gl);\n    }\n\n    get initialized() {\n        return this._initialized;\n    }\n\n    _uniform(name) {\n        return this._program.getUniformLocation(name);\n    }\n\n    _attrib(name) {\n        return this._program.getAttribLocation(name);\n    }\n\n    _setUniform(name, value, glFunction) {\n        this._program.setUniformValue(name, value, glFunction);\n    }\n\n    useProgram() {\n        this._init();\n        this.gl.useProgram(this.glProgram);\n        this.beforeUsage();\n        this.enableAttribs();\n    }\n\n    stopProgram() {\n        this.afterUsage();\n        this.disableAttribs();\n    }\n\n    hasSameProgram(other) {\n        // For performance reasons, we first check for identical references.\n        return (other && ((other === this) || (other._program === this._program)));\n    }\n\n    beforeUsage() {\n        // Override to set settings other than the default settings (blend mode etc).\n    }\n\n    afterUsage() {\n        // All settings changed in beforeUsage should be reset here.\n    }\n\n    enableAttribs() {\n\n    }\n\n    disableAttribs() {\n\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 0;\n    }\n\n    getVertexAttribPointerOffset(operation) {\n        return operation.extraAttribsDataByteOffset - operation.index * 4 * this.getExtraAttribBytesPerVertex();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\n        // operation.extraAttribsBufferByteOffset.\n    }\n\n    setupUniforms(operation) {\n        // Set all shader-specific uniforms.\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\n        // The uniforms are shared by all shaders that have the same type (and shader program).\n    }\n\n    _getProjection(operation) {\n        return operation.getProjection();\n    }\n\n    getFlipY(operation) {\n        return this._getProjection(operation)[1] < 0;\n    }\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n    cleanup() {\n        this._initialized = false;\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../WebGLShader.mjs\";\n\nexport default class DefaultShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n            }\n        }\n    }\n\n}\n\nDefaultShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDefaultShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Renderer {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._defaultShader = undefined;\n    }\n\n    gc(aggressive) {\n    }\n\n    destroy() {\n    }\n\n    getDefaultShader(ctx = this.stage.ctx) {\n        if (!this._defaultShader) {\n            this._defaultShader = this._createDefaultShader(ctx);\n        }\n        return this._defaultShader;\n    }\n\n    _createDefaultShader(ctx) {\n    }\n\n    isValidShaderType(shaderType) {\n        return (shaderType.prototype instanceof this._getShaderBaseType());\n    }\n\n    createShader(ctx, settings) {\n        const shaderType = settings.type;\n        // If shader type is not correct, use a different platform.\n        if (!this.isValidShaderType(shaderType)) {\n            const convertedShaderType = this._getShaderAlternative(shaderType);\n            if (!convertedShaderType) {\n                console.warn(\"Shader has no implementation for render target: \" + shaderType.name);\n                return this._createDefaultShader(ctx);\n            }\n            return new convertedShaderType(ctx);\n        } else {\n            const shader = new shaderType(ctx);\n            Base.patchObject(this, settings);\n            return shader;\n        }\n    }\n\n    _getShaderBaseType() {\n    }\n\n    _getShaderAlternative(shaderType) {\n        return this.getDefaultShader();\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        console.warn('copyRenderTexture not supported by renderer');\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport WebGLCoreQuadList from \"./WebGLCoreQuadList.mjs\";\nimport WebGLCoreQuadOperation from \"./WebGLCoreQuadOperation.mjs\";\nimport WebGLCoreRenderExecutor from \"./WebGLCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport WebGLShader from \"./WebGLShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\n\nexport default class WebGLRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n        this.shaderPrograms = new Map();\n    }\n\n    destroy() {\n        this.shaderPrograms.forEach(shaderProgram => shaderProgram.destroy());\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return WebGLShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getWebGL && shaderType.getWebGL();\n    }\n\n    createCoreQuadList(ctx) {\n        return new WebGLCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new WebGLCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new WebGLCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const gl = this.stage.gl;\n        const glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        glTexture.params = {};\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n        glTexture.options = {format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE};\n\n        // We need a specific framebuffer for every render texture.\n        glTexture.framebuffer = gl.createFramebuffer();\n        glTexture.projection = new Float32Array([2/w, 2/h]);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\n\n        return glTexture;\n    }\n    \n    freeRenderTexture(glTexture) {\n        let gl = this.stage.gl;\n        gl.deleteFramebuffer(glTexture.framebuffer);\n        gl.deleteTexture(glTexture);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        const gl = this.stage.gl;\n\n        const source = options.source;\n\n        const format = {\n            premultiplyAlpha: true,\n            hasAlpha: true\n        };\n\n        if (options && options.hasOwnProperty('premultiplyAlpha')) {\n            format.premultiplyAlpha = options.premultiplyAlpha;\n        }\n\n        if (options && options.hasOwnProperty('flipBlueRed')) {\n            format.flipBlueRed = options.flipBlueRed;\n        }\n\n        if (options && options.hasOwnProperty('hasAlpha')) {\n            format.hasAlpha = options.hasAlpha;\n        }\n\n        if (!format.hasAlpha) {\n            format.premultiplyAlpha = false;\n        }\n\n        format.texParams = options.texParams || {}\n        format.texOptions = options.texOptions || {}\n\n        let glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\n\n        if (Utils.isNode) {\n            gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, !!format.flipBlueRed);\n        }\n\n        const texParams = format.texParams;\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n\n        Object.keys(texParams).forEach(key => {\n            const value = texParams[key];\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key), value);\n        });\n\n        const texOptions = format.texOptions;\n        texOptions.format = texOptions.format || (format.hasAlpha ? gl.RGBA : gl.RGB);\n        texOptions.type = texOptions.type || gl.UNSIGNED_BYTE;\n        texOptions.internalFormat = texOptions.internalFormat || texOptions.format;\n        if (options && options.imageRef) {\n            texOptions.imageRef = options.imageRef;\n        }\n\n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\n\n        glTexture.params = Utils.cloneObjShallow(texParams);\n        glTexture.options = Utils.cloneObjShallow(texOptions);\n\n        return glTexture;\n    }\n\n    freeTextureSource(textureSource) {\n        this.stage.gl.deleteTexture(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        let offset = (index * 20);\n        const elementCore = quads.quadElements[index];\n\n        let r = elementCore._renderContext;\n\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        const mca = StageUtils.mergeColorAlpha;\n\n        if (r.tb !== 0 || r.tc !== 0) {\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta;\n            floats[offset++] = r.py + elementCore._w * r.tc;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._w * r.tc + elementCore._h * r.td;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._h * r.td;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        } else {\n            // Simple.\n            let cx = r.px + elementCore._w * r.ta;\n            let cy = r.py + elementCore._h * r.td;\n\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        }\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        let offset = (renderState._renderTextureInfo.offset * 80) / 4;\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        return ((floats[offset] === 0) &&\n            (floats[offset + 1] === 0) &&\n            (floats[offset + 2] === 0) &&\n            (floats[offset + 3] === 0) &&\n            (uints[offset + 4] === 0xFFFFFFFF) &&\n            (floats[offset + 5] === renderTextureInfo.w) &&\n            (floats[offset + 6] === 0) &&\n            (floats[offset + 7] === 1) &&\n            (floats[offset + 8] === 0) &&\n            (uints[offset + 9] === 0xFFFFFFFF) &&\n            (floats[offset + 10] === renderTextureInfo.w) &&\n            (floats[offset + 11] === renderTextureInfo.h) &&\n            (floats[offset + 12] === 1) &&\n            (floats[offset + 13] === 1) &&\n            (uints[offset + 14] === 0xFFFFFFFF) &&\n            (floats[offset + 15] === 0) &&\n            (floats[offset + 16] === renderTextureInfo.h) &&\n            (floats[offset + 17] === 0) &&\n            (floats[offset + 18] === 1) &&\n            (uints[offset + 19] === 0xFFFFFFFF));\n    }\n\n    finishRenderState(renderState) {\n        // Set extra shader attribute data.\n        let offset = renderState.length * 80;\n        for (let i = 0, n = renderState.quadOperations.length; i < n; i++) {\n            renderState.quadOperations[i].extraAttribsDataByteOffset = offset;\n            let extra = renderState.quadOperations[i].shader.getExtraAttribBytesPerVertex() * 4 * renderState.quadOperations[i].length;\n            offset += extra;\n            if (extra) {\n                renderState.quadOperations[i].shader.setExtraAttribsInBuffer(renderState.quadOperations[i], renderState.quads);\n            }\n        }\n        renderState.quads.dataLength = offset;\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        const gl = this.stage.gl;\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture.framebuffer);\n        const precision = renderTexture.precision;\n        gl.copyTexSubImage2D(\n            gl.TEXTURE_2D,\n            0,\n            precision * (options.sx || 0),\n            precision * (options.sy || 0),\n            precision * (options.x || 0),\n            precision * (options.y || 0),\n            precision * (options.w || renderTexture.ow),\n            precision * (options.h || renderTexture.oh));\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class C2dCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this.renderContexts = [];\n        this.modes = [];\n    }\n\n    setRenderContext(index, v) {\n        this.renderContexts[index] = v;\n    }\n\n    setSimpleTc(index, v) {\n        if (v) {\n            this.modes[index] |= 1;\n        } else {\n            this.modes[index] -= (this.modes[index] & 1);\n        }\n    }\n\n    setWhite(index, v) {\n        if (v) {\n            this.modes[index] |= 2;\n        } else {\n            this.modes[index] -= (this.modes[index] & 2);\n        }\n    }\n\n    getRenderContext(index) {\n        return this.renderContexts[index];\n    }\n\n    getSimpleTc(index) {\n        return (this.modes[index] & 1);\n    }\n\n    getWhite(index) {\n        return (this.modes[index] & 2);\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class C2dCoreQuadOperation extends CoreQuadOperation {\n\n    getRenderContext(index) {\n        return this.quads.getRenderContext(this.index + index);\n    }\n\n    getSimpleTc(index) {\n        return this.quads.getSimpleTc(this.index + index);\n    }\n\n    getWhite(index) {\n        return this.quads.getWhite(this.index + index);\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport Utils from \"../../tree/Utils.mjs\";\n\nexport default class C2dCoreRenderExecutor extends CoreRenderExecutor {\n\n    init() {\n        this._mainRenderTexture = this.ctx.stage.getCanvas();\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            const target = this._renderTexture || this._mainRenderTexture;\n            shader.beforeDraw(op, target);\n            shader.draw(op, target);\n            shader.afterDraw(op, target);\n        }\n    }\n\n    _clearRenderTexture() {\n        const ctx = this._getContext();\n\n        let clearColor = [0, 0, 0, 0];\n        if (this._mainRenderTexture.ctx === ctx) {\n            clearColor = this.ctx.stage.getClearColor();\n        }\n\n        const renderTexture = ctx.canvas;\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\n            ctx.clearRect(0, 0, renderTexture.width, renderTexture.height);\n        } else {\n            ctx.fillStyle = StageUtils.getRgbaStringFromArray(clearColor);\n            // Do not use fillRect because it produces artifacts.\n            ctx.globalCompositeOperation = 'copy';\n            ctx.beginPath();\n            ctx.rect(0, 0, renderTexture.width, renderTexture.height);\n            ctx.closePath();\n            ctx.fill();\n            ctx.globalCompositeOperation = 'source-over';\n        }\n    }\n    \n    _getContext() {\n        if (this._renderTexture) {\n            return this._renderTexture.ctx;\n        } else {\n            return this._mainRenderTexture.ctx;\n        } \n    }\n\n    _restoreContext() {\n        const ctx = this._getContext();\n        ctx.restore();\n        ctx.save();\n        ctx._scissor = null;\n    }\n\n    _setScissor(area) {\n        const ctx = this._getContext();\n\n        if (!C2dCoreRenderExecutor._equalScissorAreas(ctx.canvas, ctx._scissor, area)) {\n            // Clipping is stored in the canvas context state.\n            // We can't reset clipping alone so we need to restore the full context.\n            this._restoreContext();\n\n            let precision = this.ctx.stage.getRenderPrecision();\n            if (area) {\n                ctx.beginPath();\n                ctx.rect(Math.round(area[0] * precision), Math.round(area[1] * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n                ctx.closePath();\n                ctx.clip();\n            }\n            ctx._scissor = area;\n        }\n    }\n\n    static _equalScissorAreas(canvas, area, current) {\n        if (!area) {\n            area = [0, 0, canvas.width, canvas.height]\n        }\n        if (!current) {\n            current = [0, 0, canvas.width, canvas.height]\n        }\n        return Utils.equalValues(area, current)\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class C2dShader extends Shader {\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dShader from \"../C2dShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class DefaultShader extends C2dShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._rectangleTexture = ctx.stage.rectangleTexture.source.nativeTexture;\n        this._tintManager = this.ctx.stage.renderer.tintManager;\n    }\n\n    draw(operation, target) {\n        const ctx = target.ctx;\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            const tx = operation.getTexture(i);\n            const vc = operation.getElementCore(i);\n            const rc = operation.getRenderContext(i);\n            const white = operation.getWhite(i);\n            const stc = operation.getSimpleTc(i);\n\n            //@todo: try to optimize out per-draw transform setting. split translate, transform.\n            const precision = this.ctx.stage.getRenderPrecision();\n            ctx.setTransform(rc.ta * precision, rc.tc * precision, rc.tb * precision, rc.td * precision, rc.px * precision, rc.py * precision);\n\n            const rect = (tx === this._rectangleTexture);\n            const info = {operation, target, index: i, rect};\n\n            if (rect) {\n                // Check for gradient.\n                if (white) {\n                    ctx.fillStyle = 'white';\n                } else {\n                    this._setColorGradient(ctx, vc);\n                }\n\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n                ctx.fillRect(0, 0, vc.w, vc.h);\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            } else {\n                // @todo: set image smoothing based on the texture.\n\n                // @todo: optimize by registering whether identity texcoords are used.\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n\n                // @todo: test if rounding yields better performance.\n\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\n                const sourceX = stc ? 0 : (vc._ulx * tx.w);\n                const sourceY = stc ? 0 : (vc._uly * tx.h);\n                const sourceW = (stc ? 1 : (vc._brx - vc._ulx)) * tx.w;\n                const sourceH = (stc ? 1 : (vc._bry - vc._uly)) * tx.h;\n\n                let colorize = !white;\n                if (colorize) {\n                    // @todo: cache the tint texture for better performance.\n\n                    // Draw to intermediate texture with background color/gradient.\n                    // This prevents us from having to create a lot of render texture canvases.\n\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\n                    let color = vc._colorUl;\n                    if (vc._colorUl !== vc._colorUr || vc._colorUr !== vc._colorBl || vc._colorBr !== vc._colorBl) {\n                        color = StageUtils.mergeMultiColorsEqual([vc._colorUl, vc._colorUr, vc._colorBl, vc._colorBr]);\n                    }\n\n                    const alpha = ((color / 16777216) | 0) / 255.0;\n                    ctx.globalAlpha *= alpha;\n\n                    const rgb = color & 0x00FFFFFF;\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\n\n                    // Actually draw result.\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tintTexture, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                } else {\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tx, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                }\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            }\n        }\n    }\n\n    _setColorGradient(ctx, vc, w = vc.w, h = vc.h, transparency = true) {\n        let color = vc._colorUl;\n        let gradient;\n        //@todo: quick single color check.\n        //@todo: cache gradient/fill style (if possible, probably context-specific).\n\n        if (vc._colorUl === vc._colorUr) {\n            if (vc._colorBl === vc._colorBr) {\n                if (vc._colorUl === vc.colorBl) {\n                    // Single color.\n                } else {\n                    // Vertical gradient.\n                    gradient = ctx.createLinearGradient(0, 0, 0, h);\n                    if (transparency) {\n                        gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBl));\n                    } else {\n                        gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBl));\n\n                    }\n                }\n            } else {\n                // Not supported gradient.\n            }\n        } else {\n            if (vc._colorUl === vc._colorBl && vc._colorUr === vc._colorBr) {\n                // Horizontal gradient.\n                gradient = ctx.createLinearGradient(0, 0, w, 0);\n                if (transparency) {\n                    gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBr));\n                } else {\n                    gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBr));\n                }\n            }\n        }\n\n        if (gradient) {\n            ctx.fillStyle = gradient;\n        } else {\n            ctx.fillStyle = transparency ? StageUtils.getRgbaString(color) : StageUtils.getRgbString(color);\n        }\n    }\n\n    _beforeDrawEl(info) {\n    }\n\n    _afterDrawEl(info) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class C2dTextureTintManager {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._usedMemory = 0;\n        this._cachedNativeTextures = new Set();\n    }\n\n    destroy() {\n        this.gc(true);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n\n        this.stage.addMemoryUsage(delta);\n    }\n\n    delete(nativeTexture) {\n        // Should be called when native texture is cleaned up.\n        if (this._hasCache(nativeTexture)) {\n            const cache = this._getCache(nativeTexture);\n            const prevMemUsage = cache.memoryUsage;\n            cache.clear();\n            this._cachedNativeTextures.delete(nativeTexture);\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\n        }\n    }\n\n    getTintTexture(nativeTexture, color) {\n        const frame = this.stage.frameCounter;\n\n        this._cachedNativeTextures.add(nativeTexture);\n\n        const cache = this._getCache(nativeTexture);\n\n        const item = cache.get(color);\n        item.lf = frame;\n\n        if (item.tx) {\n            if (nativeTexture.update > item.u) {\n                // Native texture was updated in the mean time: renew.\n                this._tintTexture(item.tx, nativeTexture, color)\n            }\n\n            return item.tx;\n        } else {\n            const before = cache.memoryUsage;\n\n            // Find blanco tint texture.\n            let target = cache.reuseTexture(frame);\n            if (target) {\n                target.ctx.clearRect(0, 0, target.width, target.height);\n            } else {\n                // Allocate new.\n                target = document.createElement('canvas');\n                target.width = nativeTexture.w;\n                target.height = nativeTexture.h;\n                target.ctx = target.getContext('2d');\n            }\n\n            this._tintTexture(target, nativeTexture, color);\n            cache.set(color, target, frame);\n\n            const after = cache.memoryUsage;\n\n            if (after !== before) {\n                this._addMemoryUsage(after - before);\n            }\n\n            return target;\n        }\n    }\n\n    _tintTexture(target, source, color) {\n        let col = color.toString(16);\n        while (col.length < 6) {\n            col = \"0\" + col;\n        }\n        target.ctx.fillStyle = '#' + col;\n        target.ctx.globalCompositeOperation = 'copy';\n        target.ctx.fillRect(0, 0, source.w, source.h);\n        target.ctx.globalCompositeOperation = 'multiply';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n\n        // Alpha-mix the texture.\n        target.ctx.globalCompositeOperation = 'destination-in';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n    }\n\n    _hasCache(nativeTexture) {\n        return !!nativeTexture._tintCache;\n    }\n\n    _getCache(nativeTexture) {\n        if (!nativeTexture._tintCache) {\n            nativeTexture._tintCache = new C2dTintCache(nativeTexture);\n        }\n        return nativeTexture._tintCache;\n    }\n\n    gc(aggressive = false) {\n        const frame = this.stage.frameCounter;\n        let delta = 0;\n        this._cachedNativeTextures.forEach(texture => {\n            const cache = this._getCache(texture);\n            if (aggressive) {\n                delta += cache.memoryUsage;\n                texture.clear();\n            } else {\n                const before = cache.memoryUsage;\n                cache.cleanup(frame);\n                cache.releaseBlancoTextures();\n                delta += (cache.memoryUsage - before);\n            }\n        });\n\n        if (aggressive) {\n            this._cachedNativeTextures.clear();\n        }\n\n        if (delta) {\n            this._addMemoryUsage(delta);\n        }\n    }\n\n}\n\nclass C2dTintCache {\n\n    constructor(nativeTexture) {\n        this._tx = nativeTexture;\n        this._colors = new Map();\n        this._blancoTextures = null;\n        this._lastCleanupFrame = 0;\n        this._memTextures = 0;\n    }\n\n    get memoryUsage() {\n        return this._memTextures * this._tx.w * this._tx.h;\n    }\n\n    releaseBlancoTextures() {\n        this._memTextures -= this._blancoTextures.length;\n        this._blancoTextures = [];\n    }\n\n    clear() {\n        // Dereference the textures.\n        this._blancoTextures = null;\n        this._colors.clear();\n        this._memTextures = 0;\n    }\n\n    get(color) {\n        let item = this._colors.get(color);\n        if (!item) {\n            item = {lf: -1, tx: undefined, u: -1};\n            this._colors.set(color, item);\n        }\n        return item;\n    }\n\n    set(color, texture, frame) {\n        const item = this.get(color);\n        item.lf = frame;\n        item.tx = texture;\n        item.u = frame;\n        this._memTextures++;\n    }\n\n    cleanup(frame) {\n        // We only need to clean up once per frame.\n        if (this._lastCleanupFrame !== frame) {\n\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\n            this._blancoTextures = [];\n\n            this._colors.forEach((item, color) => {\n                // Clean up entries that were not used last frame.\n                if (item.lf < frame - 1) {\n                    if (item.tx) {\n                        // Keep as reusable blanco texture.\n                        this._blancoTextures.push(item.tx);\n                    }\n                    this._colors.delete(color);\n                }\n            });\n\n            this._lastCleanupFrame = frame;\n        }\n    }\n\n    reuseTexture(frame) {\n        // Try to reuse textures, because creating them every frame is expensive.\n        this.cleanup(frame);\n        if (this._blancoTextures && this._blancoTextures.length) {\n            this._memTextures--;\n            return this._blancoTextures.pop();\n        }\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dCoreQuadList from \"./C2dCoreQuadList.mjs\";\nimport C2dCoreQuadOperation from \"./C2dCoreQuadOperation.mjs\";\nimport C2dCoreRenderExecutor from \"./C2dCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport C2dShader from \"./C2dShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\nimport TextureTintManager from \"./C2dTextureTintManager.mjs\";\n\nexport default class C2dRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n\n        this.tintManager = new TextureTintManager(stage);\n\n        this.setupC2d(this.stage.c2d.canvas);\n    }\n\n    destroy() {\n        this.tintManager.destroy();\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return C2dShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getC2d && shaderType.getC2d();\n    }\n\n    createCoreQuadList(ctx) {\n        return new C2dCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new C2dCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new C2dCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const canvas = document.createElement('canvas');\n        canvas.width = pw;\n        canvas.height = ph;\n        this.setupC2d(canvas);\n        return canvas;\n    }\n    \n    freeRenderTexture(nativeTexture) {\n        this.tintManager.delete(nativeTexture);\n    }\n\n    gc(aggressive) {\n        this.tintManager.gc(aggressive);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        // For canvas, we do not need to upload.\n        if (options.source.buffer) {\n            // Convert RGBA buffer to canvas.\n            const canvas = document.createElement('canvas');\n            canvas.width = options.w;\n            canvas.height = options.h;\n\n            const imageData = new ImageData(new Uint8ClampedArray(options.source.buffer), options.w, options.h);\n            canvas.getContext('2d').putImageData(imageData, 0, 0);\n            return canvas;\n        }\n\n        return options.source;\n    }\n\n    freeTextureSource(textureSource) {\n        this.tintManager.delete(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        // Render context changes while traversing so we save it by ref.\n        const elementCore = quads.quadElements[index];\n        quads.setRenderContext(index, elementCore._renderContext);\n        quads.setWhite(index, elementCore.isWhite());\n        quads.setSimpleTc(index, elementCore.hasSimpleTexCoords());\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        // @todo: check render coords/matrix, maybe move this to core?\n        return false;\n    }\n\n    finishRenderState(renderState) {\n    }\n\n    setupC2d(canvas) {\n        const ctx = canvas.getContext('2d');\n        canvas.ctx = ctx;\n\n        ctx._scissor = null;\n\n        // Save base state so we can restore the defaults later.\n        canvas.ctx.save();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../../webgl/WebGLShader.mjs\";\n\nexport default class SparkShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    if (glTexture.options && glTexture.options.imageRef) {\n                        let elementPostion = (i > 0) ? (i - 1) : i;\n                        const precision = this.ctx.stage.getOption('precision');\n                        let vc = operation.getElementCore(elementPostion);\n                        this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                    } else {\n                        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                        gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    }\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                if (glTexture.options && glTexture.options.imageRef) {\n                    const precision = this.ctx.stage.getOption('precision');\n                    let vc = operation.getElementCore(pos);\n                    this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                } else {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                }\n            }\n        }\n    }\n\n}\n\nSparkShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nSparkShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLRenderer from \"../webgl/WebGLRenderer.mjs\";\nimport SparkShader from \"./shaders/SparkShader.mjs\";\n\nexport default class SparkRenderer extends WebGLRenderer {\n\n    constructor(stage) {\n        super(stage);\n    }\n\n    _createDefaultShader(ctx) {\n        return new SparkShader(ctx);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        global.beginDrawing();\n        let ret = super.createCoreRenderExecutor(ctx);\n        global.endDrawing();\n        return ret;\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ImageWorker {\n\n    constructor(options = {}) {\n        this._items = new Map();\n        this._id = 0;\n\n        this._initWorker();\n    }\n\n    destroy() {\n        if (this._worker) {\n            this._worker.terminate();\n        }\n    }\n\n    _initWorker() {\n        const code = `(${createWorker.toString()})()`;\n        const blob = new Blob([code.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\n        const blobURL = (window.URL ? URL : webkitURL).createObjectURL(blob, {\n            type: 'application/javascript; charset=utf-8'\n        });\n        this._worker = new Worker(blobURL);\n\n        this._worker.postMessage({type: 'config', config: {path: window.location.href, protocol: window.location.protocol}});\n\n        this._worker.onmessage = (e) => {\n            if (e.data && e.data.id) {\n                const id = e.data.id;\n                const item = this._items.get(id);\n                if (item) {\n                    if (e.data.type == 'data') {\n                        this.finish(item, e.data.info);\n                    } else {\n                        this.error(item, e.data.info);\n                    }\n                }\n            }\n        }\n    }\n\n    create(src) {\n        const id = ++this._id;\n        const item = new ImageWorkerImage(this, id, src);\n        this._items.set(id, item);\n        this._worker.postMessage({type: \"add\", id: id, src: src});\n        return item;\n    }\n\n    cancel(image) {\n        this._worker.postMessage({type: \"cancel\", id: image.id});\n        this._items.delete(image.id);\n    }\n\n    error(image, info) {\n        image.error(info);\n        this._items.delete(image.id);\n    }\n\n    finish(image, info) {\n        image.load(info);\n        this._items.delete(image.id);\n    }\n\n}\n\nclass ImageWorkerImage {\n\n    constructor(manager, id, src) {\n        this._manager = manager;\n        this._id = id;\n        this._src = src;\n        this._onError = null;\n        this._onLoad = null;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set onError(f) {\n        this._onError = f;\n    }\n\n    set onLoad(f) {\n        this._onLoad = f;\n    }\n\n    cancel() {\n        this._manager.cancel(this);\n    }\n\n    load(info) {\n        if (this._onLoad) {\n            this._onLoad(info);\n        }\n    }\n\n    error(info) {\n        if (this._onError) {\n            this._onError(info);\n        }\n    }\n\n}\n\n/**\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n */\nconst createWorker = function() {\n\n    function ImageWorkerServer() {\n\n        this.items = new Map();\n\n        var t = this;\n        onmessage = function(e) {\n            t._receiveMessage(e);\n        }\n\n    }\n\n    ImageWorkerServer.isPathAbsolute = function(path) {\n        return /^(?:\\/|[a-z]+:\\/\\/)/.test(path) || path.substr(0, 5) == 'data:';\n    };\n\n    ImageWorkerServer.prototype._receiveMessage = function(e) {\n        if (e.data.type === 'config') {\n            this.config = e.data.config;\n\n            var base = this.config.path;\n            var parts = base.split(\"/\");\n            parts.pop();\n            this._relativeBase = parts.join(\"/\") + \"/\";\n\n        } else if (e.data.type === 'add') {\n            this.add(e.data.id, e.data.src);\n        } else if (e.data.type === 'cancel') {\n            this.cancel(e.data.id);\n        }\n    };\n\n    ImageWorkerServer.prototype.add = function(id, src) {\n        // Convert relative URLs.\n        if (!ImageWorkerServer.isPathAbsolute(src)) {\n            src = this._relativeBase + src;\n        }\n\n        if (src.substr(0,2) === \"//\") {\n            // This doesn't work for image workers.\n            src = this.config.protocol + src;\n        }\n\n        var item = new ImageWorkerServerItem(id, src);\n        var t = this;\n        item.onFinish = function(result) {\n            t.finish(item, result);\n        };\n        item.onError = function(info) {\n            t.error(item, info);\n        };\n        this.items.set(id, item);\n        item.start();\n    };\n\n    ImageWorkerServer.prototype.cancel = function(id) {\n        var item = this.items.get(id);\n        if (item) {\n            item.cancel();\n            this.items.delete(id);\n        }\n    }\n\n    ImageWorkerServer.prototype.finish = function(item, {imageBitmap, hasAlphaChannel}) {\n        postMessage({\n            type: \"data\",\n            id: item.id,\n            info: {\n                imageBitmap,\n                hasAlphaChannel\n            }\n        }, [imageBitmap]);\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.prototype.error = function(item, {type, message}) {\n        postMessage({\n            type: \"error\",\n            id: item.id,\n            info: {\n                type,\n                message\n            }\n        });\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.isWPEBrowser = function() {\n        return (navigator.userAgent.indexOf(\"WPE\") !== -1);\n    };\n\n    function ImageWorkerServerItem(id, src) {\n\n        this._onError = undefined;\n        this._onFinish = undefined;\n        this._id = id;\n        this._src = src;\n        this._xhr = undefined;\n        this._mimeType = undefined;\n        this._canceled = false;\n\n    }\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'id', {\n        get: function() {\n            return this._id;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onFinish', {\n        get: function() {\n            return this._onFinish;\n        },\n        set: function(f) {\n            this._onFinish = f;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onError', {\n        get: function() {\n            return this._onError;\n        },\n        set: function(f) {\n            this._onError = f;\n        }\n    });\n\n    ImageWorkerServerItem.prototype.start = function() {\n        this._xhr = new XMLHttpRequest();\n        this._xhr.open(\"GET\", this._src, true);\n        this._xhr.responseType = \"blob\";\n\n        var t = this;\n        this._xhr.onerror = function(oEvent) {\n            t.error({type: \"connection\", message: \"Connection error\"});\n        };\n\n        this._xhr.onload = function(oEvent) {\n            var blob = t._xhr.response;\n            t._mimeType = blob.type;\n\n            t._createImageBitmap(blob);\n        };\n\n        this._xhr.send();\n    };\n\n    ImageWorkerServerItem.prototype._createImageBitmap = function(blob) {\n        var t = this;\n        createImageBitmap(blob, {premultiplyAlpha: 'premultiply', colorSpaceConversion: 'none', imageOrientation: 'none'}).then(function(imageBitmap) {\n            t.finish({\n                imageBitmap,\n                hasAlphaChannel: t._hasAlphaChannel()\n            });\n        }).catch(function(e) {\n            t.error({type: \"parse\", message: \"Error parsing image data\"});\n        });\n    };\n\n    ImageWorkerServerItem.prototype._hasAlphaChannel = function() {\n        if (ImageWorkerServer.isWPEBrowser()) {\n            // When using unaccelerated rendering image (https://github.com/WebPlatformForEmbedded/WPEWebKit/blob/wpe-20170728/Source/WebCore/html/ImageBitmap.cpp#L52),\n            // everything including JPG images are in RGBA format. Upload is way faster when using an alpha channel.\n            // @todo: after hardware acceleration is fixed and re-enabled, JPG should be uploaded in RGB to get the best possible performance and memory usage.\n            return true;\n        } else {\n            return (this._mimeType.indexOf(\"image/png\") !== -1);\n        }\n    };\n\n    ImageWorkerServerItem.prototype.cancel = function() {\n        if (this._canceled) return;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._canceled = true;\n    };\n\n    ImageWorkerServerItem.prototype.error = function(type, message) {\n        if (!this._canceled && this._onError) {\n            this._onError({type, message});\n        }\n    };\n\n    ImageWorkerServerItem.prototype.finish = function(info) {\n        if (!this._canceled && this._onFinish) {\n            this._onFinish(info);\n        }\n    };\n\n    var worker = new ImageWorkerServer();\n};","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport ImageWorker from \"./ImageWorker.mjs\";\n\n/**\n * Platform-specific functionality.\n */\nexport default class WebPlatform {\n\n    init(stage) {\n        this.stage = stage;\n        this._looping = false;\n        this._awaitingLoop = false;\n\n        if (this.stage.getOption(\"useImageWorker\")) {\n            if (!window.createImageBitmap || !window.Worker) {\n                console.warn(\"Can't use image worker because browser does not have createImageBitmap and Web Worker support\");\n            } else {\n                console.log('Using image worker!');\n                this._imageWorker = new ImageWorker();\n            }\n        }\n    }\n\n    destroy() {\n        if (this._imageWorker) {\n            this._imageWorker.destroy();\n        }\n        this._removeKeyHandler();\n    }\n\n    startLoop() {\n        this._looping = true;\n        if (!this._awaitingLoop) {\n            this.loop();\n        }\n    }\n\n    stopLoop() {\n        this._looping = false;\n    }\n\n    loop() {\n        let self = this;\n        let lp = function() {\n            self._awaitingLoop = false;\n            if (self._looping) {\n                self.stage.drawFrame();\n                requestAnimationFrame(lp);\n                self._awaitingLoop = true;\n            }\n        }\n        requestAnimationFrame(lp);\n    }\n\n    uploadGlTexture(gl, textureSource, source, options) {\n        if (source instanceof ImageData || source instanceof HTMLImageElement || source instanceof HTMLCanvasElement || source instanceof HTMLVideoElement || (window.ImageBitmap && source instanceof ImageBitmap)) {\n            // Web-specific data types.\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, textureSource.w, textureSource.h, 0, options.format, options.type, source);\n        }\n    }\n\n    loadSrcTexture({src, hasAlpha}, cb) {\n        let cancelCb = undefined;\n        let isPng = (src.indexOf(\".png\") >= 0) || src.substr(0, 21) == 'data:image/png;base64';\n        if (this._imageWorker) {\n            // WPE-specific image parser.\n            const image = this._imageWorker.create(src);\n            image.onError = function(err) {\n                return cb(\"Image load error\");\n            };\n            image.onLoad = function({imageBitmap, hasAlphaChannel}) {\n                cb(null, {\n                    source: imageBitmap,\n                    renderInfo: {src: src},\n                    hasAlpha: hasAlphaChannel,\n                    premultiplyAlpha: true\n                });\n            };\n            cancelCb = function() {\n                image.cancel();\n            }\n        } else {\n            let image = new Image();\n\n            // On the PS4 platform setting the `crossOrigin` attribute on\n            // images can cause CORS failures.\n            if (!(src.substr(0,5) == \"data:\") && !Utils.isPS4) {\n                // Base64.\n                image.crossOrigin = \"Anonymous\";\n            }\n            image.onerror = function(err) {\n                // Ignore error message when cancelled.\n                if (image.src) {\n                    return cb(\"Image load error\");\n                }\n            };\n            image.onload = function() {\n                cb(null, {\n                    source: image,\n                    renderInfo: {src: src},\n                    hasAlpha: isPng || hasAlpha\n                });\n            };\n            image.src = src;\n\n            cancelCb = function() {\n                image.onerror = null;\n                image.onload = null;\n                image.removeAttribute('src');\n            }\n        }\n\n        return cancelCb;\n    }\n\n    createWebGLContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let opts = {\n            alpha: true,\n            antialias: false,\n            premultipliedAlpha: true,\n            stencil: true,\n            preserveDrawingBuffer: false\n        };\n\n        let gl = canvas.getContext('webgl', opts) || canvas.getContext('experimental-webgl', opts);\n        if (!gl) {\n            throw new Error('This browser does not support webGL.');\n        }\n\n        return gl;\n    }\n\n    createCanvasContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let c2d = canvas.getContext('2d');\n        if (!c2d) {\n            throw new Error('This browser does not support 2d canvas.');\n        }\n\n        return c2d;\n    }\n\n    getHrTime() {\n        return window.performance ? window.performance.now() : (new Date()).getTime();\n    }\n\n    getDrawingCanvas() {\n        // We can't reuse this canvas because textures may load async.\n        return document.createElement('canvas');\n    }\n\n    getTextureOptionsForDrawingCanvas(canvas) {\n        let options = {};\n        options.source = canvas;\n        return options;\n    }\n\n    nextFrame(changes) {\n        /* WebGL blits automatically */\n    }\n\n    registerKeydownHandler(keyhandler) {\n        this._keydownListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keydown', this._keydownListener);\n    }\n\n    registerKeyupHandler(keyhandler) {\n        this._keyupListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keyup', this._keyupListener);\n    }\n\n    _removeKeyHandler() {\n        if (this._keydownListener) {\n            window.removeEventListener('keydown', this._keydownListener);\n        }\n\n        if (this._keyupListener) {\n            window.removeEventListener('keyup', this._keyupListener);\n        }\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value == 'string';\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object' || type == 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2)\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2)\n        } else {\n            return v1 === v2\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n}\n\n/**\n * Maintains the state of a WebGLRenderingContext.\n */\nclass WebGLState {\n\n    constructor(id, gl) {\n        this._id = id;\n        this._gl = gl;\n        this._program = undefined;\n        this._buffers = new Map();\n        this._framebuffers = new Map();\n        this._renderbuffers = new Map();\n\n        // Contains vertex attribute definition arrays (enabled, size, type, normalized, stride, offset).\n        this._vertexAttribs = new Array(16);\n        this._nonDefaultFlags = new Set();\n        this._settings = new Map();\n        this._textures = new Array(8);\n        this._maxTexture = 0;\n        this._activeTexture = gl.TEXTURE0;\n        this._pixelStorei = new Array(5);\n    }\n\n    _getDefaultFlag(cap) {\n        return (cap === this._gl.DITHER);\n    }\n\n    setFlag(cap, v) {\n        const def = this._getDefaultFlag(cap);\n        if (v === def) {\n            return this._nonDefaultFlags.delete(cap);\n        } else {\n            if (!this._nonDefaultFlags.has(cap)) {\n                this._nonDefaultFlags.add(cap);\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    setBuffer(target, buffer) {\n        const change = this._buffers.get(target) !== buffer;\n        this._buffers.set(target, buffer);\n\n        if (change && (target === this._gl.ARRAY_BUFFER)) {\n            // When the array buffer is changed all attributes are cleared.\n            this._vertexAttribs = [];\n        }\n\n        return change;\n    }\n\n    setFramebuffer(target, buffer) {\n        const change = this._framebuffers.get(target) !== buffer;\n        this._framebuffers.set(target, buffer);\n        return change;\n    }\n\n    setRenderbuffer(target, buffer) {\n        const change = this._renderbuffers.get(target) !== buffer;\n        this._renderbuffers.set(target, buffer);\n        return change;\n    }\n\n    setProgram(program) {\n        const change = this._program !== program;\n        this._program = program;\n        return change\n    }\n\n    setSetting(func, v) {\n        const s = this._settings.get(func);\n        const change = !s || !Utils.equalValues(s, v);\n        this._settings.set(func, v);\n        return change\n    }\n\n    disableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va && va[5]) {\n            va[5] = false;\n            return true;\n        }\n        return false;\n    }\n\n    enableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va) {\n            if (!va[0]) {\n                va[0] = true;\n                return true;\n            }\n        } else {\n            this._vertexAttribs[index] = [0, 0, 0, 0, 0, true];\n            return true;\n        }\n        return false;\n    }\n\n    vertexAttribPointer(index, props) {\n        let va = this._vertexAttribs[index];\n        let equal = false;\n        if (va) {\n            equal = va[0] === props[0] &&\n                va[1] === props[1] &&\n                va[2] === props[2] &&\n                va[3] === props[3] &&\n                va[4] === props[4];\n        }\n\n        if (equal) {\n            return false;\n        } else {\n            props[5] = va ? va[5] : false;\n            return true;\n        }\n    }\n\n    setActiveTexture(texture) {\n        const changed = this._activeTexture !== texture;\n        this._activeTexture = texture;\n        return changed;\n    }\n\n    bindTexture(target, texture) {\n        const activeIndex = WebGLState._getTextureIndex(this._activeTexture);\n        this._maxTexture = Math.max(this._maxTexture, activeIndex + 1);\n        const current = this._textures[activeIndex];\n        const targetIndex = WebGLState._getTextureTargetIndex(target);\n        if (current) {\n            if (current[targetIndex] === texture) {\n                return false;\n            }\n            current[targetIndex] = texture;\n            return true;\n        } else {\n            if (texture) {\n                this._textures[activeIndex] = [];\n                this._textures[activeIndex][targetIndex] = texture;\n                return true\n            } else {\n                return false\n            }\n        }\n    }\n\n    setPixelStorei(pname, param) {\n        const i = WebGLState._getPixelStoreiIndex(pname);\n        const change = !Utils.equalValues(this._pixelStorei[i], param);\n        this._pixelStorei[i] = param;\n        return change;\n    }\n\n    migrate(s) {\n        const t = this;\n\n        // Warning: migrate should call the original prototype methods directly.\n\n        this._migrateFlags(t, s);\n\n        // useProgram\n        if (s._program !== t._program) {\n            this._gl._useProgram(s._program);\n        }\n\n        this._migrateFramebuffers(t, s);\n        this._migrateRenderbuffers(t, s);\n\n        const buffersChanged = this._migrateBuffers(t, s);\n        this._migrateAttributes(t, s, buffersChanged);\n\n        this._migrateFlags(t, s);\n\n        this._migrateSettings(t, s);\n\n        this._migratePixelStorei(t, s);\n        \n        this._migrateTextures(t, s);\n        \n    }\n\n    _migratePixelStorei(t, s) {\n        for (let i = 0, n = t._pixelStorei.length; i < n; i++) {\n            if (t._pixelStorei[i] !== s._pixelStorei[i]) {\n                const value = s._pixelStorei[i] !== undefined ? s._pixelStorei[i] : WebGLState._getDefaultPixelStoreiByIndex(i);\n                this._gl._pixelStorei(WebGLState._getPixelStoreiByIndex(i), value);\n            }\n        }\n    }\n\n    _migrateTextures(t, s) {\n        const max = Math.max(t._maxTexture, s._maxTexture);\n\n        let activeTexture = t._activeTexture;\n\n        for (let i = 0; i < max; i++) {\n            const sTargets = s._textures[i];\n            const tTargets = t._textures[i];\n            const textureNumb = WebGLState._getTextureByIndex(i);\n\n            const targetMax = Math.max(tTargets ? tTargets.length : 0, sTargets ? sTargets.length : 0);\n            for (let j = 0, n = targetMax; j < n; j++) {\n                const target = WebGLState._getTextureTargetByIndex(j);\n                if (activeTexture !== textureNumb) {\n                    this._gl._activeTexture(textureNumb);\n                    activeTexture = textureNumb;\n                }\n\n                const texture = (sTargets && sTargets[j]) || null;\n                this._gl._bindTexture(target, texture);\n            }\n        }\n\n        if (s._activeTexture !== activeTexture) {\n            this._gl._activeTexture(s._activeTexture);\n        }\n    }\n\n    _migrateBuffers(t, s) {\n        s._buffers.forEach((framebuffer, target) => {\n            if (t._buffers.get(target) !== framebuffer) {\n                this._gl._bindBuffer(target, framebuffer);\n            }\n        });\n\n        t._buffers.forEach((buffer, target) => {\n            const b = s._buffers.get(target);\n            if (b === undefined) {\n                this._gl._bindBuffer(target, null);\n            }\n        });\n        return (s._buffers.get(this._gl.ARRAY_BUFFER) !== t._buffers.get(this._gl.ARRAY_BUFFER))\n    }\n\n    _migrateFramebuffers(t, s) {\n        s._framebuffers.forEach((framebuffer, target) => {\n            if (t._framebuffers.get(target) !== framebuffer) {\n                this._gl._bindFramebuffer(target, framebuffer);\n            }\n        });\n\n        t._framebuffers.forEach((framebuffer, target) => {\n            const fb = s._framebuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindFramebuffer(target, null);\n            }\n        });\n    }\n\n    _migrateRenderbuffers(t, s) {\n        s._renderbuffers.forEach((renderbuffer, target) => {\n            if (t._renderbuffers.get(target) !== renderbuffer) {\n                this._gl._bindRenderbuffer(target, renderbuffer);\n            }\n        });\n\n        t._renderbuffers.forEach((renderbuffer, target) => {\n            const fb = s._renderbuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindRenderbuffer(target, null);\n            }\n        });\n    }\n\n    _migrateAttributes(t, s, buffersChanged) {\n\n        if (!buffersChanged) {\n            t._vertexAttribs.forEach((attrib, index) => {\n                if (!s._vertexAttribs[index]) {\n                    // We can't 'delete' a vertex attrib so we'll disable it.\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n\n            s._vertexAttribs.forEach((attrib, index) => {\n                this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[4]);\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                } else {\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n        } else {\n            // When buffers are changed, previous attributes were reset automatically.\n            s._vertexAttribs.forEach((attrib, index) => {\n                if (attrib[0]) {\n                    // Do not set vertex attrib pointer when it was just the default value.\n                    this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[3], attrib[4]);\n                }\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                }\n            });\n        }\n    }\n\n    _migrateSettings(t, s) {\n        const defaults = this.constructor.getDefaultSettings();\n        t._settings.forEach((value, func) => {\n            const name = func.name || func.xname;\n            if (!s._settings.has(func)) {\n                let args = defaults.get(name);\n                if (Utils.isFunction(args)) {\n                    args = args(this._gl);\n                }\n                // We are actually setting the setting for optimization purposes.\n                s._settings.set(func, args);\n                func.apply(this._gl, args);\n            }\n        });\n        s._settings.forEach((value, func) => {\n            const tValue = t._settings.get(func);\n            if (!tValue || !Utils.equalValues(tValue, value)) {\n                func.apply(this._gl, value);\n            }\n        });\n    }\n\n    _migrateFlags(t, s) {\n        t._nonDefaultFlags.forEach(setting => {\n            if (!s._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._enable(setting);\n                } else {\n                    this._gl._disable(setting);\n                }\n            }\n        });\n        s._nonDefaultFlags.forEach(setting => {\n            if (!t._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._disable(setting);\n                } else {\n                    this._gl._enable(setting);\n                }\n            }\n        });\n    }\n\n    static getDefaultSettings() {\n        if (!this._defaultSettings) {\n            this._defaultSettings = new Map();\n            const d = this._defaultSettings;\n            const g = WebGLRenderingContext.prototype;\n            d.set(\"viewport\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"scissor\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"blendColor\", [0, 0, 0, 0]);\n            d.set(\"blendEquation\", [g.FUNC_ADD]);\n            d.set(\"blendEquationSeparate\", [g.FUNC_ADD, g.FUNC_ADD]);\n            d.set(\"blendFunc\", [g.ONE, g.ZERO]);\n            d.set(\"blendFuncSeparate\", [g.ONE, g.ZERO, g.ONE, g.ZERO]);\n            d.set(\"clearColor\", [0, 0, 0, 0]);\n            d.set(\"clearDepth\", [1]);\n            d.set(\"clearStencil\", [0]);\n            d.set(\"colorMask\", [true, true, true, true]);\n            d.set(\"cullFace\", [g.BACK]);\n            d.set(\"depthFunc\", [g.LESS]);\n            d.set(\"depthMask\", [true]);\n            d.set(\"depthRange\", [0, 1]);\n            d.set(\"frontFace\", [g.CCW]);\n            d.set(\"lineWidth\", [1]);\n            d.set(\"polygonOffset\", [0, 0]);\n            d.set(\"sampleCoverage\", [1, false]);\n            d.set(\"stencilFunc\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFront\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFrontAndBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"stencilMask\", [1]);\n            d.set(\"_stencilMaskSeparateFront\", [1]);\n            d.set(\"_stencilMaskSeparateBack\", [1]);\n            d.set(\"_stencilMaskSeparateFrontAndBack\", [1]);\n            d.set(\"stencilOp\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFront\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFrontAndBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"vertexAttrib1f\", []);\n            d.set(\"vertexAttrib1fv\", []);\n            d.set(\"vertexAttrib2f\", []);\n            d.set(\"vertexAttrib2fv\", []);\n            d.set(\"vertexAttrib3f\", []);\n            d.set(\"vertexAttrib3fv\", []);\n            d.set(\"vertexAttrib4f\", []);\n            d.set(\"vertexAttrib4fv\", []);\n        }\n        return this._defaultSettings\n    }\n\n    static _getTextureTargetIndex(target) {\n        switch(target) {\n            case 0x0DE1:\n                /* TEXTURE_2D */\n                return 0;\n            case 0x8513:\n                /* TEXTURE_CUBE_MAP */\n                return 1;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown texture target: ' + target);\n        }\n    }\n\n    static _getTextureTargetByIndex(index) {\n        if (!this._textureTargetIndices) {\n            this._textureTargetIndices = [0x0DE1, 0x8513];\n        }\n        return this._textureTargetIndices[index]\n    }\n\n    static _getTextureIndex(index) {\n        return index - 0x84C0 /* GL_TEXTURE0 */;\n    }\n\n    static _getTextureByIndex(index) {\n        return index + 0x84C0;\n    }\n\n    static _getPixelStoreiIndex(pname) {\n        switch(pname) {\n            case 0x0D05:\n                /* PACK_ALIGNMENT */\n                return 0;\n            case 0x0CF5:\n                /* UNPACK_ALIGNMENT */\n                return 1;\n            case 0x9240:\n                /* UNPACK_FLIP_Y_WEBGL */\n                return 2;\n            case 0x9241:\n                /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\n                return 3;\n            case 0x9243:\n                /* UNPACK_COLORSPACE_CONVERSION_WEBGL */\n                return 4;\n                //@todo: support WebGL2 properties, see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n            case 0x9245:\n                /* UNPACK_FLIP_BLUE_RED */\n                return 5;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown pixelstorei: ' + pname);\n        }\n    }\n\n    static _getPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiIndices) {\n            this._pixelStoreiIndices = [0x0D05, 0x0CF5, 0x9240, 0x9241, 0x9243];\n        }\n        return this._pixelStoreiIndices[index]\n    }\n\n    static _getDefaultPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiDefaults) {\n            this._pixelStoreiDefaults = [4, 4, false, false, WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL];\n        }\n        return this._pixelStoreiDefaults[index]\n    }\n}\n\nclass WebGLStateManager {\n\n    _initStateManager(id = \"default\") {\n        this._states = {};\n        this._state = this._getState(id);\n    }\n\n    _getState(id) {\n        if (!this._states[id]) {\n            this._states[id] = new WebGLState(id, this);\n        }\n        return this._states[id];\n    }\n\n    switchState(id = \"default\") {\n        if (this._state._id !== id) {\n            const newState = this._getState(id);\n            this._state.migrate(newState);\n            this._state = newState;\n        }\n    }\n\n    $useProgram(program) {\n        if (this._state.setProgram(program))\n            this._useProgram(program);\n    }\n\n    $bindBuffer(target, fb) {\n        if (this._state.setBuffer(target, fb))\n            this._bindBuffer(target, fb);\n    }\n\n    $bindFramebuffer(target, fb) {\n        if (this._state.setFramebuffer(target, fb))\n            this._bindFramebuffer(target, fb);\n    }\n\n    $bindRenderbuffer(target, fb) {\n        if (this._state.setRenderbuffer(target, fb))\n            this._bindRenderbuffer(target, fb);\n    }\n\n    $enable(cap) {\n        if (this._state.setFlag(cap, true))\n            this._enable(cap);\n    }\n\n    $disable(cap) {\n        if (this._state.setFlag(cap, false))\n            this._disable(cap);\n    }\n\n    $viewport(x, y, w, h) {\n        if (this._state.setSetting(this._viewport, [x, y, w, h]))\n            this._viewport(x, y, w, h);\n    }\n\n    $scissor(x, y, w, h) {\n        if (this._state.setSetting(this._scissor, [x, y, w, h]))\n            this._scissor(x, y, w, h);\n    }\n\n    $disableVertexAttribArray(index) {\n        if (this._state.disableVertexAttribArray(index))\n            this._disableVertexAttribArray(index);\n    }\n\n    $enableVertexAttribArray(index) {\n        if (this._state.enableVertexAttribArray(index))\n            this._enableVertexAttribArray(index);\n    }\n\n    $vertexAttribPointer(index, size, type, normalized, stride, offset) {\n        if (this._state.vertexAttribPointer(index, [size, type, normalized, stride, offset]))\n            this._vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n\n    $activeTexture(texture) {\n        if (this._state.setActiveTexture(texture))\n            this._activeTexture(texture);\n    }\n\n    $bindTexture(target, texture) {\n        if (this._state.bindTexture(target, texture))\n            this._bindTexture(target, texture);\n    }\n\n    $pixelStorei(pname, param) {\n        if (this._state.setPixelStorei(pname, param)) {\n            this._pixelStorei(pname, param);\n        }\n    }\n\n    $stencilFuncSeparate(face, func, ref, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilFuncSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilFuncSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilFuncSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [func, ref, mask]))\n            f.apply(this, [func, ref, mask]);\n    }\n\n    _stencilFuncSeparateFront(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT, func, ref, mask);\n    }\n\n    _stencilFuncSeparateBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.BACK, func, ref, mask);\n    }\n\n    _stencilFuncSeparateFrontAndBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT_AND_BACK, func, ref, mask);\n    }\n\n    $stencilMaskSeparate(face, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilMaskSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilMaskSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilMaskSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [mask]))\n            f.apply(this, [mask]);\n    }\n\n    _stencilMaskSeparateFront(mask) {\n        this._stencilMaskSeparate(this.FRONT, mask);\n    }\n\n    _stencilMaskSeparateBack(mask) {\n        this._stencilMaskSeparate(this.BACK, mask);\n    }\n\n    _stencilMaskSeparateFrontAndBack(mask) {\n        this._stencilMaskSeparate(this.FRONT_AND_BACK, mask);\n    }\n\n    $stencilOpSeparate(face, fail, zfail, zpass) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilOpSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilOpSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilOpSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [fail, zfail, zpass]))\n            f.apply(this, [fail, zfail, zpass]);\n    }\n\n    _stencilOpSeparateFront(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.BACK, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateFrontAndBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT_AND_BACK, fail, zfail, zpass);\n    }\n\n    $blendColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._blendColor, [red, green, blue, alpha]))\n            this._blendColor(red, green, blue, alpha);\n    }\n\n    $blendEquation(mode) {\n        if (this._state.setSetting(this._blendEquation, [mode]))\n            this._blendEquation(mode);\n    }\n\n    $blendEquationSeparate(modeRGB, modeAlpha) {\n        if (this._state.setSetting(this._blendEquationSeparate, [modeRGB, modeAlpha]))\n            this._blendEquationSeparate(modeRGB, modeAlpha);\n    }\n\n    $blendFunc(sfactor, dfactor) {\n        if (this._state.setSetting(this._blendFunc, [sfactor, dfactor]))\n            this._blendFunc(sfactor, dfactor);\n    }\n\n    $blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n        if (this._state.setSetting(this._blendFuncSeparate, [srcRGB, dstRGB, srcAlpha, dstAlpha]))\n            this._blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n    }\n\n    $clearColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._clearColor, [red, green, blue, alpha]))\n            this._clearColor(red, green, blue, alpha);\n    }\n\n    $clearDepth(depth) {\n        if (this._state.setSetting(this._clearDepth, [depth]))\n            this._clearDepth(depth);\n    }\n\n    $clearStencil(s) {\n        if (this._state.setSetting(this._clearStencil, [s]))\n            this._clearStencil(s);\n    }\n\n    $colorMask(red, green, blue, alpha) {\n        if (this._state.setSetting(this._colorMask, [red, green, blue, alpha]))\n            this._colorMask(red, green, blue, alpha);\n    }\n\n    $cullFace(mode) {\n        if (this._state.setSetting(this._cullFace, [mode]))\n            this._cullFace(mode);\n    }\n\n    $depthFunc(func) {\n        if (this._state.setSetting(this._depthFunc, [func]))\n            this._depthFunc(func);\n    }\n\n    $depthMask(flag) {\n        if (this._state.setSetting(this._depthMask, [flag]))\n            this._depthMask(flag);\n    }\n\n    $depthRange(zNear, zFar) {\n        if (this._state.setSetting(this._depthRange, [zNear, zFar]))\n            this._depthRange(zNear, zFar);\n    }\n\n    $frontFace(mode) {\n        if (this._state.setSetting(this._frontFace, [mode]))\n            this._frontFace(mode);\n    }\n\n    $lineWidth(width) {\n        if (this._state.setSetting(this._lineWidth, [width]))\n            this._lineWidth(width);\n    }\n\n    $polygonOffset(factor, units) {\n        if (this._state.setSetting(this._polygonOffset, [factor, units]))\n            this._polygonOffset(factor, units);\n    }\n\n    $sampleCoverage(value, invert) {\n        if (this._state.setSetting(this._sampleCoverage, [value, invert]))\n            this._sampleCoverage(value, invert);\n    }\n\n    $stencilFunc(func, ref, mask) {\n        if (this._state.setSetting(this._stencilFunc, [func, ref, mask]))\n            this._stencilFunc(func, ref, mask);\n    }\n\n    $stencilMask(mask) {\n        if (this._state.setSetting(this._stencilMask, [mask]))\n            this._stencilMask(mask);\n    }\n\n    $stencilOp(fail, zfail, zpass) {\n        if (this._state.setSetting(this._stencilOp, [fail, zfail, zpass]))\n            this._stencilOp(fail, zfail, zpass);\n    }\n\n    $vertexAttrib1f(indx, x) {\n        if (this._state.setSetting(this._vertexAttrib1f, [indx, x]))\n            this._vertexAttrib1f(indx, x);\n    }\n\n    $vertexAttrib1fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib1fv, [indx, values]))\n            this._vertexAttrib1fv(indx, values);\n    }\n\n    $vertexAttrib2f(indx, x, y) {\n        if (this._state.setSetting(this._vertexAttrib2f, [indx, x, y]))\n            this._vertexAttrib2f(indx, x, y);\n    }\n\n    $vertexAttrib2fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib2fv, [indx, values]))\n            this._vertexAttrib2fv(indx, values);\n    }\n\n    $vertexAttrib3f(indx, x, y, z) {\n        if (this._state.setSetting(this._vertexAttrib3f, [indx, x, y, z]))\n            this._vertexAttrib3f(indx, x, y, z);\n    }\n\n    $vertexAttrib3fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib3fv, [indx, values]))\n            this._vertexAttrib3fv(indx, values);\n    }\n\n    $vertexAttrib4f(indx, x, y, z, w) {\n        if (this._state.setSetting(this._vertexAttrib4f, [indx, x, y, z, w]))\n            this._vertexAttrib4f(indx, x, y, z, w);\n    }\n\n    $vertexAttrib4fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib4fv, [indx, values]))\n            this._vertexAttrib4fv(indx, values);\n    }\n\n    /**\n     * Sets up the rendering context for context sharing.\n     * @param {WebGLRenderingContext} gl\n     * @param {string} id\n     */\n    static enable(gl, id = \"default\") {\n        const names = Object.getOwnPropertyNames(WebGLStateManager.prototype);\n        const WebGLRenderingContextProto = gl.__proto__;\n        names.forEach(name => {\n            if (name !== \"constructor\") {\n                const method = WebGLStateManager.prototype[name];\n                if (name.charAt(0) === \"$\") {\n                    name = name.substr(1);\n                }\n                if (gl[name] !== method) {\n                    if (gl[name]) {\n                        if (!gl[name].name) {\n                            // We do this for compatibility with the Chrome WebGL Inspector plugin.\n                            gl[name].xname = name;\n                        }\n                        gl['_' + name] = gl[name];\n                    }\n                    gl[name] = method;\n                }\n            }\n        });\n\n        WebGLStateManager.prototype._initStateManager.call(gl, id);\n\n        return gl;\n    }\n\n}\n\nexport default WebGLStateManager;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from \"./TextureSource.mjs\";\n\nexport default class TextureManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        /**\n         * The currently used amount of texture memory.\n         * @type {number}\n         */\n        this._usedMemory = 0;\n\n        /**\n         * All uploaded texture sources.\n         * @type {TextureSource[]}\n         */\n        this._uploadedTextureSources = [];\n\n        /**\n         * The texture source lookup id to texture source hashmap.\n         * @type {Map<String, TextureSource>}\n         */\n        this.textureSourceHashmap = new Map();\n\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\n        }\n        \n        this.textureSourceHashmap.clear();\n        this._usedMemory = 0;\n    }\n\n    getReusableTextureSource(id) {\n        return this.textureSourceHashmap.get(id);\n    }\n\n    getTextureSource(func, id) {\n        // Check if texture source is already known.\n        let textureSource = id ? this.textureSourceHashmap.get(id) : null;\n        if (!textureSource) {\n            // Create new texture source.\n            textureSource = new TextureSource(this, func);\n\n            if (id) {\n                textureSource.lookupId = id;\n                this.textureSourceHashmap.set(id, textureSource);\n            }\n        }\n\n        return textureSource;\n    }\n\n    uploadTextureSource(textureSource, options) {\n        if (textureSource.isLoaded()) return;\n\n        this._addMemoryUsage(textureSource.w * textureSource.h);\n\n        // Load texture.\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\n\n        textureSource._nativeTexture = nativeTexture;\n\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\n        nativeTexture.w = textureSource.w;\n        nativeTexture.h = textureSource.h;\n\n        nativeTexture.update = this.stage.frameCounter;\n\n        this._uploadedTextureSources.push(textureSource);\n        \n        this.addToLookupMap(textureSource);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n    \n    addToLookupMap(textureSource) {\n        const lookupId = textureSource.lookupId;\n        if (lookupId) {\n            if (!this.textureSourceHashmap.has(lookupId)) {\n                this.textureSourceHashmap.set(lookupId, textureSource);\n            }\n        }\n    }\n\n    gc() {\n        this.freeUnusedTextureSources();\n        this._cleanupLookupMap();\n    }\n    \n    freeUnusedTextureSources() {\n        let remainingTextureSources = [];\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            let ts = this._uploadedTextureSources[i];\n            if (ts.allowCleanup()) {\n                this._freeManagedTextureSource(ts);\n            } else {\n                remainingTextureSources.push(ts);\n            }\n        }\n\n        this._uploadedTextureSources = remainingTextureSources;\n\n        this._cleanupLookupMap();\n    }\n\n    _freeManagedTextureSource(textureSource) {\n        if (textureSource.isLoaded()) {\n            this._nativeFreeTextureSource(textureSource);\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _cleanupLookupMap() {\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\n                this.textureSourceHashmap.delete(lookupId);\n            }\n        });\n    }\n\n    /**\n     * Externally free texture source.\n     * @param textureSource\n     */\n    freeTextureSource(textureSource) {\n        const index = this._uploadedTextureSources.indexOf(textureSource);\n        const managed = (index !== -1);\n\n        if (textureSource.isLoaded()) {\n            if (managed) {\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\n                this._uploadedTextureSources.splice(index, 1);\n            }\n            this._nativeFreeTextureSource(textureSource);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _nativeUploadTextureSource(textureSource, options) {\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\n    }\n\n    _nativeFreeTextureSource(textureSource) {\n        this.stage.renderer.freeTextureSource(textureSource);\n        textureSource.clearNativeTexture();\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows throttling of loading texture sources, keeping the app responsive.\n */\nexport default class TextureThrottler {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.genericCancelCb = (textureSource) => {\n            this._remove(textureSource);\n        };\n\n        this._sources = [];\n        this._data = [];\n    }\n\n    destroy() {\n        this._sources = [];\n        this._data = [];\n    }\n\n    processSome() {\n        if (this._sources.length) {\n            const start = Date.now();\n            do {\n                this._processItem();\n            } while(this._sources.length && (Date.now() - start < TextureThrottler.MAX_UPLOAD_TIME_PER_FRAME));\n        }\n    }\n\n    _processItem() {\n        const source = this._sources.pop();\n        const data = this._data.pop();\n        if (source.isLoading()) {\n            source.processLoadedSource(data);\n        }\n    }\n\n    add(textureSource, data) {\n        this._sources.push(textureSource);\n        this._data.push(data);\n    }\n\n    _remove(textureSource) {\n        const index = this._sources.indexOf(textureSource);\n        if (index >= 0) {\n            this._sources.splice(index, 1);\n            this._data.splice(index, 1);\n        }\n    }\n\n}\n\nTextureThrottler.MAX_UPLOAD_TIME_PER_FRAME = 10;","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreContext {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.root = null;\n\n        this.updateTreeOrder = 0;\n\n        this.renderState = this.stage.renderer.createCoreRenderState(this);\n\n        this.renderExec = this.stage.renderer.createCoreRenderExecutor(this);\n        this.renderExec.init();\n\n        this._usedMemory = 0;\n        this._renderTexturePool = [];\n\n        this._renderTextureId = 1;\n\n        this._zSorts = [];\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        this._renderTexturePool.forEach(texture => this._freeRenderTexture(texture));\n        this._usedMemory = 0;\n    }\n\n    hasRenderUpdates() {\n        return !!this.root._parent._hasRenderUpdates;\n    }\n\n    render() {\n        // Clear flag to identify if anything changes before the next frame.\n        this.root._parent._hasRenderUpdates = 0;\n\n        this._render();\n    }\n\n    update() {\n        this._update();\n\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\n        // (but not recursively to prevent infinite loops).\n        if (this.root._hasUpdates) {\n            this._update();\n        }\n\n        this._performForcedZSorts();\n    }\n\n    /**\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\n     */\n    _performForcedZSorts() {\n        const n = this._zSorts.length;\n        if (n) {\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\n            for (let i = 0, n = this._zSorts.length; i < n; i++) {\n                if (this._zSorts[i].zSort) {\n                    this._zSorts[i].sortZIndexedChildren();\n                }\n            }\n            this._zSorts = [];\n        }\n    }\n\n    _update() {\n        this.updateTreeOrder = 0;\n\n        this.root.update();\n    }\n\n    _render() {\n        // Obtain a sequence of the quad operations.\n        this._fillRenderState();\n\n        if (this.stage.getOption('readPixelsBeforeDraw')) {\n            const pixels = new Uint8Array(4);\n            const gl = this.stage.gl;\n            gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n        }\n\n        // Now run them with the render executor.\n        this._performRender();\n    }\n\n    _fillRenderState() {\n        this.renderState.reset();\n        this.root.render();\n        this.renderState.finish();\n    }\n\n    _performRender() {\n        this.renderExec.execute();\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    allocateRenderTexture(w, h) {\n        let prec = this.stage.getRenderPrecision();\n        let pw = Math.max(1, Math.round(w * prec));\n        let ph = Math.max(1, Math.round(h * prec));\n\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\n        const n = this._renderTexturePool.length;\n        for (let i = n - 1; i >= 0; i--) {\n            const texture = this._renderTexturePool[i];\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\n            if (texture.w === pw && texture.h === ph && (texture.update !== this.stage.frameCounter)) {\n                texture.f = this.stage.frameCounter;\n                this._renderTexturePool.splice(i, 1);\n                return texture;\n            }\n        }\n\n        const texture = this._createRenderTexture(w, h, pw, ph);\n        texture.precision = prec;\n        return texture;\n    }\n\n    releaseRenderTexture(texture) {\n        this._renderTexturePool.push(texture);\n    }\n\n    freeUnusedRenderTextures(maxAge = 60) {\n        // Clean up all textures that are no longer used.\n        // This cache is short-lived because it is really just meant to supply running shaders that are\n        // updated during a number of frames.\n        let limit = this.stage.frameCounter - maxAge;\n\n        this._renderTexturePool = this._renderTexturePool.filter(texture => {\n            if (texture.f <= limit) {\n                this._freeRenderTexture(texture);\n                return false;\n            }\n            return true;\n        });\n    }\n\n    _createRenderTexture(w, h, pw, ph) {\n        this._addMemoryUsage(pw * ph);\n\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\n        texture.id = this._renderTextureId++;\n        texture.f = this.stage.frameCounter;\n        texture.ow = w;\n        texture.oh = h;\n        texture.w = pw;\n        texture.h = ph;\n\n        return texture;\n    }\n\n    _freeRenderTexture(nativeTexture) {\n        this.stage.renderer.freeRenderTexture(nativeTexture);\n        this._addMemoryUsage(-nativeTexture.w * nativeTexture.h);\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\n    }\n\n    forceZSort(elementCore) {\n        this._zSorts.push(elementCore);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class TransitionSettings {\n    constructor(stage) {\n        this.stage = stage;\n        this._timingFunction = 'ease';\n        this._timingFunctionImpl = StageUtils.getTimingFunction(this._timingFunction);\n        this.delay = 0;\n        this.duration = 0.2;\n        this.merger = null;\n    }\n\n    get timingFunction() {\n        return this._timingFunction;\n    }\n\n    set timingFunction(v) {\n        this._timingFunction = v;\n        this._timingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get timingFunctionImpl() {\n        return this._timingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n}\n\nTransitionSettings.prototype.isTransitionSettings = true;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TransitionManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All transitions that are running and attached.\n         * (we don't support transitions on un-attached elements to prevent memory leaks)\n         * @type {Set<Transition>}\n         */\n        this.active = new Set();\n\n        this.defaultTransitionSettings = new TransitionSettings(this.stage);\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                a.progress(dt);\n                if (!a.isRunning()) {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => (t.isRunning())));\n            }\n        }\n    }\n\n    createSettings(settings) {\n        const transitionSettings = new TransitionSettings();\n        Base.patchObject(transitionSettings, settings);\n        return transitionSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n\n    removeActive(transition) {\n        this.active.delete(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport TransitionSettings from \"./TransitionSettings.mjs\";\nimport Transition from \"./Transition.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class MultiSpline {\n\n    constructor() {\n        this._clear();\n    }\n\n    _clear() {\n        this._p = [];\n        this._pe = [];\n        this._idp = [];\n        this._f = [];\n        this._v = [];\n        this._lv = [];\n        this._sm = [];\n        this._s = [];\n        this._ve = [];\n        this._sme = [];\n        this._se = [];\n\n        this._length = 0;\n    }\n\n    parse(rgba, def) {\n        let i, n;\n        if (!Utils.isObjectLiteral(def)) {\n            def = {0: def}\n        }\n\n        let defaultSmoothness = 0.5;\n\n        let items = [];\n        for (let key in def) {\n            if (def.hasOwnProperty(key)) {\n                let obj = def[key];\n                if (!Utils.isObjectLiteral(obj)) {\n                    obj = {v: obj}\n                }\n\n                let p = parseFloat(key);\n\n                if (key === \"sm\") {\n                    defaultSmoothness = obj.v;\n                } else if (!isNaN(p) && p >= 0 && p <= 2) {\n                    obj.p = p;\n\n                    obj.f = Utils.isFunction(obj.v);\n                    obj.lv = obj.f ? obj.v(0, 0) : obj.v;\n\n                    items.push(obj);\n                }\n            }\n        }\n\n        // Sort by progress value.\n        items = items.sort(function(a, b) {return a.p - b.p});\n\n        n = items.length;\n\n        for (i = 0; i < n; i++) {\n            let last = (i === n - 1);\n            if (!items[i].hasOwnProperty('pe')) {\n                // Progress.\n                items[i].pe = last ? (items[i].p <= 1 ? 1 : 2 /* support onetotwo stop */) : items[i + 1].p;\n            } else {\n                // Prevent multiple items at the same time.\n                const max = i < n - 1 ? items[i + 1].p : 1;\n                if (items[i].pe > max) {\n                    items[i].pe = max;\n                }\n            }\n            if (items[i].pe === items[i].p) {\n                items[i].idp = 0;\n            } else {\n                items[i].idp = 1 / (items[i].pe - items[i].p);\n            }\n        }\n\n        // Color merger: we need to split/combine RGBA components.\n\n        // Calculate bezier helper values.;\n        for (i = 0; i < n; i++) {\n            if (!items[i].hasOwnProperty('sm')) {\n                // Smoothness.;\n                items[i].sm = defaultSmoothness;\n            }\n            if (!items[i].hasOwnProperty('s')) {\n                // Slope.;\n                if (i === 0 || i === n - 1 || (items[i].p === 1 /* for onetotwo */)) {\n                    // Horizontal slope at start and end.;\n                    items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                } else {\n                    const pi = items[i - 1];\n                    const ni = items[i + 1];\n                    if (pi.p === ni.p) {\n                        items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                    } else {\n                        if (rgba) {\n                            const nc = MultiSpline.getRgbaComponents(ni.lv);\n                            const pc = MultiSpline.getRgbaComponents(pi.lv);\n                            const d = 1 / (ni.p - pi.p);\n                            items[i].s = [\n                                d * (nc[0] - pc[0]),\n                                d * (nc[1] - pc[1]),\n                                d * (nc[2] - pc[2]),\n                                d * (nc[3] - pc[3])\n                            ];\n                        } else {\n                            items[i].s = (ni.lv - pi.lv) / (ni.p - pi.p);\n                        }\n                    }\n                }\n            }\n        }\n\n        for (i = 0; i < n - 1; i++) {\n            // Calculate value function.;\n            if (!items[i].f) {\n\n                let last = (i === n - 1);\n                if (!items[i].hasOwnProperty('ve')) {\n                    items[i].ve = last ? items[i].lv : items[i + 1].lv;\n                }\n\n                // We can only interpolate on numeric values. Non-numeric values are set literally when reached time.\n                if (Utils.isNumber(items[i].v) && Utils.isNumber(items[i].lv)) {\n                    if (!items[i].hasOwnProperty('sme')) {\n                        items[i].sme = last ? defaultSmoothness : items[i + 1].sm;\n                    }\n                    if (!items[i].hasOwnProperty('se')) {\n                        items[i].se = last ? (rgba ? [0, 0, 0, 0] : 0) : items[i + 1].s;\n                    }\n\n                    // Generate spline.;\n                    if (rgba) {\n                        items[i].v = MultiSpline.getSplineRgbaValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    } else {\n                        items[i].v = MultiSpline.getSplineValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    }\n\n                    items[i].f = true;\n                }\n            }\n        }\n\n        if (this.length) {\n            this._clear();\n        }\n\n        for (i = 0, n = items.length; i < n; i++) {\n            this._add(items[i]);\n        }\n    }\n\n    _add(item) {\n        this._p.push(item.p || 0);\n        this._pe.push(item.pe || 0);\n        this._idp.push(item.idp || 0);\n        this._f.push(item.f || false);\n        this._v.push(item.hasOwnProperty('v') ? item.v : 0 /* v might be false or null */ );\n        this._lv.push(item.lv || 0);\n        this._sm.push(item.sm || 0);\n        this._s.push(item.s || 0);\n        this._ve.push(item.ve || 0);\n        this._sme.push(item.sme || 0);\n        this._se.push(item.se || 0);\n        this._length++;\n    }\n\n    _getItem(p) {\n        const n = this._length;\n        if (!n) {\n            return -1;\n        }\n\n        if (p < this._p[0]) {\n            return 0;\n        }\n\n        for (let i = 0; i < n; i++) {\n            if (this._p[i] <= p && p < this._pe[i]) {\n                return i;\n            }\n        }\n\n        return n - 1;\n    }\n\n    getValue(p) {\n        const i = this._getItem(p);\n        if (i === -1) {\n            return undefined;\n        } else {\n            if (this._f[i]) {\n                const o = Math.min(1, Math.max(0, (p - this._p[i]) * this._idp[i]));\n                return this._v[i](o);\n            } else {\n                return this._v[i];\n            }\n        }\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getSplineValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1 *= dp;\n        s2 *= dp;\n\n        let helpers = MultiSpline.getSplineHelpers(v1, v2, o1, i2, s1, s2);\n        if (!helpers) {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return v2 * p + v1 * (1 - p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n                return MultiSpline.calculateSpline(helpers, p);\n            };\n        }\n    };\n\n    static getSplineRgbaValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1[0] *= dp;\n        s1[1] *= dp;\n        s1[2] *= dp;\n        s1[3] *= dp;\n        s2[0] *= dp;\n        s2[1] *= dp;\n        s2[2] *= dp;\n        s2[3] *= dp;\n\n        let cv1 = MultiSpline.getRgbaComponents(v1);\n        let cv2 = MultiSpline.getRgbaComponents(v2);\n\n        let helpers = [\n            MultiSpline.getSplineHelpers(cv1[0], cv2[0], o1, i2, s1[0], s2[0]),\n            MultiSpline.getSplineHelpers(cv1[1], cv2[1], o1, i2, s1[1], s2[1]),\n            MultiSpline.getSplineHelpers(cv1[2], cv2[2], o1, i2, s1[2], s2[2]),\n            MultiSpline.getSplineHelpers(cv1[3], cv2[3], o1, i2, s1[3], s2[3])\n        ];\n\n        if (!helpers[0]) {\n            return function (p) {\n                // Linear.\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.mergeColors(v2, v1, p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.getArgbNumber([\n                    Math.min(255, MultiSpline.calculateSpline(helpers[0], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[1], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[2], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[3], p))\n                ]);\n            };\n        }\n\n    };\n\n    /**\n     * Creates helpers to be used in the spline function.\n     * @param {number} v1\n     *   From value.\n     * @param {number} v2\n     *   To value.\n     * @param {number} o1\n     *   From smoothness (0 = linear, 1 = smooth).\n     * @param {number} s1\n     *   From slope (0 = horizontal, infinite = vertical).\n     * @param {number} i2\n     *   To smoothness.\n     * @param {number} s2\n     *   To slope.\n     * @returns {Number[]}\n     *   The helper values to be supplied to the spline function.\n     *   If the configuration is actually linear, null is returned.\n     */\n    static getSplineHelpers(v1, v2, o1, i2, s1, s2) {\n        if (!o1 && !i2) {\n            // Linear.\n            return null;\n        }\n\n        // Cubic bezier points.\n        // http://cubic-bezier.com/\n        let csx = o1;\n        let csy = v1 + s1 * o1;\n        let cex = 1 - i2;\n        let cey = v2 - s2 * i2;\n\n        let xa = 3 * csx - 3 * cex + 1;\n        let xb = -6 * csx + 3 * cex;\n        let xc = 3 * csx;\n\n        let ya = 3 * csy - 3 * cey + v2 - v1;\n        let yb = 3 * (cey + v1) - 6 * csy;\n        let yc = 3 * (csy - v1);\n        let yd = v1;\n\n        return [xa, xb, xc, ya, yb, yc, yd];\n    };\n\n    /**\n     * Calculates the intermediate spline value based on the specified helpers.\n     * @param {number[]} helpers\n     *   Obtained from getSplineHelpers.\n     * @param {number} p\n     * @return {number}\n     */\n    static calculateSpline(helpers, p) {\n        let xa = helpers[0];\n        let xb = helpers[1];\n        let xc = helpers[2];\n        let ya = helpers[3];\n        let yb = helpers[4];\n        let yc = helpers[5];\n        let yd = helpers[6];\n\n        if (xa === -2 && ya === -2 && xc === 0 && yc === 0) {\n            // Linear.\n            return p;\n        }\n\n        // Find t for p.\n        let t = 0.5, cbx, dx;\n\n        for (let it = 0; it < 20; it++) {\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c).\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            // Cubic bezier derivative function: f'(t)=t*(t*(3*a)+2*b)+c\n            let cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n\n            t += dx / cbxd;\n        }\n\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c)+d.\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            if (dx < 0) {\n                maxT = t;\n            } else {\n                minT = t;\n            }\n        }\n\n        return t;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationActionSettings {\n\n    constructor(animationSettings) {\n\n        this.animationSettings = animationSettings;\n\n        /**\n         * The selector that selects the elements.\n         * @type {string}\n         */\n        this._selector = \"\";\n\n        /**\n         * The value items, ordered by progress offset.\n         * @type {MultiSpline}\n         * @private;\n         */\n        this._items = new MultiSpline();\n\n        /**\n         * The affected properties (paths).\n         * @private;\n         */\n        this._props = [];\n\n        /**\n         * Property setters, indexed according to props.\n         * @private;\n         */\n        this._propSetters = [];\n\n        this._resetValue = undefined;\n        this._hasResetValue = false;\n\n        this._hasColorProperty = undefined;\n    }\n\n    getResetValue() {\n        if (this._hasResetValue) {\n            return this._resetValue;\n        } else {\n            return this._items.getValue(0);\n        }\n    }\n\n    apply(element, p, factor) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this._items.getValue(p);\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        if (factor !== 1) {\n            // Stop factor.;\n            let sv = this.getResetValue();\n\n            if (Utils.isNumber(v) && Utils.isNumber(sv)) {\n                if (this.hasColorProperty()) {\n                    v = StageUtils.mergeColors(v, sv, factor);\n                } else {\n                    v = StageUtils.mergeNumbers(v, sv, factor);\n                }\n            }\n        }\n\n        // Apply transformation to all components.;\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    getAnimatedElements(element) {\n        return element.select(this._selector);\n    }\n\n    reset(element) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this.getResetValue();\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        // Apply transformation to all components.\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    set selector(v) {\n        this._selector = v;\n    }\n\n    set t(v) {\n        this.selector = v;\n    }\n\n    get resetValue() {\n        return this._resetValue;\n    }\n    \n    set resetValue(v) {\n        this._resetValue = v;\n        this._hasResetValue = (v !== undefined);\n    }\n\n    set rv(v) {\n        this.resetValue = v;\n    }\n\n    set value(v) {\n        this._items.parse(this.hasColorProperty(), v);\n    }\n\n    set v(v) {\n        this.value = v;\n    }\n\n    set properties(v) {\n        if (!Array.isArray(v)) {\n            v = [v];\n        }\n\n        this._props = [];\n\n        v.forEach((prop) => {\n            this._props.push(prop);\n            this._propSetters.push(Element.getSetter(prop));\n        });\n    }\n\n    set property(v) {\n        this._hasColorProperty = undefined;\n        this.properties = v;\n    }\n\n    set p(v) {\n        this.properties = v;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    hasColorProperty() {\n        if (this._hasColorProperty === undefined) {\n            this._hasColorProperty = this._props.length ? Element.isColorProperty(this._props[0]) : false;\n        }\n        return this._hasColorProperty;\n    }\n}\n\nAnimationActionSettings.prototype.isAnimationActionSettings = true;\n\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\nimport Element from \"../tree/Element.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport AnimationActionSettings from \"./AnimationActionSettings.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class AnimationSettings {\n    constructor() {\n        /**\n         * @type {AnimationActionSettings[]}\n         */\n        this._actions = [];\n\n        this.delay = 0;\n        this.duration = 1;\n\n        this.repeat = 0;\n        this.repeatOffset = 0;\n        this.repeatDelay = 0;\n\n        this.autostop = false;\n\n        this.stopMethod = AnimationSettings.STOP_METHODS.FADE;\n        this._stopTimingFunction = 'ease';\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(this._stopTimingFunction);\n        this.stopDuration = 0;\n        this.stopDelay = 0;\n    }\n\n    get actions() {\n        return this._actions;\n    }\n\n    set actions(v) {\n        this._actions = [];\n        for (let i = 0, n = v.length; i < n; i++) {\n            const e = v[i];\n            if (!e.isAnimationActionSettings) {\n                const aas = new AnimationActionSettings(this);\n                aas.patch(e);\n                this._actions.push(aas);\n            } else {\n                this._actions.push(e);\n            }\n        }\n    }\n\n    /**\n     * Applies the animation to the specified element, for the specified progress between 0 and 1.\n     * @param {Element} element;\n     * @param {number} p;\n     * @param {number} factor;\n     */\n    apply(element, p, factor = 1) {\n        this._actions.forEach(function(action) {\n            action.apply(element, p, factor);\n        });\n    }\n\n    /**\n     * Resets the animation to the reset values.\n     * @param {Element} element;\n     */\n    reset(element) {\n        this._actions.forEach(function(action) {\n            action.reset(element);\n        });\n    }\n\n    get stopTimingFunction() {\n        return this._stopTimingFunction;\n    }\n\n    set stopTimingFunction(v) {\n        this._stopTimingFunction = v;\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get stopTimingFunctionImpl() {\n        return this._stopTimingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nAnimationSettings.STOP_METHODS = {\n    FADE: 'fade',\n    REVERSE: 'reverse',\n    FORWARD: 'forward',\n    IMMEDIATE: 'immediate',\n    ONETOTWO: 'onetotwo'\n};\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\n\nexport default class Animation extends EventEmitter {\n\n    constructor(manager, settings, element) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._state = Animation.STATES.IDLE;\n\n        this._p = 0;\n        this._delayLeft = 0;\n        this._repeatsLeft = 0;\n\n        this._stopDelayLeft = 0;\n        this._stopP = 0;\n    }\n\n    start() {\n        if (this._element && this._element.attached) {\n            this._p = 0;\n            this._delayLeft = this.settings.delay;\n            this._repeatsLeft = this.settings.repeat;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('start');\n            this.checkActive();\n        } else {\n            console.warn(\"Element must be attached before starting animation\");\n        }\n    }\n\n    play() {\n        if (this._state === Animation.STATES.PAUSED) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.checkActive();\n            this.emit('resume');\n        } else if (this._state == Animation.STATES.STOPPING && this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('stopContinue');\n        } else if (this._state != Animation.STATES.PLAYING && this._state != Animation.STATES.FINISHED) {\n            // Restart.;\n            this.start();\n        }\n    }\n\n    pause() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._state = Animation.STATES.PAUSED;\n            this.emit('pause');\n        }\n    }\n\n    replay() {\n        if (this._state == Animation.STATES.FINISHED) {\n            this.start();\n        } else {\n            this.play();\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n        this._stopDelayLeft = 0;\n    }\n\n    finish() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._delayLeft = 0;\n            this._p = 1;\n        } else if (this._state === Animation.STATES.STOPPING) {\n            this._stopDelayLeft = 0;\n            this._p = 0;\n        }\n    }\n\n    stop() {\n        if (this._state === Animation.STATES.STOPPED || this._state === Animation.STATES.IDLE) return;\n\n        this._stopDelayLeft = this.settings.stopDelay || 0;\n\n        if (((this.settings.stopMethod === AnimationSettings.STOP_METHODS.IMMEDIATE) && !this._stopDelayLeft) || this._delayLeft > 0) {\n            // Stop upon next progress.;\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        } else {\n            if (this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                this._stopP = 0;\n            }\n\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        }\n\n        this.checkActive();\n    }\n\n    stopNow() {\n        if (this._state !== Animation.STATES.STOPPED || this._state !== Animation.STATES.IDLE) {\n            this._state = Animation.STATES.STOPPING;\n            this._p = 0;\n            this.emit('stop');\n            this.reset();\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        }\n    }\n\n    isPaused() {\n        return this._state === Animation.STATES.PAUSED;\n    }\n\n    isPlaying() {\n        return this._state === Animation.STATES.PLAYING;\n    }\n\n    isStopping() {\n        return this._state === Animation.STATES.STOPPING;\n    }\n\n    isFinished() {\n        return this._state === Animation.STATES.FINISHED;\n    }\n\n    checkActive() {\n        if (this.isActive()) {\n            this.manager.addActive(this);\n        }\n    }\n\n    isActive() {\n        return (this._state == Animation.STATES.PLAYING || this._state == Animation.STATES.STOPPING) && this._element && this._element.attached;\n    }\n\n    progress(dt) {\n        if (!this._element) return;\n        this._progress(dt);\n        this.apply();\n    }\n\n    _progress(dt) {\n        if (this._state == Animation.STATES.STOPPING) {\n            this._stopProgress(dt);\n            return;\n        }\n\n        if (this._state != Animation.STATES.PLAYING) {\n            return;\n        }\n\n        if (this._delayLeft > 0) {\n            this._delayLeft -= dt;\n\n            if (this._delayLeft < 0) {\n                dt = -this._delayLeft;\n                this._delayLeft = 0;\n\n                this.emit('delayEnd');\n            } else {\n                return;\n            }\n        }\n\n        if (this.settings.duration === 0) {\n            this._p = 1;\n        } else if (this.settings.duration > 0) {\n            this._p += dt / this.settings.duration;\n        }\n        if (this._p >= 1) {\n            // Finished!;\n            if (this.settings.repeat == -1 || this._repeatsLeft > 0) {\n                if (this._repeatsLeft > 0) {\n                    this._repeatsLeft--;\n                }\n                this._p = this.settings.repeatOffset;\n                this.emit('progress', this._p);\n                \n                if (this.settings.repeatDelay) {\n                    this._delayLeft = this.settings.repeatDelay;\n                }\n\n                this.emit('repeat', this._repeatsLeft);\n            } else {\n                this._p = 1;\n                this.emit('progress', this._p);\n                \n                this._state = Animation.STATES.FINISHED;\n                this.emit('finish');\n                if (this.settings.autostop) {\n                    this.stop();\n                }\n            }\n        } else {\n            this.emit('progress', this._p);\n        }\n    }\n    \n    _stopProgress(dt) {\n        let duration = this._getStopDuration();\n\n        if (this._stopDelayLeft > 0) {\n            this._stopDelayLeft -= dt;\n\n            if (this._stopDelayLeft < 0) {\n                dt = -this._stopDelayLeft;\n                this._stopDelayLeft = 0;\n\n                this.emit('stopDelayEnd');\n            } else {\n                return;\n            }\n        }\n        if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.IMMEDIATE) {\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            if (duration === 0) {\n                this._p = 0;\n            } else if (duration > 0) {\n                this._p -= dt / duration;\n            }\n\n            if (this._p <= 0) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FADE) {\n            this._progressStopTransition(dt);\n            if (this._stopP >= 1) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.ONETOTWO) {\n            if (this._p < 2) {\n                if (duration === 0) {\n                    this._p = 2;\n                } else if (duration > 0) {\n                    if (this._p < 1) {\n                        this._p += dt / this.settings.duration;\n                    } else {\n                        this._p += dt / duration;\n                    }\n                }\n                if (this._p >= 2) {\n                    this._p = 2;\n                    this._state = Animation.STATES.STOPPED;\n                    this.emit('stopFinish');\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n            if (this._p < 1) {\n                if (this.settings.duration == 0) {\n                    this._p = 1;\n                } else {\n                    this._p += dt / this.settings.duration;\n                }\n                if (this._p >= 1) {\n                    if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n                        this._p = 1;\n                        this._state = Animation.STATES.STOPPED;\n                        this.emit('stopFinish');\n                    } else {\n                        if (this._repeatsLeft > 0) {\n                            this._repeatsLeft--;\n                            this._p = 0;\n                            this.emit('repeat', this._repeatsLeft);\n                        } else {\n                            this._p = 1;\n                            this._state = Animation.STATES.STOPPED;\n                            this.emit('stopFinish');\n                        }\n                    }\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        }\n        \n    }\n    \n    _progressStopTransition(dt) {\n        if (this._stopP < 1) {\n            if (this._stopDelayLeft > 0) {\n                this._stopDelayLeft -= dt;\n\n                if (this._stopDelayLeft < 0) {\n                    dt = -this._stopDelayLeft;\n                    this._stopDelayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n            \n            const duration = this._getStopDuration();\n\n            if (duration == 0) {\n                this._stopP = 1;\n            } else {\n                this._stopP += dt / duration;\n            }\n            if (this._stopP >= 1) {\n                // Finished!;\n                this._stopP = 1;\n            }\n        }\n    }\n\n    _getStopDuration() {\n        return this.settings.stopDuration || this.settings.duration;\n    }\n\n    apply() {\n        if (this._state === Animation.STATES.STOPPED) {\n            this.reset();\n        } else {\n            let factor = 1;\n            if (this._state === Animation.STATES.STOPPING && this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                factor = (1 - this.settings.stopTimingFunctionImpl(this._stopP));\n            }\n            this._settings.apply(this._element, this._p, factor);\n        }\n    }\n\n    reset() {\n        this._settings.reset(this._element);\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get frame() {\n        return Math.round(this._p * this._settings.duration * 60);\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n}\n\nAnimation.STATES = {\n    IDLE: 0,\n    PLAYING: 1,\n    STOPPING: 2,\n    STOPPED: 3,\n    FINISHED: 4,\n    PAUSED: 5\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All running animations on attached subjects.\n         * @type {Set<Animation>}\n         */\n        this.active = new Set();\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                if (a.isActive()) {\n                    a.progress(dt);\n                } else {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => t.isActive()));\n            }\n        }\n    }\n\n    createAnimation(element, settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            // Convert plain object to proper settings object.\n            settings = this.createSettings(settings);\n        }\n\n        return new Animation(\n            this,\n            settings,\n            element\n        );\n    }\n\n    createSettings(settings) {\n        const animationSettings = new AnimationSettings();\n        Base.patchObject(animationSettings, settings);\n        return animationSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\nimport Animation from \"./Animation.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class RectangleTexture extends Texture {\n\n    _getLookupId() {\n        return '__whitepix';\n    }\n\n    _getSourceLoader() {\n        return function(cb) {\n            var whitePixel = new Uint8Array([255, 255, 255, 255]);\n            cb(null, {source: whitePixel, w: 1, h: 1, permanent: true});\n        }\n    }\n\n    isAutosizeTexture() {\n        return false;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Application render tree.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Utils from \"./Utils.mjs\";\nimport WebGLRenderer from \"../renderer/webgl/WebGLRenderer.mjs\";\nimport C2dRenderer from \"../renderer/c2d/C2dRenderer.mjs\";\nimport SparkRenderer from \"../renderer/spark/SparkRenderer.mjs\";\nimport PlatformLoader from \"../platforms/PlatformLoader.mjs\";\nimport WebGLStateManager from \"../tools/WebGLStateManager.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Stage extends EventEmitter {\n\n    constructor(options = {}) {\n        super();\n        this._setOptions(options);\n\n        this._usedMemory = 0;\n        this._lastGcFrame = 0;\n\n        const platformType = Stage.platform ? Stage.platform : PlatformLoader.load(options);\n        this.platform = new platformType();\n\n        if (this.platform.init) {\n            this.platform.init(this);\n        }\n\n        this.gl = null;\n        this.c2d = null;\n\n        const context = this.getOption('context');\n        if (context) {\n            if (context.useProgram) {\n                this.gl = context;\n            } else {\n                this.c2d = context;\n            }\n        } else {\n            if (Utils.isWeb && (!Stage.isWebglSupported() || this.getOption('canvas2d'))) {\n                console.log('Using canvas2d renderer');\n                this.c2d = this.platform.createCanvasContext(this.getOption('w'), this.getOption('h'));\n            } else {\n                this.gl = this.platform.createWebGLContext(this.getOption('w'), this.getOption('h'));\n            }\n        }\n\n        if (this.gl) {\n            // Wrap in WebGLStateManager.\n            // This prevents unnecessary double WebGL commands from being executed, and allows context switching.\n            // Context switching is necessary when reusing the same context for Three.js.\n            // Note that the user must make sure that the WebGL context is untouched before creating the application,\n            //  when manually passing over a canvas or context in the options.\n            WebGLStateManager.enable(this.gl, \"lightning\")\n        }\n\n        this._mode = this.gl ? 0 : 1;\n\n        // Override width and height.\n        if (this.getCanvas()) {\n            this._options.w = this.getCanvas().width;\n            this._options.h = this.getCanvas().height;\n        }\n\n        if (this._mode === 0) {\n            if (Utils.isSpark) {\n                this._renderer = new SparkRenderer(this);\n            } else {\n                this._renderer = new WebGLRenderer(this);\n            }\n        } else {\n            this._renderer = new C2dRenderer(this);\n        }\n\n        this.setClearColor(this.getOption('clearColor'));\n\n        this.frameCounter = 0;\n\n        this.transitions = new TransitionManager(this);\n        this.animations = new AnimationManager(this);\n\n        this.textureManager = new TextureManager(this);\n        this.textureThrottler = new TextureThrottler(this);\n\n        this.startTime = 0;\n        this.currentTime = 0;\n        this.dt = 0;\n\n        // Preload rectangle texture, so that we can skip some border checks for loading textures.\n        this.rectangleTexture = new RectangleTexture(this);\n        this.rectangleTexture.load();\n\n        // Never clean up because we use it all the time.\n        this.rectangleTexture.source.permanent = true;\n\n        this.ctx = new CoreContext(this);\n\n        this._updateSourceTextures = new Set();\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    static isWebglSupported() {\n        if (Utils.isNode) {\n            return true;\n        }\n\n        try {\n            return !!window.WebGLRenderingContext;\n        } catch(e) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns the rendering mode.\n     * @returns {number}\n     *  0: WebGL\n     *  1: Canvas2d\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    isWebgl() {\n        return this.mode === 0;\n    }\n\n    isC2d() {\n        return this.mode === 1;\n    }\n\n    getOption(name) {\n        return this._options[name];\n    }\n\n    _setOptions(o) {\n        this._options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this._options[name] = def;\n            } else {\n                this._options[name] = value;\n            }\n        }\n\n        opt('canvas', null);\n        opt('context', null);\n        opt('w', 1920);\n        opt('h', 1080);\n        opt('srcBasePath', null);\n        opt('memoryPressure', 24e6);\n        opt('bufferMemory', 2e6);\n        opt('textRenderIssueMargin', 0);\n        opt('clearColor', [0, 0, 0, 0]);\n        opt('defaultFontFace', 'sans-serif');\n        opt('fixedDt', 0);\n        opt('useImageWorker', true);\n        opt('autostart', true);\n        opt('precision', 1);\n        opt('canvas2d', false);\n        opt('platform', null);\n        opt('readPixelsBeforeDraw', false);\n    }\n\n    setApplication(app) {\n        this.application = app;\n    }\n\n    init() {\n        this.application.setAsRoot();\n        if (this.getOption('autostart')) {\n            this.platform.startLoop();\n        }\n    }\n\n    destroy() {\n        this.platform.stopLoop();\n        this.platform.destroy();\n        this.ctx.destroy();\n        this.textureManager.destroy();\n        this._renderer.destroy();\n    }\n\n    stop() {\n        this.platform.stopLoop();\n    }\n\n    resume() {\n        this.platform.startLoop();\n    }\n\n    get root() {\n        return this.application;\n    }\n\n    getCanvas() {\n        return this._mode ? this.c2d.canvas : this.gl.canvas;\n    }\n\n    getRenderPrecision() {\n        return this._options.precision;\n    }\n\n    /**\n     * Marks a texture for updating it's source upon the next drawFrame.\n     * @param texture\n     */\n    addUpdateSourceTexture(texture) {\n        if (this._updatingFrame) {\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\n            texture._performUpdateSource();\n        } else {\n            this._updateSourceTextures.add(texture);\n        }\n    }\n\n    removeUpdateSourceTexture(texture) {\n        if (this._updateSourceTextures) {\n            this._updateSourceTextures.delete(texture);\n        }\n    }\n\n    hasUpdateSourceTexture(texture) {\n        return (this._updateSourceTextures && this._updateSourceTextures.has(texture));\n    }\n\n    drawFrame() {\n        this.startTime = this.currentTime;\n        this.currentTime = this.platform.getHrTime();\n\n        if (this._options.fixedDt) {\n            this.dt = this._options.fixedDt;\n        } else {\n            this.dt = (!this.startTime) ? .02 : .001 * (this.currentTime - this.startTime);\n        }\n\n        this.emit('frameStart');\n\n        if (this._updateSourceTextures.size) {\n            this._updateSourceTextures.forEach(texture => {\n                texture._performUpdateSource();\n            });\n            this._updateSourceTextures = new Set();\n        }\n\n        this.emit('update');\n\n        const changes = this.ctx.hasRenderUpdates();\n\n        // Update may cause textures to be loaded in sync, so by processing them here we may be able to show them\n        // during the current frame already.\n        this.textureThrottler.processSome();\n\n        if (changes) {\n            this._updatingFrame = true;\n            this.ctx.update();\n            this.ctx.render();\n            this._updatingFrame = false;\n        }\n\n        this.platform.nextFrame(changes);\n\n        this.emit('frameEnd');\n\n        this.frameCounter++;\n    }\n\n    isUpdatingFrame() {\n        return this._updatingFrame;\n    }\n\n    renderFrame() {\n        this.ctx.frame();\n    }\n\n    forceRenderUpdate() {\n        // Enforce re-rendering.\n        if (this.root) {\n            this.root.core._parent.setHasRenderUpdates(1);\n        }\n    }\n\n    setClearColor(clearColor) {\n        this.forceRenderUpdate();\n        if (clearColor === null) {\n            // Do not clear.\n            this._clearColor = null;\n        } else if (Array.isArray(clearColor)) {\n            this._clearColor = clearColor;\n        } else {\n            this._clearColor = StageUtils.getRgbaComponentsNormalized(clearColor);\n        }\n    }\n\n    getClearColor() {\n        return this._clearColor;\n    }\n\n    createElement(settings) {\n        if (settings) {\n            return this.element(settings);\n        } else {\n            return new Element(this);\n        }\n    }\n\n    createShader(settings) {\n        return Shader.create(this, settings);\n    }\n\n    element(settings) {\n        if (settings.isElement) return settings;\n\n        let element;\n        if (settings.type) {\n            element = new settings.type(this);\n        } else {\n            element = new Element(this);\n        }\n\n        element.patch(settings);\n\n        return element;\n    }\n\n    c(settings) {\n        return this.element(settings);\n    }\n\n    get w() {\n        return this._options.w;\n    }\n\n    get h() {\n        return this._options.h;\n    }\n\n    get coordsWidth() {\n        return this.w / this._options.precision;\n    }\n\n    get coordsHeight() {\n        return this.h / this._options.precision;\n    }\n\n    addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        if (this._lastGcFrame !== this.frameCounter) {\n            if (this._usedMemory > this.getOption('memoryPressure')) {\n                this.gc(false);\n                if (this._usedMemory > this.getOption('memoryPressure') - 2e6) {\n                    // Too few released. Aggressive cleanup.\n                    this.gc(true);\n                }\n            }\n        }\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    gc(aggressive) {\n        if (this._lastGcFrame !== this.frameCounter) {\n            this._lastGcFrame = this.frameCounter;\n            const memoryUsageBefore = this._usedMemory;\n            this.gcTextureMemory(aggressive);\n            this.gcRenderTextureMemory(aggressive);\n            this.renderer.gc(aggressive);\n\n            console.log(`GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${((memoryUsageBefore - this._usedMemory) / 1e6).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`);\n            const other = this._usedMemory - this.textureManager.usedMemory - this.ctx.usedMemory;\n            console.log(` Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(this.ctx.usedMemory / 1e6).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`);\n        }\n    }\n\n    gcTextureMemory(aggressive = false) {\n        if (aggressive && this.ctx.root.visible) {\n            // Make sure that ALL textures are cleaned;\n            this.ctx.root.visible = false;\n            this.textureManager.gc();\n            this.ctx.root.visible = true;\n        } else {\n            this.textureManager.gc();\n        }\n    }\n\n    gcRenderTextureMemory(aggressive = false) {\n        if (aggressive && this.root.visible) {\n            // Make sure that ALL render textures are cleaned;\n            this.root.visible = false;\n            this.ctx.freeUnusedRenderTextures(0);\n            this.root.visible = true;\n        } else {\n            this.ctx.freeUnusedRenderTextures(0);\n        }\n    }\n\n    getDrawingCanvas() {\n        return this.platform.getDrawingCanvas();\n    }\n\n    update() {\n        this.ctx.update()\n    }\n\n    addServiceProvider(serviceprovider) {\n        if (Utils.isSpark) {\n            this.platform.addServiceProvider(serviceprovider);\n        }\n    }\n\n    getChildrenByPosition(x, y){\n        const children = [];\n        this.root.core.update();\n        this.root.core.collectAtCoord(x,y,children);\n\n        return children;\n    }\n}\n\nimport Element from \"./Element.mjs\";\nimport StageUtils from \"./StageUtils.mjs\";\nimport TextureManager from \"./TextureManager.mjs\";\nimport TextureThrottler from \"./TextureThrottler.mjs\";\nimport CoreContext from \"./core/CoreContext.mjs\";\nimport TransitionManager from \"../animation/TransitionManager.mjs\";\nimport AnimationManager from \"../animation/AnimationManager.mjs\";\nimport RectangleTexture from \"../textures/RectangleTexture.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebPlatform from \"./browser/WebPlatform.mjs\";\n\nexport default class PlatformLoader {\n    static load(options) {\n        if (options.platform) {\n            return options.platform;\n        } else {\n            return WebPlatform;\n        }\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"./Component.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class Application extends Component {\n\n    constructor(options = {}, properties) {\n        // Save options temporarily to avoid having to pass it through the constructor.\n        Application._temp_options = options;\n\n        // Booting flag is used to postpone updateFocusSettings;\n        Application.booting = true;\n        const stage = new Stage(options.stage);\n        super(stage, properties);\n        Application.booting = false;\n\n        this.__updateFocusCounter = 0;\n        this.__keypressTimers = new Map();\n\n        // We must construct while the application is not yet attached.\n        // That's why we 'init' the stage later (which actually emits the attach event).\n        this.stage.init();\n\n        // Initially, the focus settings are updated after both the stage and application are constructed.\n        this.updateFocusSettings();\n\n        this.__keymap = this.getOption('keys');\n\n        if (this.__keymap) {\n            this.stage.platform.registerKeydownHandler((e) => {\n                this._receiveKeydown(e);\n            });\n\n            this.stage.platform.registerKeyupHandler((e) => {\n                this._receiveKeyup(e);\n            });\n        }\n    }\n\n    getOption(name) {\n        return this.__options[name];\n    }\n\n    _setOptions(o) {\n        this.__options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this.__options[name] = def;\n            } else {\n                this.__options[name] = value;\n            }\n        }\n\n        opt('debug', false);\n        opt('keys', {\n            38: \"Up\",\n            40: \"Down\",\n            37: \"Left\",\n            39: \"Right\",\n            13: \"Enter\",\n            8: \"Back\",\n            27: \"Exit\"\n        });\n    }\n\n    __construct() {\n        this.stage.setApplication(this);\n\n        this._setOptions(Application._temp_options);\n        delete Application._temp_options;\n\n        super.__construct();\n    }\n\n    __init() {\n        super.__init();\n        this.__updateFocus();\n    }\n\n    updateFocusPath() {\n        this.__updateFocus();\n    }\n\n    __updateFocus() {\n        const notOverridden = this.__updateFocusRec();\n\n        if (!Application.booting && notOverridden) {\n            this.updateFocusSettings();\n        }\n    }\n\n    __updateFocusRec() {\n        const updateFocusId = ++this.__updateFocusCounter;\n        this.__updateFocusId = updateFocusId;\n\n        const newFocusPath = this.__getFocusPath();\n        const newFocusedComponent = newFocusPath[newFocusPath.length - 1];\n        const prevFocusedComponent = this._focusPath ? this._focusPath[this._focusPath.length - 1] : undefined;\n\n        if (!prevFocusedComponent) {\n            // Focus events.\n            this._focusPath = [];\n            for (let i = 0, n = newFocusPath.length; i < n; i++) {\n                this._focusPath.push(newFocusPath[i]);\n                this._focusPath[i]._focus(newFocusedComponent, undefined);\n                const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                if (focusOverridden) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            let m = Math.min(this._focusPath.length, newFocusPath.length);\n            let index;\n            for (index = 0; index < m; index++) {\n                if (this._focusPath[index] !== newFocusPath[index]) {\n                    break;\n                }\n            }\n\n            if (this._focusPath.length !== newFocusPath.length || index !== newFocusPath.length) {\n                if (this.__options.debug) {\n                    console.log('FOCUS ' + newFocusedComponent.getLocationString());\n                }\n                // Unfocus events.\n                for (let i = this._focusPath.length - 1; i >= index; i--) {\n                    const unfocusedElement = this._focusPath.pop();\n                    unfocusedElement._unfocus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus events.\n                for (let i = index, n = newFocusPath.length; i < n; i++) {\n                    this._focusPath.push(newFocusPath[i]);\n                    this._focusPath[i]._focus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus changed events.\n                for (let i = 0; i < index; i++) {\n                    this._focusPath[i]._focusChange(newFocusedComponent, prevFocusedComponent);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    updateFocusSettings() {\n        const focusedComponent = this._focusPath[this._focusPath.length - 1];\n\n        // Get focus settings. These can be used for dynamic application-wide settings that depend on the\n        // focus directly (such as the application background).\n        const focusSettings = {};\n        const defaultSetFocusSettings = Component.prototype._setFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._setFocusSettings !== defaultSetFocusSettings) {\n                this._focusPath[i]._setFocusSettings(focusSettings);\n            }\n        }\n\n        const defaultHandleFocusSettings = Component.prototype._handleFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._handleFocusSettings !== defaultHandleFocusSettings) {\n                this._focusPath[i]._handleFocusSettings(focusSettings, this.__prevFocusSettings, focusedComponent);\n            }\n        }\n\n        this.__prevFocusSettings = focusSettings;\n    }\n\n    _handleFocusSettings(settings, prevSettings, focused, prevFocused) {\n        // Override to handle focus-based settings.\n    }\n\n    __getFocusPath() {\n        const path = [this];\n        let current = this;\n        do {\n            const nextFocus = current._getFocused();\n            if (!nextFocus || (nextFocus === current)) {\n                // Found!;\n                break;\n            }\n\n\n            let ptr = nextFocus.cparent;\n            if (ptr === current) {\n                path.push(nextFocus);\n            } else {\n                // Not an immediate child: include full path to descendant.\n                const newParts = [nextFocus];\n                do {\n                    if (!ptr) {\n                        current._throwError(\"Return value for _getFocused must be an attached descendant component but its '\" + nextFocus.getLocationString() + \"'\");\n                    }\n                    newParts.push(ptr);\n                    ptr = ptr.cparent;\n                } while (ptr !== current);\n\n                // Add them reversed.\n                for (let i = 0, n = newParts.length; i < n; i++) {\n                    path.push(newParts[n - i - 1]);\n                }\n            }\n\n            current = nextFocus;\n        } while(true);\n\n        return path;\n    }\n\n    get focusPath() {\n        return this._focusPath;\n    }\n\n    /**\n     * Injects an event in the state machines, top-down from application to focused component.\n     */\n    focusTopDownEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = 0; i < n; i++) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Injects an event in the state machines, bottom-up from focused component to application.\n     */\n    focusBottomUpEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = n - 1; i >= 0; i--) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    _receiveKeydown(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n        const path = this.focusPath;\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                const hasTimer = this.__keypressTimers.has(keys[i]);\n                // prevent event from getting fired when the timeout is still active\n                if (path[path.length - 1].longpress && hasTimer) {\n                    return;\n                }\n\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}`, \"_captureKey\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}`, \"_handleKey\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKey\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKey\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        const consumer = path[path.length - 1];\n\n        if (keys && consumer.longpress) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                this._startLongpressTimer(keys[i], consumer);\n            }\n        }\n    }\n\n    /**\n     * Keyup listener\n     * To take away some confusion we add `Release` to the event to prevent ending up with method names like:\n     *  _handleLeftUp / _handleUpUp / _handleEnterUp etc\n     *\n     * @param e\n     * @private\n     */\n    _receiveKeyup(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}Release`, \"_captureKeyRelease\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}Release`, \"_handleKeyRelease\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKeyRelease\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKeyRelease\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (this.__keypressTimers.has(keys[i])) {\n                    // keyup has fired before end of timeout so we clear it\n                    clearTimeout(this.__keypressTimers.get(keys[i]));\n                    // delete so we can register it again\n                    this.__keypressTimers.delete(keys[i]);\n                }\n            }\n        }\n    }\n\n    /**\n     * Registers and starts a timer for the pressed key. Timer will be cleared when the key is released\n     * before the timer goes off.\n     *\n     * If key is not release (keyup) the longpress handler will be fired.\n     * Configuration can be via the Components template:\n     *\n     * static _template() {\n     *     return {\n     *         w:100, h:100,\n     *         longpress:{up:700, down:500}\n     *     }\n     * }     *\n     * // this will get called when up has been pressed for 700ms\n     * _handleUpLong() {\n     *\n     * }\n     *\n     * @param key\n     * @param element\n     * @private\n     */\n    _startLongpressTimer(key, element) {\n        const config = element.longpress;\n        const lookup = key.toLowerCase();\n\n        if (config[lookup]) {\n            const timeout = config[lookup];\n            if (!Utils.isNumber(timeout)) {\n                element._throwError(\"config value for longpress must be a number\");\n            } else {\n                this.__keypressTimers.set(key, setTimeout(() => {\n                    if (!this.stage.application.focusTopDownEvent([`_capture${key}Long`, \"_captureKey\"], {})) {\n                        this.stage.application.focusBottomUpEvent([`_handle${key}Long`, \"_handleKey\"], {});\n                    }\n\n                    this.__keypressTimers.delete(key);\n                }, timeout || 500 /* prevent 0ms */));\n            }\n        }\n        return;\n    }\n\n    destroy() {\n        if (!this._destroyed) {\n            this._destroy();\n            this.stage.destroy();\n            this._destroyed = true;\n        }\n    }\n\n    _destroy() {\n        // This forces the _detach, _disabled and _active events to be called.\n        this.stage.setApplication(undefined);\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.__keypressTimers.size) {\n            for (const timer of this.__keypressTimers.values()) {\n                clearTimeout(timer);\n            }\n\n            this.__keypressTimers.clear();\n        }\n    }\n\n    getCanvas() {\n        return this.stage.getCanvas();\n    }\n\n}\n\nimport Stage from \"../tree/Stage.mjs\";","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticCanvasTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._factory = undefined;\n        this._lookupId = undefined;\n    }\n\n    set content({factory, lookupId = undefined}) {\n        this._factory = factory;\n        this._lookupId = lookupId;\n        this._changed();\n    }\n\n    _getIsValid() {\n        return !!this._factory;\n    }\n\n    _getLookupId() {\n        return this._lookupId;\n    }\n\n    _getSourceLoader() {\n        const f = this._factory;\n        return (cb) => {\n            return f((err, canvas) => {\n                if (err) {\n                    return cb(err);\n                }\n                cb(null, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas));\n            }, this.stage);\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport StaticCanvasTexture from \"../textures/StaticCanvasTexture.mjs\"\n\nexport default class Tools {\n\n    static getCanvasTexture(canvasFactory, lookupId) {\n        return {type: StaticCanvasTexture, content: {factory: canvasFactory, lookupId: lookupId}}\n    }\n\n    static getRoundRect(w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createRoundRect(cb, stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor);\n            } else {\n                cb(null, this.createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor));\n            }\n        };\n        let id = 'rect' + [w, h, strokeWidth, strokeColor, fill ? 1 : 0, fillColor].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (fill === undefined) fill = true;\n        if (strokeWidth === undefined) strokeWidth = 0;\n\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + strokeWidth + 2;\n        canvas.height = h + strokeWidth + 2;\n\n        ctx.beginPath();\n        let x = 0.5 * strokeWidth + 1, y = 0.5 * strokeWidth + 1;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n\n        if (fill) {\n            if (Utils.isNumber(fillColor)) {\n                ctx.fillStyle = StageUtils.getRgbaString(fillColor);\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            ctx.fill();\n        }\n\n        if (strokeWidth) {\n            if (Utils.isNumber(strokeColor)) {\n                ctx.strokeStyle = StageUtils.getRgbaString(strokeColor);\n            } else {\n                ctx.strokeStyle = \"white\";\n            }\n            ctx.lineWidth = strokeWidth;\n            ctx.stroke();\n        }\n\n        return canvas;\n    }\n\n    static getShadowRect(w, h, radius = 0, blur = 5, margin = blur * 2) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createShadowRect(cb, stage, w, h, radius, blur, margin);\n            } else {\n                cb(null, this.createShadowRect(stage, w, h, radius, blur, margin));\n            }\n        };\n        let id = 'shadow' + [w, h, blur, margin].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createShadowRect(stage, w, h, radius, blur, margin) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + margin * 2;\n        canvas.height = h + margin * 2;\n\n        // WpeWebKit bug: we experienced problems without this with shadows in noncompositedwebgl mode.\n        ctx.globalAlpha = 0.01;\n        ctx.fillRect(0, 0, 0.01, 0.01);\n        ctx.globalAlpha = 1.0;\n\n        ctx.shadowColor = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.fillStyle = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.shadowBlur = blur;\n        ctx.shadowOffsetX = (w + 10) + margin;\n        ctx.shadowOffsetY = margin;\n\n        ctx.beginPath();\n        const x = -(w + 10);\n        const y = 0;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n        ctx.fill();\n\n        return canvas;\n    }\n\n    static getSvgTexture(url, w, h) {\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createSvg(cb, stage, url, w, h);\n            } else {\n                this.createSvg(cb, stage, url, w, h);\n            }\n        };\n        let id = 'svg' + [w, h, url].join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createSvg(cb, stage, url, w, h) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        let img = new Image();\n        img.onload = () => {\n            canvas.width = w;\n            canvas.height = h;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            cb(null, canvas);\n        }\n        img.onError = (err) => {\n            cb(err);\n        }\n\n        // On the PS4 platform setting the `crossOrigin` attribute on images\n        // can cause CORS failures.\n        if (!Utils.isPS4) {\n            img.crossOrigin = \"Anonymous\";\n        }\n\n        img.src = url;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class ObjMerger {\n\n    static isMf(f) {\n        return Utils.isFunction(f) && f.__mf;\n    }\n\n    static mf(f) {\n        // Set as merge function.\n        f.__mf = true;\n        return f;\n    }\n\n    static merge(a, b) {\n        const aks = Object.keys(a);\n        const bks = Object.keys(b);\n\n        if (!bks.length) {\n            return a;\n        }\n\n        // Create index array for all elements.\n        const ai = {};\n        const bi = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n            ai[key] = -1;\n            bi[key] = i;\n        }\n        for (let i = 0, n = aks.length; i < n; i++) {\n            const key = aks[i];\n            ai[key] = i;\n            if (bi[key] === undefined) {\n                bi[key] = -1;\n            }\n        }\n\n        const aksl = aks.length;\n\n        const result = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n\n            // Prepend all items in a that are not in b - before the now added b attribute.\n            const aIndex = ai[key];\n            let curIndex = aIndex;\n            while(--curIndex >= 0) {\n                const akey = aks[curIndex];\n                if (bi[akey] !== -1) {\n                    // Already found? Stop processing.\n                    // Not yet found but exists in b? Also stop processing: wait until we find it in b.\n                    break;\n                }\n            }\n            while(++curIndex < aIndex) {\n                const akey = aks[curIndex];\n                result[akey] = a[akey];\n            }\n\n            const bv = b[key];\n            const av = a[key];\n            let r;\n            if (this.isMf(bv)) {\n                r = bv(av);\n            } else {\n                if (!Utils.isObjectLiteral(av) || !Utils.isObjectLiteral(bv)) {\n                    r = bv;\n                } else {\n                    r = ObjMerger.merge(av, bv);\n                }\n            }\n\n            // When marked as undefined, property is deleted.\n            if (r !== undefined) {\n                result[key] = r;\n            }\n        }\n\n        // Append remaining final items in a.\n        let curIndex = aksl;\n        while(--curIndex >= 0) {\n            const akey = aks[curIndex];\n            if (bi[akey] !== -1) {\n                break;\n            }\n        }\n        while(++curIndex < aksl) {\n            const akey = aks[curIndex];\n            result[akey] = a[akey];\n        }\n\n        return result;\n    }\n\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"../tree/ObjectList.mjs\";\n\nexport default class ObjectListProxy extends ObjectList {\n\n    constructor(target) {\n        super();\n        this._target = target;\n    }\n\n    onAdd(item, index) {\n        this._target.addAt(item, index);\n    }\n\n    onRemove(item, index) {\n        this._target.removeAt(index);\n    }\n\n    onSync(removed, added, order) {\n        this._target._setByArray(order);\n    }\n\n    onSet(item, index) {\n        this._target.setAt(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._target.setAt(item, toIndex);\n    }\n\n    createItem(object) {\n        return this._target.createItem(object);\n    }\n\n    isItem(object) {\n        return this._target.isItem(object);\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectListProxy from \"./ObjectListProxy.mjs\";\n\nexport default class ObjectListWrapper extends ObjectListProxy {\n\n    constructor(target, wrap) {\n        super(target);\n        this._wrap = wrap;\n    }\n\n    wrap(item) {\n        let wrapper = this._wrap(item);\n        item._wrapper = wrapper;\n        return wrapper;\n    }\n\n    onAdd(item, index) {\n        item = this.wrap(item);\n        super.onAdd(item, index);\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n    }\n\n    onSync(removed, added, order) {\n        added.forEach(a => this.wrap(a));\n        order = order.map(a => a._wrapper);\n        super.onSync(removed, added, order);\n    }\n\n    onSet(item, index) {\n        item = this.wrap(item);\n        super.onSet(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        super.onMove(item, fromIndex, toIndex);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class NoiseTexture extends Texture {\n\n    _getLookupId() {\n        return '__noise';\n    }\n\n    _getSourceLoader() {\n        const gl = this.stage.gl;\n        return function(cb) {\n            const noise = new Uint8Array(128 * 128 * 4);\n            for (let i = 0; i < 128 * 128 * 4; i+=4) {\n                const v = Math.floor(Math.random() * 256);\n                noise[i] = v;\n                noise[i+1] = v;\n                noise[i+2] = v;\n                noise[i+3] = 255;\n            }\n            const texParams = {}\n\n            if (gl) {\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            cb(null, {source: noise, w: 128, h: 128, texParams: texParams});\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class HtmlTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._htmlElement = undefined;\n        this._scale = 1;\n    }\n\n    set htmlElement(v) {\n        this._htmlElement = v;\n        this._changed();\n    }\n\n    get htmlElement() {\n        return this._htmlElement;\n    }\n\n    set scale(v) {\n        this._scale = v;\n        this._changed();\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set html(v) {\n        if (!v) {\n            this.htmlElement = undefined;\n        } else {\n            const d = document.createElement('div');\n            d.innerHTML = \"<div>\" + v + \"</div>\";\n            this.htmlElement = d.firstElementChild;\n        }\n    }\n\n    get html() {\n        return this._htmlElement.innerHTML;\n    }\n\n    _getIsValid() {\n        return this.htmlElement;\n    }\n\n    _getLookupId() {\n        return this._scale + \":\" + this._htmlElement.innerHTML;\n    }\n\n    _getSourceLoader() {\n        const htmlElement = this._htmlElement;\n        const scale = this._scale;\n        return function(cb) {\n            if (!window.html2canvas) {\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\n            }\n\n            const area = HtmlTexture.getPreloadArea();\n            area.appendChild(htmlElement);\n\n            html2canvas(htmlElement, {backgroundColor: null, scale: scale}).then(function(canvas) {\n                area.removeChild(htmlElement);\n                if (canvas.height === 0) {\n                    return cb(new Error(\"Canvas height is 0\"));\n                }\n                cb(null, {source: canvas, width: canvas.width, height: canvas.height});\n            }).catch(e => {\n                console.error(e);\n            });\n        }\n    }\n\n    static getPreloadArea() {\n        if (!this._preloadArea) {\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\n            this._preloadArea = document.createElement('div');\n            if (this._preloadArea.attachShadow) {\n                // Use a shadow DOM if possible to prevent styling from interfering.\n                this._preloadArea.attachShadow({mode: 'closed'});\n            }\n            this._preloadArea.style.opacity = 0;\n            this._preloadArea.style.pointerEvents = 'none';\n            this._preloadArea.style.position = 'fixed';\n            this._preloadArea.style.display = 'block';\n            this._preloadArea.style.top = '100vh';\n            this._preloadArea.style.overflow = 'hidden';\n            document.body.appendChild(this._preloadArea);\n        }\n        return this._preloadArea;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class ListComponent extends Component {\n\n    constructor(stage) {\n        super(stage);\n\n        this._wrapper = super._children.a({});\n\n        this._reloadVisibleElements = false;\n\n        this._visibleItems = new Set();\n\n        this._index = 0;\n\n        this._started = false;\n\n        /**\n         * The transition definition that is being used when scrolling the items.\n         * @type TransitionSettings\n         */\n        this._scrollTransitionSettings = this.stage.transitions.createSettings({});\n\n        /**\n         * The scroll area size in pixels per item.\n         */\n        this._itemSize = 100;\n\n        this._viewportScrollOffset = 0;\n\n        this._itemScrollOffset = 0;\n\n        /**\n         * Should the list jump when scrolling between end to start, or should it be continuous, like a carrousel?\n         */\n        this._roll = false;\n\n        /**\n         * Allows restricting the start scroll position.\n         */\n        this._rollMin = 0;\n\n        /**\n         * Allows restricting the end scroll position.\n         */\n        this._rollMax = 0;\n\n        /**\n         * Definition for a custom animation that is applied when an item is (partially) selected.\n         * @type AnimationSettings\n         */\n        this._progressAnimation = null;\n\n        /**\n         * Inverts the scrolling direction.\n         * @type {boolean}\n         * @private\n         */\n        this._invertDirection = false;\n\n        /**\n         * Layout the items horizontally or vertically?\n         * @type {boolean}\n         * @private\n         */\n        this._horizontal = true;\n\n        this.itemList = new ListItems(this);\n    }\n\n    _allowChildrenAccess() {\n        return false;\n    }\n\n    get items() {\n        return this.itemList.get();\n    }\n\n    set items(children) {\n        this.itemList.patch(children);\n    }\n\n    start() {\n        this._wrapper.transition(this.property, this._scrollTransitionSettings);\n        this._scrollTransition = this._wrapper.transition(this.property);\n        this._scrollTransition.on('progress', p => this.update());\n\n        this.setIndex(0, true, true);\n\n        this._started = true;\n\n        this.update();\n    }\n\n    setIndex(index, immediate = false, closest = false) {\n        let nElements = this.length;\n        if (!nElements) return;\n\n        this.emit('unfocus', this.getElement(this.realIndex), this._index, this.realIndex);\n\n        if (closest) {\n            // Scroll to same offset closest to the index.\n            let offset = Utils.getModuloIndex(index, nElements);\n            let o = Utils.getModuloIndex(this.index, nElements);\n            let diff = offset - o;\n            if (diff > 0.5 * nElements) {\n                diff -= nElements;\n            } else if (diff < -0.5 * nElements) {\n                diff += nElements;\n            }\n            this._index += diff;\n        } else {\n            this._index = index;\n        }\n\n        if (this._roll || (this.viewportSize > this._itemSize * nElements)) {\n            this._index = Utils.getModuloIndex(this._index, nElements);\n        }\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = direction * this._index * this._itemSize;\n\n        if (this._roll) {\n            let min, max, scrollDelta;\n            if (direction == 1) {\n                max = (nElements - 1) * this._itemSize;\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max -= scrollDelta;\n\n                min = this.viewportSize - (this._itemSize + scrollDelta);\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.max(Math.min(value, max), min);\n            } else {\n                max = (nElements * this._itemSize - this.viewportSize);\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max += scrollDelta;\n\n                let min = scrollDelta;\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.min(Math.max(-max, value), -min);\n            }\n        }\n\n        this._scrollTransition.start(value);\n\n        if (immediate) {\n            this._scrollTransition.finish();\n        }\n\n        this.emit('focus', this.getElement(this.realIndex), this._index, this.realIndex);\n    }\n\n    getAxisPosition() {\n        let target = -this._scrollTransition._targetValue;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = -direction * this._index * this._itemSize;\n\n        return this._viewportScrollOffset * this.viewportSize + (value - target);\n    }\n\n    update() {\n        if (!this._started) return;\n\n        let nElements = this.length;\n        if (!nElements) return;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n\n        // Map position to index value.\n        let v = (this._horizontal ? this._wrapper.x : this._wrapper.y);\n\n        let viewportSize = this.viewportSize;\n        let scrollDelta = this._viewportScrollOffset * viewportSize - this._itemScrollOffset * this._itemSize;\n        v += scrollDelta;\n\n        let s, e, ps, pe;\n        if (direction == -1) {\n            s = Math.floor(-v / this._itemSize);\n            ps = 1 - ((-v / this._itemSize) - s);\n            e = Math.floor((viewportSize - v) / this._itemSize);\n            pe = (((viewportSize - v) / this._itemSize) - e);\n        } else {\n            s = Math.ceil(v / this._itemSize);\n            ps = 1 + (v / this._itemSize) - s;\n            e = Math.ceil((v - viewportSize) / this._itemSize);\n            pe = e - ((v - viewportSize) / this._itemSize);\n        }\n        if (this._roll || (viewportSize > this._itemSize * nElements)) {\n            // Don't show additional items.\n            if (e >= nElements) {\n                e = nElements - 1;\n                pe = 1;\n            }\n            if (s >= nElements) {\n                s = nElements - 1;\n                ps = 1;\n            }\n            if (e <= -1) {\n                e = 0;\n                pe = 1;\n            }\n            if (s <= -1) {\n                s = 0;\n                ps = 1;\n            }\n        }\n\n        let offset = -direction * s * this._itemSize;\n\n        let item;\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n\n            let element = this.getElement(realIndex);\n            item = element.parent;\n            this._visibleItems.delete(item);\n            if (this._horizontal) {\n                item.x = offset + scrollDelta;\n            } else {\n                item.y = offset + scrollDelta;\n            }\n\n            let wasVisible = item.visible;\n            item.visible = true;\n\n            if (!wasVisible || this._reloadVisibleElements) {\n                // Turned visible.\n                this.emit('visible', index, realIndex);\n            }\n\n\n\n            if (this._progressAnimation) {\n                let p = 1;\n                if (index == s) {\n                    p = ps;\n                } else if (index == e) {\n                    p = pe;\n                }\n\n                // Use animation to progress.\n                this._progressAnimation.apply(element, p);\n            }\n\n            offset += this._itemSize;\n        }\n\n        // Handle item visibility.\n        let self = this;\n        this._visibleItems.forEach(function(invisibleItem) {\n            invisibleItem.visible = false;\n            self._visibleItems.delete(invisibleItem);\n        });\n\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n            this._visibleItems.add(this.getWrapper(realIndex));\n        }\n\n        this._reloadVisibleElements = false;\n    }\n\n    setPrevious() {\n        this.setIndex(this._index - 1);\n    }\n\n    setNext() {\n        this.setIndex(this._index + 1);\n    }\n\n    getWrapper(index) {\n        return this._wrapper.children[index];\n    }\n\n    getElement(index) {\n        let e = this._wrapper.children[index];\n        return e ? e.children[0] : null;\n    }\n\n    reload() {\n        this._reloadVisibleElements = true;\n        this.update();\n    }\n\n    get element() {\n        let e = this._wrapper.children[this.realIndex];\n        return e ? e.children[0] : null;\n    }\n\n    get length() {\n        return this._wrapper.children.length;\n    }\n\n    get property() {\n        return this._horizontal ? 'x' : 'y';\n    }\n\n    get viewportSize() {\n        return this._horizontal ? this.w : this.h;\n    }\n\n    get index() {\n        return this._index;\n    }\n\n    get realIndex() {\n        return Utils.getModuloIndex(this._index, this.length);\n    }\n\n    get itemSize() {\n        return this._itemSize;\n    }\n\n    set itemSize(v) {\n        this._itemSize = v;\n        this.update();\n    }\n\n    get viewportScrollOffset() {\n        return this._viewportScrollOffset;\n    }\n\n    set viewportScrollOffset(v) {\n        this._viewportScrollOffset = v;\n        this.update();\n    }\n\n    get itemScrollOffset() {\n        return this._itemScrollOffset;\n    }\n\n    set itemScrollOffset(v) {\n        this._itemScrollOffset = v;\n        this.update();\n    }\n\n    get scrollTransitionSettings() {\n        return this._scrollTransitionSettings;\n    }\n\n    set scrollTransitionSettings(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    set scrollTransition(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    get scrollTransition() {\n        return this._scrollTransition;\n    }\n\n    get progressAnimation() {\n        return this._progressAnimation;\n    }\n\n    set progressAnimation(v) {\n        if (Utils.isObjectLiteral(v)) {\n            this._progressAnimation = this.stage.animations.createSettings(v);\n        } else {\n            this._progressAnimation = v;\n        }\n        this.update();\n    }\n\n    get roll() {\n        return this._roll;\n    }\n\n    set roll(v) {\n        this._roll = v;\n        this.update();\n    }\n\n    get rollMin() {\n        return this._rollMin;\n    }\n\n    set rollMin(v) {\n        this._rollMin = v;\n        this.update();\n    }\n\n    get rollMax() {\n        return this._rollMax;\n    }\n\n    set rollMax(v) {\n        this._rollMax = v;\n        this.update();\n    }\n\n    get invertDirection() {\n        return this._invertDirection;\n    }\n\n    set invertDirection(v) {\n        if (!this._started) {\n            this._invertDirection = v;\n        }\n    }\n\n    get horizontal() {\n        return this._horizontal;\n    }\n\n    set horizontal(v) {\n        if (v !== this._horizontal) {\n            if (!this._started) {\n                this._horizontal = v;\n            }\n        }\n    }\n\n}\n\nimport ObjectListWrapper from \"../tools/ObjectListWrapper.mjs\";\nclass ListItems extends ObjectListWrapper {\n    constructor(list) {\n        let wrap = (item => {\n            let parent = item.stage.createElement();\n            parent.add(item);\n            parent.visible = false;\n            return parent;\n        })\n\n        super(list._wrapper._children, wrap);\n        this.list = list;\n    }\n\n    onAdd(item, index) {\n        super.onAdd(item, index);\n        this.checkStarted(index);\n    }\n\n    checkStarted(index) {\n        this.list._reloadVisibleElements = true;\n        if (!this.list._started) {\n            this.list.start();\n        } else {\n            if (this.list.length === 1) {\n                this.list.setIndex(0, true, true);\n            } else {\n                if (this.list._index >= this.list.length) {\n                    this.list.setIndex(0);\n                }\n            }\n            this.list.update();\n        }\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n        let ri = this.list.realIndex;\n        if (ri === index) {\n            if (ri === this.list.length) {\n                ri--;\n            }\n            if (ri >= 0) {\n                this.list.setIndex(ri);\n            }\n        } else if (ri > index) {\n            this.list.setIndex(ri - 1);\n        }\n\n        this.list._reloadVisibleElements = true;\n    }\n\n    onSet(item, index) {\n        super.onSet(item, index);\n        this.checkStarted(index);\n    }\n\n    onSync(removed, added, order) {\n        super.onSync(removed, added, order);\n        this.checkStarted(0);\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nimport Utils from \"../tree/Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class LinearBlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n\n        this._direction = new Float32Array([1, 0]);\n        this._kernelRadius = 1;\n    }\n\n    get x() {\n        return this._direction[0];\n    }\n\n    set x(v) {\n        this._direction[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._direction[1];\n    }\n\n    set y(v) {\n        this._direction[1] = v;\n        this.redraw();\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n\n    useDefault() {\n        return (this._kernelRadius === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\n\n        const w = operation.getRenderWidth();\n        const h = operation.getRenderHeight();\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\n    }\n}\n\nLinearBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 resolution;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 direction;\n    uniform int kernelRadius;\n    \n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3333333333333333) * direction;\n        color += texture2D(image, uv) * 0.29411764705882354;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n        return color; \n    }\n    \n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3846153846) * direction;\n        vec2 off2 = vec2(3.2307692308) * direction;\n        color += texture2D(image, uv) * 0.2270270270;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n        return color;\n    }\n    \n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.411764705882353) * direction;\n        vec2 off2 = vec2(3.2941176470588234) * direction;\n        vec2 off3 = vec2(5.176470588235294) * direction;\n        color += texture2D(image, uv) * 0.1964825501511404;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n        return color;\n    }    \n\n    void main(void){\n        if (kernelRadius == 1) {\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else if (kernelRadius == 2) {\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else {\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\n */\nexport default class BoxBlurShader extends DefaultShader {\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const dx = 1.0 / operation.getTextureWidth(0);\n        const dy = 1.0 / operation.getTextureHeight(0);\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\n    }\n\n}\n\nBoxBlurShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 stepTextureCoord;\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec4 vColor;\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nBoxBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class BlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._kernelRadius = 1;\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"blur(\" + this._kernelRadius + \"px)\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\nimport C2dBlurShader from \"../renderer/c2d/shaders/BlurShader.mjs\";\nimport Shader from \"../tree/Shader.mjs\";\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\n\nexport default class FastBlurComponent extends Component {\n    static _template() {\n        return {}\n    }\n\n    get wrap() {\n        return this.tag(\"Wrap\");\n    }\n\n    set content(v) {\n        return this.wrap.content = v;\n    }\n\n    get content() {\n        return this.wrap.content;\n    }\n\n    set padding(v) {\n        this.wrap._paddingX = v;\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this.wrap._paddingX = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set amount(v) {\n        return this.wrap.amount = v;\n    }\n\n    get amount() {\n        return this.wrap.amount;\n    }\n\n    _onResize() {\n        this.wrap.w = this.renderWidth;\n        this.wrap.h = this.renderHeight;\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    _build() {\n        this.patch({\n            Wrap: {type: this.stage.gl ? WebGLFastBlurComponent : C2dFastBlurComponent}\n        });\n    }\n\n}\n\n\nclass C2dFastBlurComponent extends Component {\n\n    static _template() {\n        return {\n            forceZIndexContext: true,\n            rtt: true,\n            Textwrap: {shader: {type: C2dBlurShader}, Content: {}}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n\n    }\n\n    static getSpline() {\n        if (!this._multiSpline) {\n            this._multiSpline = new MultiSpline();\n            this._multiSpline.parse(false, {0: 0, 0.25: 1.5, 0.5: 5.5, 0.75: 18, 1: 39});\n        }\n        return this._multiSpline;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        this._wrapper.x = paddingX;\n        this._textwrap.x = -paddingX;\n\n        this._wrapper.y = paddingY;\n        this._textwrap.y = -paddingY;\n\n        this._textwrap.w = w + paddingX * 2;\n        this._textwrap.h = h + paddingY * 2;\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._textwrap.shader.kernelRadius = C2dFastBlurComponent._amountToKernelRadius(v);\n    }\n\n    static _amountToKernelRadius(v) {\n        return C2dFastBlurComponent.getSpline().getValue(Math.min(1, v * 0.25));\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nclass WebGLFastBlurComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true, Content: {}},\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            },\n            Result: {shader: {type: FastBlurOutputShader}, visible: false}\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n        this._layers = this.sel(\"Layers\");\n        this._output = this.sel(\"Result\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _buildLayers() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:1},{x:0,y:1,kernelRadius:1},{x:1.5,y:0,kernelRadius:1},{x:0,y:1.5,kernelRadius:1}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = Shader.create(this.stage, Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._output.x = -paddingX;\n        this._textwrap.x = -paddingX;\n        this._output.w = fw;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._output.y = -paddingY;\n        this._textwrap.y = -paddingY;\n        this._output.h = fh;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v === 0) {\n            this._textwrap.renderToTexture = false;\n            this._output.shader.otherTextureSource = null;\n            this._output.visible = false;\n        } else {\n            this._textwrap.renderToTexture = true;\n            this._output.visible = true;\n\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n\n            if (v <= 1) {\n                this._output.texture = this._textwrap.getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(0).getTexture();\n                this._output.shader.a = v;\n            } else if (v <= 2) {\n                this._output.texture = this.getLayer(0).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(1).getTexture();\n                this._output.shader.a = v - 1;\n            } else if (v <= 3) {\n                this._output.texture = this.getLayer(1).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(2).getTexture();\n                this._output.shader.a = v - 2;\n            } else if (v <= 4) {\n                this._output.texture = this.getLayer(2).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(3).getTexture();\n                this._output.shader.a = v - 3;\n            }\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._buildLayers();\n    }\n\n}\n\n/**\n * Shader that combines two textures into one output.\n */\nclass FastBlurOutputShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._a = 0;\n        this._otherTextureSource = null;\n    }\n\n    get a() {\n        return this._a;\n    }\n\n    set a(v) {\n        this._a = v;\n        this.redraw();\n    }\n\n    set otherTextureSource(v) {\n        this._otherTextureSource = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"a\", this._a, this.gl.uniform1f);\n        this._setUniform(\"uSampler2\", 1, this.gl.uniform1i);\n    }\n\n    beforeDraw(operation) {\n        let glTexture = this._otherTextureSource ? this._otherTextureSource.nativeTexture : null;\n\n        let gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n}\n\nFastBlurOutputShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uSampler2;\n    uniform float a;\n    void main(void){\n        if (a == 1.0) {\n            gl_FragColor = texture2D(uSampler2, vTextureCoord) * vColor;\n        } else {\n            gl_FragColor = ((1.0 - a) * texture2D(uSampler, vTextureCoord) + (a * texture2D(uSampler2, vTextureCoord))) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\n\nexport default class BloomComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true,\n                BloomBase: {shader: {type: BloomBaseShader},\n                    Content: {}\n                }\n            },\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, scale: 2, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, scale: 4, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, scale: 8, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, scale: 16, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap.Content\");\n        this._layers = this.sel(\"Layers\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _build() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:3},{x:0,y:1,kernelRadius:3},{x:1.5,y:0,kernelRadius:3},{x:0,y:1.5,kernelRadius:3}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = this.stage.createShader(Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap.Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap.Content').patch(v);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._textwrap.x = -paddingX;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._textwrap.y = -paddingY;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v > 0) {\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._build();\n    }\n\n}\n\nclass BloomBaseShader extends DefaultShader {\n}\n\nBloomBaseShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float m = max(max(color.r, color.g), color.b);\n        float c = max(0.0, (m - 0.80)) * 5.0;\n        color = color * c;\n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class SmoothScaleComponent extends Component {\n\n    static _template() {\n        return {\n            ContentWrap: {renderOffscreen: true, forceZIndexContext: true, onAfterUpdate: SmoothScaleComponent._updateDimensions,\n                Content: {}\n            },\n            Scale: {visible: false}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._smoothScale = 1;\n        this._iterations = 0;\n    }\n\n    get content() {\n        return this.tag('Content');\n    }\n\n    set content(v) {\n        this.tag('Content').patch(v, true);\n    }\n\n    get smoothScale() {\n        return this._smoothScale;\n    }\n\n    set smoothScale(v) {\n        if (this._smoothScale !== v) {\n            let its = 0;\n            while(v < 0.5 && its < 12) {\n                its++;\n                v = v * 2;\n            }\n\n            this.scale = v;\n            this._setIterations(its);\n\n            this._smoothScale = v;\n        }\n    }\n\n    _setIterations(its) {\n        if (this._iterations !== its) {\n            const scalers = this.sel(\"Scale\").childList;\n            const content = this.sel(\"ContentWrap\");\n            while (scalers.length < its) {\n                const first = scalers.length === 0;\n                const texture = (first ? content.getTexture() : scalers.last.getTexture());\n                scalers.a({rtt: true, renderOffscreen: true, texture: texture});\n            }\n\n            SmoothScaleComponent._updateDimensions(this.tag(\"ContentWrap\"), true);\n\n            const useScalers = (its > 0);\n            this.patch({\n                ContentWrap: {renderToTexture: useScalers},\n                Scale: {visible: useScalers}\n            });\n\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                scalers.getAt(i).patch({\n                    visible: i < its,\n                    renderOffscreen: i !== its - 1\n                });\n            }\n            this._iterations = its;\n        }\n    }\n\n    static _updateDimensions(contentWrap, force) {\n        const content = contentWrap.children[0];\n        let w = content.renderWidth;\n        let h = content.renderHeight;\n        if (w !== contentWrap.w || h !== contentWrap.h || force) {\n            contentWrap.w = w;\n            contentWrap.h = h;\n\n            const scalers = contentWrap.parent.tag(\"Scale\").children;\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                w = w * 0.5;\n                h = h * 0.5;\n                scalers[i].w = w;\n                scalers[i].h = h;\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dDefaultShader from \"../../c2d/shaders/DefaultShader.mjs\";\nimport WebGLDefaultShader from \"../../webgl/shaders/DefaultShader.mjs\";\n\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getC2d() {\n        return C2dGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nWebGLGrayscaleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\n    }\n`;\n\nexport class C2dGrayscaleShader extends C2dDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getWebGL() {\n        return WebGLGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"grayscale(\" + this._amount + \")\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport NoiseTexture from \"../../../textures/NoiseTexture.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * This shader can be used to fix a problem that is known as 'gradient banding'.\n */\nexport default class DitheringShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._noiseTexture = new NoiseTexture(ctx.stage);\n\n        this._graining = 1/256;\n\n        this._random = false;\n    }\n\n    set graining(v) {\n        this._graining = v;\n        this.redraw();\n    }\n\n    set random(v) {\n        this._random = v;\n        this.redraw();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Make sure that the noise texture is uploaded to the GPU.\n        this._noiseTexture.load();\n\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            // Calculate noise texture coordinates so that it spans the full element.\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\n\n            let ulx = 0;\n            let uly = 0;\n            if (this._random) {\n                ulx = Math.random();\n                uly = Math.random();\n\n                brx += ulx;\n                bry += uly;\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = ulx;\n                    ulx = brx;\n                    brx = t;\n                }\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = uly;\n                    uly = bry;\n                    bry = t;\n                }\n            }\n\n            // Specify all corner points.\n            floats[offset] = ulx;\n            floats[offset + 1] = uly;\n\n            floats[offset + 2] = brx;\n            floats[offset + 3] = uly;\n\n            floats[offset + 4] = brx;\n            floats[offset + 5] = bry;\n\n            floats[offset + 6] = ulx;\n            floats[offset + 7] = bry;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aNoiseTextureCoord\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n\n        let glTexture = this._noiseTexture.source.nativeTexture;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        let gl = this.gl;\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    useDefault() {\n        return this._graining === 0;\n    }\n\n    afterDraw(operation) {\n        if (this._random) {\n            this.redraw();\n        }\n    }\n\n}\n\nDitheringShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec2 aNoiseTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vNoiseTextureCoord = aNoiseTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDitheringShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uNoiseSampler;\n    uniform float graining;\n    void main(void){\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../../tree/Utils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class CircularPushShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._inputValue = 0;\n\n        this._maxDerivative = 0.01;\n\n        this._normalizedValue = 0;\n\n        // The offset between buckets. A value between 0 and 1.\n        this._offset = 0;\n\n        this._amount = 0.1;\n\n        this._aspectRatio = 1;\n\n        this._offsetX = 0;\n\n        this._offsetY = 0;\n\n        this.buckets = 100;\n    }\n\n    get aspectRatio() {\n        return this._aspectRatio;\n    }\n\n    set aspectRatio(v) {\n        this._aspectRatio = v;\n        this.redraw();\n    }\n\n    get offsetX() {\n        return this._offsetX;\n    }\n\n    set offsetX(v) {\n        this._offsetX = v;\n        this.redraw();\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        this._offsetY = v;\n        this.redraw();\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    set inputValue(v) {\n        this._inputValue = v;\n    }\n\n    get inputValue() {\n        return this._inputValue;\n    }\n\n    set maxDerivative(v) {\n        this._maxDerivative = v;\n    }\n\n    get maxDerivative() {\n        return this._maxDerivative;\n    }\n\n    set buckets(v) {\n        if (v > 100) {\n            console.warn(\"CircularPushShader: supports max 100 buckets\");\n            v = 100;\n        }\n\n        // This should be set before starting.\n        this._buckets = v;\n\n        // Init values array in the correct length.\n        this._values = new Uint8Array(this._getValues(v));\n\n        this.redraw();\n    }\n\n    get buckets() {\n        return this._buckets;\n    }\n\n    _getValues(n) {\n        const v = [];\n        for (let i = 0; i < n; i++) {\n            v.push(this._inputValue);\n        }\n        return v;\n    }\n\n    /**\n     * Progresses the shader with the specified (fractional) number of buckets.\n     * @param {number} o;\n     *   A number from 0 to 1 (1 = all buckets).\n     */\n    progress(o) {\n        this._offset += o * this._buckets;\n        const full = Math.floor(this._offset);\n        this._offset -= full;\n        this._shiftBuckets(full);\n        this.redraw();\n    }\n\n    _shiftBuckets(n) {\n        for (let i = this._buckets - 1; i >= 0; i--) {\n            const targetIndex = i - n;\n            if (targetIndex < 0) {\n                this._normalizedValue = Math.min(this._normalizedValue + this._maxDerivative, Math.max(this._normalizedValue - this._maxDerivative, this._inputValue));\n                this._values[i] = 255 * this._normalizedValue;\n            } else {\n                this._values[i] = this._values[targetIndex];\n            }\n        }\n    }\n\n    set offset(v) {\n        this._offset = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    beforeDraw(operation) {\n        const gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        if (!this._valuesTexture) {\n            this._valuesTexture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            if (Utils.isNode) {\n                gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, false);\n            }\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n        }\n\n        // Upload new values.\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    cleanup() {\n        if (this._valuesTexture) {\n            this.gl.deleteTexture(this._valuesTexture);\n        }\n    }\n\n\n}\n\nCircularPushShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform float offsetX;\n    uniform float offsetY;\n    uniform float aspectRatio;\n    varying vec2 vTextureCoord;\n    varying vec2 vPos;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vPos = vTextureCoord * 2.0 - 1.0;\n        vPos.y = vPos.y * aspectRatio;\n        vPos.y = vPos.y + offsetY;\n        vPos.x = vPos.x + offsetX;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nCircularPushShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vPos;\n    uniform float amount;\n    uniform float offset;\n    uniform float values[100];\n    uniform float buckets;\n    uniform sampler2D uSampler;\n    uniform sampler2D uValueSampler;\n    void main(void){\n        float l = length(vPos);\n        float m = (l * buckets * 0.678 - offset) / buckets;\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\n        vec2 unit = vPos / l;\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\n    }\n`;\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class InversionShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nInversionShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class OutlineShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._width = 5;\n        this._col = 0xFFFFFFFF;\n        this._color = [1,1,1,1];\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    get color() {\n        return this._col;\n    }\n\n    set color(v) {\n        if (this._col !== v) {\n            const col = StageUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._color = col;\n\n            this.redraw();\n\n            this._col = v;\n        }\n    }\n\n    useDefault() {\n        return (this._width === 0 || this._col[3] === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            const elementCore = operation.getElementCore(i);\n\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\n            const ddw = this._width / elementCore.w;\n            const dw = ddw / (1 - 2 * ddw);\n            const ddh = this._width / elementCore.h;\n            const dh = ddh / (1 - 2 * ddh);\n\n            // Specify all corner points.\n            floats[offset] = -dw;\n            floats[offset + 1] = -dh;\n\n            floats[offset + 2] = 1 + dw;\n            floats[offset + 3] = -dh;\n\n            floats[offset + 4] = 1 + dw;\n            floats[offset + 5] = 1 + dh;\n\n            floats[offset + 6] = -dw;\n            floats[offset + 7] = 1 + dh;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aCorner\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n}\n\nOutlineShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aCorner;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vCorner;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vCorner = aCorner;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nOutlineShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vCorner;\n    uniform vec4 color;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec2 m = min(vCorner, 1.0 - vCorner);\n        float value = step(0.0, min(m.x, m.y));\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * @see https://github.com/pixijs/pixi-filters/tree/master/filters/pixelate/src\n */\nexport default class PixelateShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._size = new Float32Array([4, 4]);\n    }\n\n    get x() {\n        return this._size[0];\n    }\n\n    set x(v) {\n        this._size[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._size[1];\n    }\n\n    set y(v) {\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    get size() {\n        return this._size[0];\n    }\n\n    set size(v) {\n        this._size[0] = v;\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return ((this._size[0] === 0) && (this._size[1] === 0));\n    }\n\n    static getWebGLImpl() {\n        return WebGLPixelateShaderImpl;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            let w = operation.quads.getTextureWidth(operation.index + i);\n            let h = operation.quads.getTextureHeight(operation.index + i);\n\n            floats[offset] = w;\n            floats[offset + 1] = h;\n            floats[offset + 2] = w;\n            floats[offset + 3] = h;\n            floats[offset + 4] = w;\n            floats[offset + 5] = h;\n            floats[offset + 6] = w;\n            floats[offset + 7] = h;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aTextureRes\"), 2, gl.FLOAT, false, this.getExtraAttribBytesPerVertex(), this.getVertexAttribPointerOffset(operation));\n    }\n}\n\nPixelateShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aTextureRes;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        vTextureRes = aTextureRes;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPixelateShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n\n    uniform vec2 size;\n    uniform sampler2D uSampler;\n    \n    vec2 mapCoord( vec2 coord )\n    {\n        coord *= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 unmapCoord( vec2 coord )\n    {\n        coord /= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 pixelate(vec2 coord, vec2 size)\n    {\n        return floor( coord / size ) * size;\n    }\n    \n    void main(void)\n    {\n        vec2 coord = mapCoord(vTextureCoord);\n        coord = pixelate(coord, size);\n        coord = unmapCoord(coord);\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class RadialFilterShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._radius = 0;\n        this._cutoff = 1;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set cutoff(v) {\n        this._cutoff = v;\n        this.redraw();\n    }\n\n    get cutoff() {\n        return this._cutoff;\n    }\n    \n    useDefault() {\n        return this._radius === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        this._setUniform(\"radius\", 2 * (this._radius - 0.5) / operation.getRenderWidth(), this.gl.uniform1f);\n        this._setUniform(\"cutoff\", 0.5 * operation.getRenderWidth() / this._cutoff, this.gl.uniform1f);\n    }\n\n}\n\nRadialFilterShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy;\n    }\n`;\n\nRadialFilterShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 pos;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform float cutoff;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RoundedRectangleShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._radius = [1, 1, 1, 1];\n        this._stroke = 0;\n        this._fillColor = this._getNormalizedColor(0xffffffff);\n        this._strokeColor = this._getNormalizedColor(0x00ffffff);\n    }\n\n    set radius(v) {\n        if (Array.isArray(v)) {\n            this._radius = v;\n        } else {\n            this._radius = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set strokeColor(argb) {\n        this._strokeColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    set fillColor(argb) {\n        this._fillColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    set stroke(num) {\n        this._stroke = num;\n        this.redraw();\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return col;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const _radius = this._radius.map((r) => (r + 0.5) * renderPrecision)\n        this._setUniform('radius', new Float32Array(_radius), this.gl.uniform4fv);\n        this._setUniform('strokeColor', new Float32Array(this._strokeColor), this.gl.uniform4fv);\n        this._setUniform('fillColor', new Float32Array(this._fillColor), this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nRoundedRectangleShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nRoundedRectangleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n\n    #define PI 3.14159265359\n\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 radius;\n    uniform float stroke;\n    uniform vec4 strokeColor;\n    uniform vec4 fillColor;\n    \n    float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    float innerBorderMask(float dist, float width){\n        float alpha1 = clamp(dist + width, 0.0, 1.0);\n        float alpha2 = clamp(dist, 0.0, 1.0);\n        return alpha1 - alpha2;\n    }\n\n    void main() {\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        vec2 halfRes = 0.5 * resolution.xy;\n\n        float r = 0.0;\n        if (vTextureCoord.x < 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[0];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[1];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y >= 0.5) {\n            r = radius[2];\n        } else {\n            r = radius[3];\n        }\n\n        float b = boxDist(vTextureCoord.xy * resolution - halfRes, halfRes - 0.005, r);\n        vec4 tex = mix(vec4(0.0), color * fillColor, fillMask(b));\n        gl_FragColor = mix(tex, vColor * strokeColor, innerBorderMask(b, stroke));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class VignetteShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._magnitude = 1.3;\n        this._intensity = 0.7;\n        this._pivotX = 0.5;\n        this._pivotY = 0.5;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        this._setUniform(\"magnitude\", this._magnitude , this.gl.uniform1f);\n        this._setUniform(\"intensity\", this._intensity, this.gl.uniform1f);\n        this._setUniform(\"pivotX\", this._pivotX, this.gl.uniform1f);\n        this._setUniform(\"pivotY\", this._pivotY, this.gl.uniform1f);\n        this.redraw()\n    }\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        this._pivotX = v;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        this._pivotY = v;\n        this.redraw();\n    }\n\n    get intensity() {\n        return this._intensity;\n    }\n\n    set intensity(v) {\n        this._intensity = v;\n        this.redraw();\n    }\n\n    get magnitude() {\n        return this._magnitude;\n\n    }\n\n    set magnitude(v) {\n        this._magnitude = v;\n        this.redraw();\n    }\n}\n\nVignetteShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nVignetteShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float magnitude;\n    uniform float intensity;\n    uniform float pivotX;\n    uniform float pivotY;\n\n    void main() {\n        vec2 pivot = vec2(pivotX, pivotY);\n        vec2 uv = vTextureCoord.xy - pivot + vec2(0.5);\n        uv.x = clamp(uv.x, 0.0, 1.0);\n        uv.y = clamp(uv.y, 0.0, 1.0);\n   \n        uv *=  1.00 - uv.yx;\n        float vig = uv.x * uv.y * 25.0 * intensity;\n        vig = pow(vig, 0.45 * magnitude);\n        vec4 fragColor = vec4(vig) * vColor;\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * fragColor;\n\n    }\n`","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from '../../../tree/StageUtils.mjs'\n\nexport default class SpinnerShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._radius = 100;\n        this._width = 50;\n        this._period = 1;\n        this._angle = 0.5;\n        this._smooth = 0.005;\n        this._color = 0xffffffff;\n        this._backgroundColor = 0xff000000;\n        this._time = Date.now();\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    set period(v) {\n        this._period = v;\n        this.redraw();\n    }\n\n    set angle(v) {\n        this._angle = v\n        this.redraw();\n    }\n\n    set smooth(v) {\n        this._smooth = v;\n        this.redraw();\n    }\n\n    set color(v) {\n        this._color = v;\n        this.redraw();\n    }\n\n    set backgroundColor(v) {\n        this._backgroundColor = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner\n\n        this._setUniform(\"iTime\", Date.now() - this._time, this.gl.uniform1f);\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        this._setUniform('radius', this._radius * renderPrecision, this.gl.uniform1f);\n        this._setUniform('width', this._width * renderPrecision, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('angle', this._angle, this.gl.uniform1f);\n        this._setUniform('smooth', this._smooth, this.gl.uniform1f);\n        this._setUniform('color', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._color)), this.gl.uniform4fv)\n        this._setUniform('backgroundColor', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._backgroundColor)), this.gl.uniform4fv)\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv)\n\n        this.redraw()\n    }\n\n}\n\nSpinnerShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nSpinnerShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float iTime;\n    uniform float radius;\n    uniform float width;\n    uniform float period;\n    uniform float angle;\n    uniform float smooth;\n    uniform vec2 resolution;\n\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n\n    float ratio = resolution.y / resolution.x;\n\n    vec2 transpose_pos(vec2 pos) {\n        if (ratio < 1.) {\n            float diff = 0.5 - pos.x;\n            pos.x = 0.5 - diff / ratio;\n        } else {\n            float diff = 0.5 - pos.y;\n            pos.y = 0.5 - diff * ratio;\n        }\n        return pos;\n    }\n\n    float get_angle(vec2 pos) {\n        pos = transpose_pos(pos);\n        float a = atan(pos.y - 0.5, pos.x - 0.5);\n        a = (1.0+a/3.14159)/2.0;\n        \n        return a;\n    }\n\n    float dist(vec2 pos1, vec2 pos2) {\n        pos1 = transpose_pos(pos1);\n        return distance(pos1, pos2);\n    }\n\n    void main()\n    {\n        vec2 fragCoord = vTextureCoord;\n        vec4 fragColor = vColor;\n        \n        vec2 st = vTextureCoord;\n        float pct = dist(st, vec2(0.5));\n\n        float a = get_angle(st);\n        float t = iTime / 1000.0 / period;\n\n        float inner = max((radius - width) / resolution.x, (radius - width) / resolution.y);\n        float outer = max(radius / resolution.x, radius / resolution.y);\n\n        float x1 = mod(t, 1.0);\n        float x2 = mod(t + angle, 1.0);\n\n        if (x1 < x2) {\n            if (a > x1 && a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        } else {\n            if (a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else if (a > x1) {\n                float val = (1.0 - (1.0 + x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (1.0 + x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        }\n\n        float s = smoothstep(inner, inner + smooth + 0.00001, pct) * (1.0 - smoothstep(outer, outer + smooth + 0.00001, pct));\n        gl_FragColor = texture2D(uSampler, fragCoord) * vColor * (1. - s * fragColor.a) + fragColor * s;\n    }\n`;","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class HoleShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n        this._radius = 0;\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        this._x = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        this._y = v;\n        this.redraw();\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        this._w = v;\n        this.redraw();\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        this._h = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision()\n\n        this._setUniform(\"x\", this._x * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"y\", this._y * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"w\", this._w * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"h\", this._h * renderPrecision, this.gl.uniform1f);\n        this._setUniform('radius',  (this._radius + .5) * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n\n    useDefault() {\n        return (this._x === 0 && this._y === 0 && this._w === 0 && this._h === 0)\n    }\n}\n\nHoleShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nHoleShader.fragmentShaderSource = `\n   #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float x;\n    uniform float y;\n    uniform float w;\n    uniform float h;\n    uniform vec2 resolution;\n    uniform float radius;\n\n    float roundBox(vec2 p, vec2 b, float r) {\n        float d = length(max(abs(p)-b+r, 0.1))-r;\n        return smoothstep(1.0, 0.0, d);\n    }\n\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        vec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n        vec2 size = vec2(w, h) / 2.0;\n        float b = roundBox(pos, size, radius);\n        gl_FragColor = mix(color, vec4(0.0), b);\n    }\n`;","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RadialGradientShader extends DefaultShader {\n    \n    constructor(context) {\n        super(context);\n        \n        this._x = 0;\n        this._y = 0;\n\n        this.color = 0xFFFF0000;\n\n        this._radiusX = 100;\n        this._radiusY = 100;\n    }\n\n    set x(v) {\n        this._x = v;\n        this.redraw();\n    }\n\n    set y(v) {\n        this._y = v;\n        this.redraw();\n    }\n\n    set radiusX(v) {\n        this._radiusX = v;\n        this.redraw();\n    }\n\n    get radiusX() {\n        return this._radiusX;\n    }\n\n    set radiusY(v) {\n        this._radiusY = v;\n        this.redraw();\n    }\n\n    get radiusY() {\n        return this._radiusY;\n    }\n\n    set radius(v) {\n        this.radiusX = v;\n        this.radiusY = v;\n    }\n\n    get color() {\n        return this._color;\n    }\n\n    set color(v) {\n        if (this._color !== v) {\n            const col = StageUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._rawColor = new Float32Array(col);\n\n            this.redraw();\n\n            this._color = v;\n        }\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        const rtc = operation.getNormalRenderTextureCoords(this._x, this._y);\n        this._setUniform(\"center\", new Float32Array(rtc), this.gl.uniform2fv);\n\n        this._setUniform(\"radius\", 2 * this._radiusX / operation.getRenderWidth(), this.gl.uniform1f);\n\n\n        // Radial gradient shader is expected to be used on a single element. That element's alpha is used.\n        this._setUniform(\"alpha\", operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n\n        this._setUniform(\"color\", this._rawColor, this.gl.uniform4fv);\n        this._setUniform(\"aspectRatio\", (this._radiusX/this._radiusY) * operation.getRenderHeight()/operation.getRenderWidth(), this.gl.uniform1f);\n    }\n\n}\n\nRadialGradientShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform vec2 center;\n    uniform float aspectRatio;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy - center;\n        pos.y = pos.y * aspectRatio;\n    }\n`;\n\nRadialGradientShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 pos;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform vec4 color;\n    uniform float alpha;\n    void main(void){\n        float dist = length(pos);\n        gl_FragColor = mix(color * alpha, texture2D(uSampler, vTextureCoord) * vColor, min(1.0, dist / radius));\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class Light3dShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._strength = 0.5;\n        this._ambient = 0.5;\n        this._fudge = 0.4;\n\n        this._rx = 0;\n        this._ry = 0;\n\n        this._z = 0;\n        this._pivotX = NaN;\n        this._pivotY = NaN;\n        this._pivotZ = 0;\n\n        this._lightY = 0;\n        this._lightZ = 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        let vr = operation.shaderOwner;\n        let element = vr.element;\n\n        let pivotX = isNaN(this._pivotX) ? element.pivotX * vr.w : this._pivotX;\n        let pivotY = isNaN(this._pivotY) ? element.pivotY * vr.h : this._pivotY;\n        let coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n\n        let rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        let gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set strength(v) {\n        this._strength = v;\n        this.redraw();\n    }\n\n    get strength() {\n        return this._strength;\n    }\n\n    set ambient(v) {\n        this._ambient = v;\n        this.redraw();\n    }\n\n    get ambient() {\n        return this._ambient;\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        this._pivotX = v + 1;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        this._pivotY = v + 1;\n        this.redraw();\n    }\n\n    get lightY() {\n        return this._lightY;\n    }\n\n    set lightY(v) {\n        this._lightY = v;\n        this.redraw();\n    }\n\n    get pivotZ() {\n        return this._pivotZ;\n    }\n\n    set pivotZ(v) {\n        this._pivotZ = v;\n        this.redraw();\n    }\n\n    get lightZ() {\n        return this._lightZ;\n    }\n\n    set lightZ(v) {\n        this._lightZ = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1);\n    }\n\n}\n\nLight3dShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float fudge;\n    uniform float strength;\n    uniform float ambient;\n    uniform float z;\n    uniform float lightY;\n    uniform float lightZ;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Set depth perspective\n        float perspective = 1.0 + fudge * pos.z;\n\n        pos.z += lightZ * projection.x;\n\n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, perspective);\n\n        // Correct light source position.\n        pos.y += lightY * abs(projection.y);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nLight3dShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec3 pos;\n    uniform sampler2D uSampler;\n    uniform float ambient;\n    uniform float strength;\n    void main(void){\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\n        float d = length(pos);\n        float n = 1.0 / max(0.1, d);\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\n        gl_FragColor = rgba * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class PerspectiveShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._fudge = 0.2;\n        this._rx = 0;\n        this._ry = 0;\n        this._z = 1.0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const vr = operation.shaderOwner;\n        const element = vr.element;\n\n        const pivotX = element.pivotX * vr.w;\n        const pivotY = element.pivotY * vr.h;\n        const coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n        const rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        const gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], 0]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0);\n    }\n\n}\n\nPerspectiveShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float z;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, z);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPerspectiveShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform vec3 rot;\n    uniform float fudge;\n\n    void main(void) {\n        vec2 coords = vTextureCoord;\n\n        coords.xy -= vec2(0.5);\n        coords.y = coords.y + (sign(rot[0]) * 0.5 - coords.x) * sin(rot[0]) * fudge * coords.y;\n        coords.x = coords.x + (sign(rot[1]) * 0.5 - coords.y) * sin(rot[1]) * fudge * coords.x;\n        coords.xy += vec2(0.5);\n\n        if (coords.x < 0.0 || coords.x > 1.0 || coords.y < 0.0 || coords.y > 1.0) {\n            gl_FragColor = vec4(0.0);\n        } else {\n            gl_FragColor = texture2D(uSampler, coords) * vColor;\n        }\n    }\n`;","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Application from \"./application/Application.mjs\";\nimport Component from \"./application/Component.mjs\";\nimport Base from \"./tree/Base.mjs\";\nimport Utils from \"./tree/Utils.mjs\";\nimport StageUtils from \"./tree/StageUtils.mjs\";\nimport Element from \"./tree/Element.mjs\";\nimport ElementCore from \"./tree/core/ElementCore.mjs\";\nimport ElementTexturizer from \"./tree/core/ElementTexturizer.mjs\";\nimport Texture from \"./tree/Texture.mjs\";\n\nimport Tools from \"./tools/Tools.mjs\";\nimport ObjMerger from \"./tools/ObjMerger.mjs\";\nimport ObjectListProxy from \"./tools/ObjectListProxy.mjs\";\nimport ObjectListWrapper from \"./tools/ObjectListWrapper.mjs\";\n\nimport RectangleTexture from \"./textures/RectangleTexture.mjs\";\nimport NoiseTexture from \"./textures/NoiseTexture.mjs\";\nimport TextTexture from \"./textures/TextTexture.mjs\";\nimport ImageTexture from \"./textures/ImageTexture.mjs\";\nimport HtmlTexture from \"./textures/HtmlTexture.mjs\";\nimport StaticTexture from \"./textures/StaticTexture.mjs\";\nimport StaticCanvasTexture from \"./textures/StaticCanvasTexture.mjs\";\nimport SourceTexture from \"./textures/SourceTexture.mjs\";\n\nimport ListComponent from \"./components/ListComponent.mjs\";\nimport FastBlurComponent from \"./components/FastBlurComponent.mjs\";\nimport BloomComponent from \"./components/BloomComponent.mjs\";\nimport SmoothScaleComponent from \"./components/SmoothScaleComponent.mjs\";\nimport BorderComponent from \"./components/BorderComponent.mjs\";\nimport EventEmitter from \"./EventEmitter.mjs\";\n\nimport WebGLShader from \"./renderer/webgl/WebGLShader.mjs\";\nimport WebGLDefaultShader from \"./renderer/webgl/shaders/DefaultShader.mjs\";\nimport { WebGLGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport BoxBlurShader from \"./renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DitheringShader from \"./renderer/webgl/shaders/DitheringShader.mjs\";\nimport CircularPushShader from \"./renderer/webgl/shaders/CircularPushShader.mjs\";\nimport InversionShader from \"./renderer/webgl/shaders/InversionShader.mjs\";\nimport LinearBlurShader from \"./renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport OutlineShader from \"./renderer/webgl/shaders/OutlineShader.mjs\";\nimport PixelateShader from \"./renderer/webgl/shaders/PixelateShader.mjs\";\nimport RadialFilterShader from \"./renderer/webgl/shaders/RadialFilterShader.mjs\";\nimport RoundedRectangleShader from \"./renderer/webgl/shaders/RoundedRectangleShader.mjs\";\nimport VignetteShader from \"./renderer/webgl/shaders/VignetteShader.mjs\";\nimport SpinnerShader from \"./renderer/webgl/shaders/SpinnerShader.mjs\";\nimport HoleShader from \"./renderer/webgl/shaders/HoleShader.mjs\";\nimport RadialGradientShader from \"./renderer/webgl/shaders/RadialGradientShader.mjs\";\nimport Light3dShader from \"./renderer/webgl/shaders/Light3dShader.mjs\";\nimport PerspectiveShader from \"./renderer/webgl/shaders/PerspectiveShader.mjs\";\n\nimport C2dShader from \"./renderer/c2d/C2dShader.mjs\";\nimport C2dDefaultShader from \"./renderer/c2d/shaders/DefaultShader.mjs\";\nimport { C2dGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport C2dBlurShader from \"./renderer/c2d/shaders/BlurShader.mjs\";\n\nimport Stage from \"./tree/Stage.mjs\";\n\nconst lightning = {\n    Application,\n    Component,\n    Base,\n    Utils,\n    StageUtils,\n    Element,\n    Tools,\n    Stage,\n    ElementCore,\n    ElementTexturizer,\n    Texture,\n    EventEmitter,\n    shaders: {\n        Grayscale: WebGLGrayscaleShader,\n        BoxBlur: BoxBlurShader,\n        Dithering: DitheringShader,\n        CircularPush: CircularPushShader,\n        Inversion: InversionShader,\n        LinearBlur: LinearBlurShader,\n        Outline: OutlineShader,\n        Pixelate: PixelateShader,\n        RadialFilter: RadialFilterShader,\n        RoundedRectangle: RoundedRectangleShader,\n        Hole: HoleShader,\n        Vignette: VignetteShader,\n        Spinner: SpinnerShader,\n        RadialGradient: RadialGradientShader,\n        Light3d: Light3dShader,\n        Perspective: PerspectiveShader,\n        WebGLShader,\n        WebGLDefaultShader,\n        C2dShader,\n        C2dDefaultShader,\n        c2d: {\n            Grayscale: C2dGrayscaleShader,\n            Blur: C2dBlurShader\n        }\n    },\n    textures: {\n        RectangleTexture,\n        NoiseTexture,\n        TextTexture,\n        ImageTexture,\n        HtmlTexture,\n        StaticTexture,\n        StaticCanvasTexture,\n        SourceTexture\n    },\n    components: {\n        FastBlurComponent,\n        BloomComponent,\n        SmoothScaleComponent,\n        BorderComponent,\n        ListComponent\n    },\n    tools: {\n        ObjMerger,\n        ObjectListProxy,\n        ObjectListWrapper\n    }\n};\n\nif (Utils.isWeb) {\n    window.lng = lightning;\n}\n\nexport default lightning;","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticTexture extends Texture {\n\n    constructor(stage, options) {\n        super(stage);\n\n        this._options = options;\n    }\n\n    set options(v) {\n        if (this._options !== v) {\n            this._options = v;\n            this._changed();\n        }\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    _getIsValid() {\n        return !!this._options;\n    }\n\n    _getSourceLoader() {\n        return (cb) => {\n            cb(null, this._options);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 RDK Management\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class BorderComponent extends Component {\n\n    static _template() {\n        return {\n            Content: {},\n            Borders: {\n                Top: {rect: true, visible: false, mountY: 1},\n                Right: {rect: true, visible: false},\n                Bottom: {rect: true, visible: false},\n                Left: {rect: true, visible: false, mountX: 1}\n            }\n        };\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._borderTop = this.tag(\"Top\");\n        this._borderRight = this.tag(\"Right\");\n        this._borderBottom = this.tag(\"Bottom\");\n        this._borderLeft = this.tag(\"Left\");\n\n        this.onAfterUpdate = function (element) {\n            const content = element.childList.first;\n            let w = element.core.w || content.renderWidth;\n            let h = element.core.h || content.renderHeight;\n            element._borderTop.w = w;\n            element._borderBottom.y = h;\n            element._borderBottom.w = w;\n            element._borderLeft.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderLeft.y = -element._borderTop.h;\n            element._borderRight.x = w;\n            element._borderRight.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderRight.y = -element._borderTop.h;\n        };\n\n        this.borderWidth = 1;\n    }\n\n    get content() {\n        return this.sel('Content');\n    }\n\n    set content(v) {\n        this.sel('Content').patch(v, true);\n    }\n\n    get borderWidth() {\n        return this.borderWidthTop;\n    }\n\n    get borderWidthTop() {\n        return this._borderTop.h;\n    }\n\n    get borderWidthRight() {\n        return this._borderRight.w;\n    }\n\n    get borderWidthBottom() {\n        return this._borderBottom.h;\n    }\n\n    get borderWidthLeft() {\n        return this._borderLeft.w;\n    }\n\n    set borderWidth(v) {\n        this.borderWidthTop = v;\n        this.borderWidthRight = v;\n        this.borderWidthBottom = v;\n        this.borderWidthLeft = v;\n    }\n\n    set borderWidthTop(v) {\n        this._borderTop.h = v;\n        this._borderTop.visible = (v > 0);\n    }\n\n    set borderWidthRight(v) {\n        this._borderRight.w = v;\n        this._borderRight.visible = (v > 0);\n    }\n\n    set borderWidthBottom(v) {\n        this._borderBottom.h = v;\n        this._borderBottom.visible = (v > 0);\n    }\n\n    set borderWidthLeft(v) {\n        this._borderLeft.w = v;\n        this._borderLeft.visible = (v > 0);\n    }\n\n    get colorBorder() {\n        return this.colorBorderTop;\n    }\n\n    get colorBorderTop() {\n        return this._borderTop.color;\n    }\n\n    get colorBorderRight() {\n        return this._borderRight.color;\n    }\n\n    get colorBorderBottom() {\n        return this._borderBottom.color;\n    }\n\n    get colorBorderLeft() {\n        return this._borderLeft.color;\n    }\n\n    set colorBorder(v) {\n        this.colorBorderTop = v;\n        this.colorBorderRight = v;\n        this.colorBorderBottom = v;\n        this.colorBorderLeft = v;\n    }\n\n    set colorBorderTop(v) {\n        this._borderTop.color = v;\n    }\n\n    set colorBorderRight(v) {\n        this._borderRight.color = v;\n    }\n\n    set colorBorderBottom(v) {\n        this._borderBottom.color = v;\n    }\n\n    set colorBorderLeft(v) {\n        this._borderLeft.color = v;\n    }\n\n    get borderTop() {\n        return this._borderTop;\n    }\n\n    set borderTop(settings) {\n        this.borderTop.patch(settings);\n    }\n\n    get borderRight() {\n        return this._borderRight;\n    }\n\n    set borderRight(settings) {\n        this.borderRight.patch(settings);\n    }\n\n    get borderBottom() {\n        return this._borderBottom;\n    }\n\n    set borderBottom(settings) {\n        this.borderBottom.patch(settings);\n    }\n\n    get borderLeft() {\n        return this._borderLeft;\n    }\n\n    set borderLeft(settings) {\n        this.borderLeft.patch(settings);\n    }\n\n    set borders(settings) {\n        this.borderTop = settings;\n        this.borderLeft = settings;\n        this.borderBottom = settings;\n        this.borderRight = settings;\n    }\n\n}\n\n"],"names":["StageUtils","[object Object]","v1","v2","p","r","g","b","a","color","toFixed","Math","floor","argb","rgba","max","min","v","c1","c2","round","c","t","n","length","i","r1","g1","b1","a1","alpha","deg","PI","d","xc","xb","xa","yc","yb","ya","time","cbx","cbxd","dx","it","minT","maxT","str","getTimingBezier","s","indexOf","parts","substr","split","console","warn","parseFloat","isNaN","Utils","value","isObjectLiteral","Array","isArray","getDeepClone","obj","keys","Object","clone","obj1","obj2","type","constructor","index","arr","getModuloIndex","len","ceil","isFunction","isObject","equalObjectLiterals","equalArrays","keys1","keys2","k1","k2","equalValues","this","result","forEach","push","iterator","iteratorResult","next","done","charcode","isWeb","window","sparkscene","isWPE","navigator","userAgent","isSpark","isNode","isPS4","Base","name","settings","names","patchObjectProperty","error","setter","setSetting","defaultSetter","charAt","__local","func","SpacingCalculator","mode","numberOfItems","remainingSpace","itemGaps","spacePerGap","spacingBefore","spacingBetween","getSpacing","Error","ContentAligner","layout","_layout","_totalCrossAxisSize","_lines","_getTotalCrossAxisSize","crossAxisSize","_getSpacing","lines","growSize","_flexContainer","alignContent","currentPos","crossAxisLayoutOffset","aligner","createItemAligner","finalCrossAxisLayoutSize","crossAxisLayoutSize","setCrossAxisLayoutSize","setCrossAxisLayoutOffset","align","recursiveResizeOccured","setItemPositions","totalCrossAxisSize","total","FlexUtils","item","horizontal","parent","target","getParent","flexParent","getAxisLayoutSize","getTotalPadding","w","h","funcW","_allowRelAxisSizeFunction","getParentAxisSizeWithPadding","originalWidth","funcH","originalHeight","_flex","isAxisFitToContents","x","y","pos","size","minSize","getPlainAxisMinSize","flexItemMinSize","isFlexItemEnabled","_flexItem","_getMinSizeSetting","isFlexEnabled","getAxisMinSize","flexItem","shrink","getRelAxisSize","_horizontal","resizeMainAxis","resizeCrossAxis","setAxisLayoutSize","flex","paddingLeft","paddingTop","paddingRight","paddingBottom","marginLeft","marginTop","marginRight","marginBottom","SizeShrinker","line","_line","_amountRemaining","_shrunkSize","amount","totalShrinkAmount","_getTotalShrinkAmount","items","amountPerShrink","startIndex","endIndex","shrinkAmount","_getMainAxisMinSize","_getMainAxisLayoutSize","maxShrink","finalSize","_resizeMainAxis","abs","SizeGrower","_grownSize","totalGrowAmount","_getTotalGrowAmount","amountPerGrow","growAmount","grow","maxSize","_getMainAxisMaxSizeSetting","maxGrow","ItemPositioner","lineLayout","_setMainAxisLayoutPos","_getMainAxisLayoutSizeWithPaddingAndMargin","_availableSpace","justifyContent","ItemAligner","_crossAxisLayoutSize","_crossAxisLayoutOffset","_alignItemsSetting","_recursiveResizeOccured","_isCrossAxisFitToContents","offset","alignItems","_alignItem","alignSelf","_preventStretch","_hasRelCrossAxisSize","_resetCrossAxisLayoutSize","_alignItemFlexStart","_alignItemFlexEnd","_alignItemFlexCenter","_alignItemStretch","_setCrossAxisLayoutPos","itemCrossAxisSize","_getCrossAxisLayoutSizeWithPaddingAndMargin","center","mainAxisLayoutSizeBeforeResize","_getCrossAxisMargin","_getCrossAxisPadding","crossAxisMinSizeSetting","_getCrossAxisMinSizeSetting","crossAxisMaxSizeSetting","_getCrossAxisMaxSizeSetting","_resizeCrossAxis","hasFixedCrossAxisSize","_hasFixedCrossAxisSize","forceStretch","LineLayout","availableSpace","_setItemSizes","_calcLayoutInfo","_growItemSizes","_shrinkItemSizes","grower","getGrownSize","shrinker","getShrunkSize","position","_calcCrossAxisMaxLayoutSize","mainAxisMinSize","_getMainAxisMinSizeWithPaddingAndMargin","noSpecifiedCrossAxisSize","isCrossAxisFitToContents","resizingCrossAxis","isWrapping","_crossAxisMaxLayoutSize","_getCrossAxisMaxLayoutSize","crossAxisMaxSize","LineLayouter","_mainAxisMinSize","_crossAxisMinSize","_mainAxisContentSize","crossAxisMinSize","_getCrossAxisMinSize","mainAxisContentSize","_setup","wrap","_layoutFlexItem","itemMainAxisSize","_curMainAxisPos","_mainAxisSize","_layoutLine","_addToMainAxisPos","flexLayout","updateTreeLayout","_resetLayoutSize","mainAxisSize","_maxMainAxisPos","_getAvailableMainAxisLayoutSpace","performLayout","resizingMainAxis","isMainAxisFitToContents","itemCrossAxisMinSize","_getCrossAxisMinSizeWithPaddingAndMargin","getMainAxisMinSize","ItemCoordinatesUpdater","_isReverse","_reverse","_horizontalPaddingOffset","_getHorizontalPaddingOffset","_verticalPaddingOffset","_getVerticalPaddingOffset","parentFlex","getParentFlexContainer","_finalizeItemAndChildren","_finalizeRoot","_finalizeItems","getAxisLayoutPos","_getHorizontalPadding","_getVerticalPadding","clearRecalcFlag","setLayout","validCache","_validateItemCache","_finalizeItem","_finalizeItemChildren","recalc","performResizeMainAxis","performResizeCrossAxis","_reverseMainAxisLayoutPos","_getHorizontalMarginOffset","_getVerticalMarginOffset","endPos","_getMainAxisLayoutPos","reversedPos","FlexLayout","flexContainer","_lineLayouter","_resizingMainAxis","_resizingCrossAxis","_cachedMainAxisSizeAfterLayout","_cachedCrossAxisSizeAfterLayout","_shrunk","shrunk","_updateSubTreeLayout","updateItemCoords","_performUpdateLayoutTree","_performUpdateLayoutTreeFromCache","_setInitialAxisSizes","_layoutAxes","_refreshLayoutCache","enableLocalRecalcFlag","finalize","_layoutMainAxis","_getMainAxisBasis","_getCrossAxisBasis","_layoutCrossAxis","_layoutLines","_fitMainAxisSizeToContents","layoutLines","init","_fitCrossAxisSizeToContents","_hasFixedMainAxisBasis","_hasFixedCrossAxisBasis","isZeroAxisSize","_checkValidCacheMainAxisResize","targetMainAxisSize","isShrinking","targetCrossAxisSize","ctr","getPaddingOffset","FlexContainer","_item","Layout","_wrap","_alignItems","_justifyContent","_alignContent","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","changedDimensions","changedContents","direction","f","_changedContents","ALIGN_ITEMS","join","ALIGN_CONTENT","JUSTIFY_CONTENT","padding","_changedDimensions","patchObject","FlexItem","_ctr","_grow","_shrink","SHRINK_AUTO","_alignSelf","undefined","_minWidth","_minHeight","_maxWidth","_maxHeight","_marginLeft","_marginTop","_marginRight","_marginBottom","parseInt","_changed","_getDefaultShrink","minWidth","minHeight","maxWidth","maxHeight","margin","_resetHorizontalAxisLayoutSize","_resetVerticalAxisLayoutSize","_getMaxSizeSetting","setAxisLayoutPos","resizeAxis","getTotalMargin","getMarginOffset","_getMainAxisPadding","_getMainAxisMargin","_getCrossAxisLayoutSize","FlexTarget","_target","_recalc","_enabled","_originalX","_originalY","_originalWidth","_originalHeight","_flexItemDisabled","_items","isChanged","layoutTree","_enableFlex","patch","_disableFlex","_ensureFlexItem","_checkEnabled","_clearFlexItemsCache","_enableChildrenAsFlexItems","_disableChildrenAsFlexItems","children","_children","_enableFlexItem","_disableFlexItem","_parent","_resetOffsets","enabled","isEnabled","_enable","_disable","_setupTargetForFlex","enableFlexLayout","_restoreTargetToNonFlex","disableFlexLayout","setDimensions","_x","_y","_w","_h","from","to","isFlexContainer","_changedChildren","_getFlexItems","visible","isFlexItem","originalX","originalY","funcX","funcY","changeWidth","changeHeight","_updateRecalc","changeExternalWidth","changeExternalHeight","newRecalcFlags","getNewRecalcFlags","_updateRecalcBottomUp","triggerLayout","flags","childRecalc","newRecalc","_getRecalcFromChangedChildRecalc","mainAxisRecalcFlag","crossAxisRecalcFlag","isWidthDynamic","isHeightDynamic","TextureSource","manager","loader","id","stage","textures","Set","_activeTextureCount","lookupId","_cancelCb","loadingSince","_nativeTexture","permanent","renderInfo","_isResultTexture","_loadError","_imageRef","loadError","has","add","delete","becomesUsed","becomesUnused","isResultTexture","cb","texture","elements","element","active","isUsed","load","cancel","isLoading","free","forceSync","Date","getTime","err","options","destroyed","onError","source","isUpdatingFrame","throttle","processLoadedSource","textureThrottler","genericCancelCb","setSource","width","height","imageRef","flipTextureY","_flipTextureY","_isNativeTexture","hasOwnProperty","uploadTextureSource","onLoad","update","frameCounter","forEachActiveElement","forceRenderUpdate","_updateTextureCoords","nativeTexture","newNativeTexture","prevNativeTexture","onTextureSourceLoaded","_setDisplayedTexture","forEachEnabledElement","_updateDimensions","e","onTextureSourceLoadError","isLoaded","freeTextureSource","WebGLTexture","prototype","isTextureSource","ElementTexturizer","elementCore","_element","_core","ctx","lazy","_colorize","_renderTexture","_renderTextureReused","_resultTextureSource","_renderOffscreen","empty","updateRenderToTextureEnabled","renderOffscreen","setHasRenderUpdates","_setRecalc","colorize","textureManager","updateResultTexture","hasEnabledElements","resultTexture","getResultTexture","replaceNativeTexture","core","_hasRenderUpdates","release","renderTextureReused","releaseRenderTexture","allocateRenderTexture","ElementCore","_onUpdate","_pRecalc","_worldContext","ElementCoreContext","_hasUpdates","_localAlpha","_onAfterCalcs","_onAfterUpdate","_localPx","_localPy","_localTa","_localTb","_localTc","_localTd","_isComplex","_dimsUnknown","_clipping","_zSort","_outOfBounds","_displayedTextureSource","_zContextUsage","_zIndexedChildren","_renderContext","renderState","_scissor","_shaderOwner","_updateTreeOrder","_colorUl","_colorUr","_colorBl","_colorBr","_optFlags","_funcX","_funcY","_funcW","_funcH","_scaleX","_scaleY","_pivotX","_pivotY","_mountX","_mountY","_rotation","_alpha","_visible","_ulx","_uly","_brx","_bry","_zIndex","_forceZIndexContext","_zParent","_isRoot","_zIndexResort","_shader","_renderToTextureEnabled","_texturizer","_useRenderToTexture","_boundsMargin","_recBoundsMargin","_withinBoundsMargin","_viewport","_clipbox","render","_renderSimple","offsetX","hasFlexLayout","_disableFuncX","setOriginalXWithoutUpdatingLayout","_updateLocalTranslateDelta","forceLayout","_triggerRecalcTranslate","offsetY","_disableFuncY","setOriginalYWithoutUpdatingLayout","scaleX","_updateLocalTransform","scaleY","scale","pivotX","_updateLocalTranslate","pivotY","pivot","mountX","mountY","mount","rotation","prev","_updateLocalAlpha","_updateEnabledFlag","setVisible","_sr","sin","_cr","cos","_setLocalTransform","_recalcLocalTranslate","pivotXMul","pivotYMul","px","py","dy","_addLocalTranslate","_setLocalAlpha","_setHasUpdates","prevIsZContext","isZContext","prevParent","setParent","setZParent","findZContext","enableZContext","disableZContext","enableZSort","newShaderOwner","_setShaderOwnerRecursive","force","forceZSort","child","splice","removed","added","order","fromIndex","toIndex","isEstimate","ulx","uly","brx","bry","displayedTextureSource","textureSource","isRoot","root","coordsWidth","coordsHeight","newZParent","decZContextUsage","hadZContextUsage","incZContextUsage","zIndex","forceZIndexContext","prevZContext","_getZIndexedDescs","isAncestorOf","results","_getZIndexedDescsRec","sortZIndexedChildren","slice","colorUl","colorUr","colorBl","colorBr","onUpdate","onAfterUpdate","onAfterCalcs","shader","prevShader","activeShader","defaultShader","activeShaderOwner","clipping","clipbox","renderContext","texturizer","_enableRenderToTexture","_disableRenderToTexture","_setShaderOwnerChildrenRecursive","_renderAdvanced","_stashedTexCoords","_stashedColors","outOfBounds","boundsMargin","layoutFlexTree","_applyRelativeDimFuncs","pw","ta","td","tb","tc","pr","_hasRenderContext","updateTreeOrder","useRenderToTexture","mustRenderToTexture","bboxW","bboxH","sx","sy","ex","ey","rComplex","nx","ny","isSquare","area","lx","ly","_disableWithinBoundsMargin","withinMargin","_enableWithinBoundsMargin","isIdentity","IDENTITY","updateOutOfBounds","changedDims","onDimensionsChanged","setShader","setScissor","addQuad","hasRenderUpdates","renderTextureInfo","prevRenderTextureInfo","mustRenderChildren","hasRenderTexture","cleared","ignore","cache","hasResultTexture","isCachingTexturizer","setRenderTextureInfo","finishedRenderTexture","reuseTextureAsRenderTexture","getRenderTexture","setTexturizer","_stashTexCoords","_stashColors","_unstashColors","_unstashTexCoords","zSort","ptr","m","j","sort","mergeResult","localTa","localTb","localTc","localTd","renderUpdates","relX","relY","inBound","inScissor","collectAtCoord","tx","ty","getCornerPoints","sc","_ensureLayout","EventEmitter","_hasEventListeners","listener","_eventFunction","_eventListeners","combiner","current","listeners","off","arg1","arg2","arg3","object","addAsMixin","cls","on","removeListener","emit","listenerCount","removeAllListeners","Shader","coreContext","_initialized","_elements","renderer","createShader","isShader","isValidShaderType","cleanup","Texture","_activeCount","_source","_resizeMode","_precision","mw","mh","_mustUpdate","hasUpdateSourceTexture","_performUpdateSource","removeUpdateSourceTexture","addTexture","incActiveCount","removeTexture","decActiveCount","_checkForNewerReusableTextureSource","incActiveTextureCount","_applyResizeMode","reusable","_getReusableTextureSource","_replaceTextureSource","decActiveTextureCount","isValid","_getIsValid","_updateSource","addUpdateSourceTexture","_getTextureSource","_getLookupId","getTextureSource","_getSourceLoader","getReusableTextureSource","newSource","oldSource","resizeMode","clipX","clipY","_applyResizeCover","_applyResizeContain","_updatePrecision","_updateClipping","desiredSize","choppedOffPixels","_clearResizeMode","self","displayedTexture","onDisplayedTextureClippingChanged","onPrecisionChanged","nonDefaults","precision","ph","isAutosizeTexture","getRenderWidth","getRenderHeight","isTexture","ImageTexture","super","_src","_hasAlpha","src","hasAlpha","getOption","fc","charCodeAt","platform","loadSrcTexture","getNonDefaults","TextTextureRenderer","canvas","_stage","_canvas","_context","getContext","_settings","font","getFontSetting","_getFontSetting","textBaseline","ff","fontFace","ffs","fontStyle","fontSize","getPrecision","document","fonts","fontSetting","check","text","catch","then","loadPromise","_load","drawText","_draw","lineHeight","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","letterSpacing","setFontProperties","linesInfo","innerWidth","textOverflow","wordWrap","suffix","maxLinesSuffix","wrapWord","wrapText","l","maxLines","usedLines","otherLines","measureText","al","remainingText","moreTextLines","maxLineWidth","lineWidths","lineWidth","_calculateRenderInfo","linePositionX","linePositionY","globalAlpha","fillRect","translate","drawLines","verticalAlign","textAlign","highlight","highlightColor","hlHeight","highlightHeight","highlightOffset","hlPaddingLeft","highlightPaddingLeft","hlPaddingRight","highlightPaddingRight","fillStyle","getRgbaString","drawLine","prevShadowSettings","shadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textColor","fillText","textSplit","word","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","substring","allLines","realNewlines","resultLines","spaceLeft","words","wordWidthWithSpace","concat","space","reduce","acc","char","TextTexture","_text","_fontStyle","_fontSize","_fontFace","_wordWrap","_wordWrapWidth","_textOverflow","_lineHeight","_textBaseline","_textAlign","_verticalAlign","_offsetY","_maxLines","_maxLinesSuffix","_textColor","_shadow","_shadowColor","_shadowOffsetX","_shadowOffsetY","_shadowBlur","_highlight","_highlightHeight","_highlightColor","_highlightOffset","_highlightPaddingLeft","_highlightPaddingRight","_cutSx","_cutEx","_cutSy","_cutEy","_letterSpacing","toString","args","cloneArgs","getDrawingCanvas","draw","assign","getTextureOptionsForDrawingCanvas","proto","SourceTexture","_textureSource","getRenderPrecision","Transition","property","_getter","getGetter","_setter","getSetter","_merger","merger","getMerger","_startValue","_targetValue","_p","_delayLeft","targetValue","isAttached","reset","delay","_updateDrawValue","removeActive","stop","addActive","getDrawValue","attached","dt","delayLeft","duration","invokeListeners","timingFunctionImpl","_timingFunctionImpl","startValue","isTransition","ObjectList","_refs","first","last","addAt","currentIndex","setAt","ref","onAdd","existingItem","getByRef","replace","prevItem","getIndex","onMove","onSet","removeAt","onRemove","onSync","o","createItem","isItem","_setByObject","_setByArray","refs","_getRefs","crefs","cref","idx","array","same","_equalsArray","marker","newItems","_setItems","prevItems","filter","get","ElementChildList","prevChildList","childList","removeChildAt","_setParent","_connectParent","addChildAt","gc","syncChildren","map","setChildAt","moveChild","createElement","isElement","Element","__id","__start","__core","__ref","__attached","__enabled","__active","__parent","__texture","__displayedTexture","__tags","__treeTags","__tagRoot","__childList","isUcChar","_throwError","removeTag","clearRef","_addTag","setRef","setAsRoot","_updateAttachedFlag","_unsetTagsParent","_setTagsParent","depth","levels","getDepth","getAncestor","o1","o2","l1","l2","_isEnabled","withinBoundsMargin","newAttached","_isAttached","_onSetup","_onAttach","_onDetach","newEnabled","_onEnabled","_setEnabledFlag","_onDisabled","_unsetEnabledFlag","addElement","_setActiveFlag","_unsetActiveFlag","removeElement","filters","_enableTexture","_onActive","_disableTexture","_hasTexturizer","deactivate","_onInactive","renderWidth","_getRenderWidth","renderHeight","_getRenderHeight","finalX","finalY","finalW","finalH","_enableTextureError","prevTexture","prevSource","sourceChanged","setDisplayedTextureSource","unknownSize","_onResize","tx1","ty1","tx2","ty2","iw","ih","rw","rh","tempty","setTextureCoords","tag","tags","iteratorToArray","tagSet","parentTreeTags","comp","Map","set","setToArray","removes","adds","hasTag","currentTags","addTag","list","mtag","values","_tag","res","_getByTag","level","resn","tagRoot","path","select","selectors","_select","isRef","pointIdx","arrowIdx","_selectChilds","subPath","localTags","getTags","getLocationString","getSettings","getPrettyString","indent","colorKeys","JSON","stringify","k","childStr","isEmpty","childArray","missing","tnd","renderToTexture","renderToTextureLazy","colorizeResultTexture","propertyPath","getter","PROP_GETTERS","Function","PROP_SETTERS","disableFuncW","disableFuncH","colorTop","colorBottom","colorLeft","colorRight","setTags","_allowChildrenAccess","rect","rectangleTexture","enableTextTexture","isString","create","rtt","rttLazy","paths","firstCharCode","remove","message","animations","createAnimation","_getTransition","_setTransition","transitions","transition","smooth","setSmooth","_transitions","finish","isTransitionSettings","defaultTransitionSettings","createSettings","_removeTransition","start","toLowerCase","isColorProperty","mergeColors","mergeNumbers","tree","hasChildren","collectChildren","getProperties","getAt","properties","props","key","test","StateMachine","setupStateMachine","targetConstructor","router","setPrototypeOf","_initStateMachine","stateMachineType","StateMachineType","_sm","event","_hasMethod","_state","__path","statePath","currentStatePath","state","getStateByPath","currentState","__level","_getStateAtLevel","member","setStateId","_setStateCounter","_setStateId","newState","_stateMap","prevState","hasDifferentEnterMethod","$enter","hasDifferentExitMethod","$exit","sharedState","_getSharedState","context","sharedLevel","exitStates","_getStatesUntilLevel","__setState","_callExit","enterStates","reverse","_callEnter","_changedState","_onStateChange","hasParent","apply","_stateIndex","__index","_routedType","memberNames","cur","memberName","getStateMemberAlias","states","state1","state2","state1Array","_getAncestorStates","state2Array","_type","_router","_createRouter","_getStateMap","_addStateMemberDelegatorsToRouter","StateMachineRouter","arguments","_isRouter","original","_mixinStateMachineMethods","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","defineProperty","_getAllMemberNames","_addMemberRouter","statePaths","descriptors","aliases","_getDescriptor","alias","descType","_getDescriptorType","_addMethodRouter","_addGetterSetterRouters","curState","getPrototypeOf","__supportsSpread","code","supportsSpread","_supportsSpread","functionBody","_getGetterRouter","_getSetterRouter","stateMap","members","_getStateMemberNames","_getStateMemberNamesForType","_isStateLocalMember","pop","_createStateMap","_addState","parentState","__state","__name","_addStaticStateProperty","parentPath","_states","subState","stateName","_getStateName","Component","__initialized","__firstActive","__firstEnable","__signals","__passSignals","__construct","getTemplateFunc","_build","__onStateChange","_getState","application","updateFocusPath","parseTemplate","_template","loc","store","rid","parseTemplateRec","cursor","childCursor","propKey","parseTemplatePropRec","isNumber","isBoolean","__init","_attach","_detach","_firstEnable","_firstActive","_active","_inactive","_construct","_init","newTarget","prevTarget","_focusPath","cparent","ancestor","getSharedAncestor","isComponent","signals","alterSignals","passSignals","alterPassSignals","_signal","signalParent","_getParentSignalHandler","fireEvent","passSignal","_getSignalHandler","_signalProxy","startsWith","_doFireAncestors","fire","subs","collectSubComponents","getComponent","CoreQuadList","quadTextures","quadElements","dataLength","WebGLCoreQuadList","byteSize","data","ArrayBuffer","floats","Float32Array","uints","Uint32Array","CoreQuadOperation","shaderOwner","scissor","quads","getTexture","getElementCore","getElement","getTextureWidth","getTextureHeight","WebGLCoreQuadOperation","extraAttribsDataByteOffset","getAttribsDataByteOffset","coords","getRenderTextureCoords","renderExec","_projection","projection","CoreRenderExecutor","gl","_bindRenderTexture","_setScissor","_clearRenderTexture","_reset","qops","quadOperations","_processQuadOperation","quadOperation","_setupQuadOperation","_execQuadOperation","op","_renderQuadOperation","renderTexture","WebGLCoreRenderExecutor","_attribsBuffer","createBuffer","maxQuads","byteLength","allIndices","Uint16Array","_quadsBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","destroy","deleteBuffer","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","BLEND","disable","DEPTH_TEST","_stopShaderProgram","_setupBuffers","ARRAY_BUFFER","DYNAMIC_DRAW","_useShaderProgram","addEmpty","beforeDraw","afterDraw","operation","hasSameProgram","_currentShaderProgram","stopProgram","useProgram","setupUniforms","bindFramebuffer","FRAMEBUFFER","framebuffer","viewport","clearColor","clear","COLOR_BUFFER_BIT","glClearColor","getClearColor","SCISSOR_TEST","CoreRenderState","getDefaultShader","createCoreQuadList","_renderTextureInfo","_realShader","_check","_texturizerTemporary","_quadOperation","_temporaryTexturizers","_isCachingTexturizer","owner","useDefault","_cacheTexturizer","_hasChanges","_finishQuadOperation","_createQuadOperation","_isRenderTextureReusable","isRenderTextureReusable","q","createCoreQuadOperation","finishRenderState","WebGLShaderProgram","vertexShaderSource","fragmentShaderSource","_program","_uniformLocations","_attributeLocations","_currentUniformValues","createProgram","glVertShader","_glCompile","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","log","getShaderInfoLog","location","getUniformLocation","getAttribLocation","glProgram","compiled","glFunction","_valueEquals","clonedValue","_valueClone","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","call","WebGLShader","shaderPrograms","initialize","compile","initialized","setUniformValue","beforeUsage","enableAttribs","afterUsage","disableAttribs","other","getExtraAttribBytesPerVertex","getProjection","_getProjection","DefaultShader","vertexAttribPointer","_attrib","FLOAT","enableVertexAttribArray","UNSIGNED_BYTE","disableVertexAttribArray","_setUniform","uniform2fv","glTexture","bindTexture","TEXTURE_2D","drawElements","TRIANGLES","UNSIGNED_SHORT","Renderer","_defaultShader","aggressive","_createDefaultShader","shaderType","_getShaderBaseType","convertedShaderType","_getShaderAlternative","WebGLRenderer","shaderProgram","getWebGL","createTexture","texImage2D","RGBA","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","params","format","internalFormat","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","deleteFramebuffer","deleteTexture","premultiplyAlpha","flipBlueRed","texParams","texOptions","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_BLUE_RED","RGB","uploadGlTexture","cloneObjShallow","mca","mergeColorAlpha","cx","cy","extra","setExtraAttribsInBuffer","copyTexSubImage2D","ow","oh","C2dCoreQuadList","renderContexts","modes","C2dCoreQuadOperation","getRenderContext","getSimpleTc","getWhite","C2dCoreRenderExecutor","_mainRenderTexture","getCanvas","_getContext","setTransform","getRgbaStringFromArray","globalCompositeOperation","beginPath","closePath","fill","clearRect","restore","save","_equalScissorAreas","_restoreContext","clip","C2dShader","_rectangleTexture","_tintManager","tintManager","vc","rc","white","stc","info","_setColorGradient","_beforeDrawEl","_afterDrawEl","sourceX","sourceY","sourceW","sourceH","mergeMultiColorsEqual","rgb","tintTexture","getTintTexture","drawImage","transparency","gradient","createLinearGradient","addColorStop","getRgbString","C2dTextureTintManager","_usedMemory","_cachedNativeTextures","delta","addMemoryUsage","_hasCache","_getCache","prevMemUsage","memoryUsage","_addMemoryUsage","frame","lf","u","_tintTexture","before","reuseTexture","after","col","_tintCache","C2dTintCache","releaseBlancoTextures","_tx","_colors","_blancoTextures","_lastCleanupFrame","_memTextures","C2dRenderer","TextureTintManager","setupC2d","c2d","getC2d","buffer","imageData","ImageData","Uint8ClampedArray","putImageData","setRenderContext","setWhite","isWhite","setSimpleTc","hasSimpleTexCoords","SparkShader","elementPostion","paint","SparkRenderer","global","beginDrawing","ret","createCoreRenderExecutor","endDrawing","ImageWorker","_id","_initWorker","_worker","terminate","createWorker","blob","Blob","blobURL","URL","webkitURL","createObjectURL","Worker","postMessage","config","href","protocol","onmessage","ImageWorkerImage","image","_manager","_onError","_onLoad","ImageWorkerServer","_receiveMessage","ImageWorkerServerItem","_onFinish","_xhr","_mimeType","_canceled","isPathAbsolute","_relativeBase","onFinish","imageBitmap","hasAlphaChannel","isWPEBrowser","XMLHttpRequest","open","responseType","onerror","oEvent","onload","response","_createImageBitmap","send","createImageBitmap","colorSpaceConversion","imageOrientation","_hasAlphaChannel","abort","WebPlatform","_looping","_awaitingLoop","_imageWorker","_removeKeyHandler","loop","lp","drawFrame","requestAnimationFrame","HTMLImageElement","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","cancelCb","isPng","Image","crossOrigin","removeAttribute","opts","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","performance","now","changes","keyhandler","_keydownListener","addEventListener","_keyupListener","removeEventListener","WebGLState","_gl","_buffers","_framebuffers","_renderbuffers","_vertexAttribs","_nonDefaultFlags","_textures","_maxTexture","_activeTexture","TEXTURE0","_pixelStorei","cap","DITHER","_getDefaultFlag","change","program","va","equal","changed","activeIndex","_getTextureIndex","targetIndex","_getTextureTargetIndex","pname","param","_getPixelStoreiIndex","_migrateFlags","_useProgram","_migrateFramebuffers","_migrateRenderbuffers","buffersChanged","_migrateBuffers","_migrateAttributes","_migrateSettings","_migratePixelStorei","_migrateTextures","_getDefaultPixelStoreiByIndex","_getPixelStoreiByIndex","activeTexture","sTargets","tTargets","textureNumb","_getTextureByIndex","_getTextureTargetByIndex","_bindTexture","_bindBuffer","_bindFramebuffer","renderbuffer","_bindRenderbuffer","attrib","_vertexAttribPointer","_enableVertexAttribArray","_disableVertexAttribArray","defaults","getDefaultSettings","xname","tValue","setting","_defaultSettings","WebGLRenderingContext","FUNC_ADD","ZERO","BACK","LESS","CCW","ALWAYS","KEEP","_textureTargetIndices","_pixelStoreiIndices","_pixelStoreiDefaults","BROWSER_DEFAULT_WEBGL","WebGLStateManager","migrate","setProgram","fb","setBuffer","setFramebuffer","setRenderbuffer","setFlag","normalized","stride","setActiveTexture","setPixelStorei","face","mask","FRONT","_stencilFuncSeparateFront","_stencilFuncSeparateBack","FRONT_AND_BACK","_stencilFuncSeparateFrontAndBack","_stencilFuncSeparate","_stencilMaskSeparateFront","_stencilMaskSeparateBack","_stencilMaskSeparateFrontAndBack","_stencilMaskSeparate","fail","zfail","zpass","_stencilOpSeparateFront","_stencilOpSeparateBack","_stencilOpSeparateFrontAndBack","_stencilOpSeparate","red","green","blue","_blendColor","_blendEquation","modeRGB","modeAlpha","_blendEquationSeparate","sfactor","dfactor","_blendFunc","srcRGB","dstRGB","srcAlpha","dstAlpha","_blendFuncSeparate","_clearColor","_clearDepth","_clearStencil","_colorMask","_cullFace","_depthFunc","flag","_depthMask","zNear","zFar","_depthRange","_frontFace","_lineWidth","factor","units","_polygonOffset","invert","_sampleCoverage","_stencilFunc","_stencilMask","_stencilOp","indx","_vertexAttrib1f","_vertexAttrib1fv","_vertexAttrib2f","_vertexAttrib2fv","z","_vertexAttrib3f","_vertexAttrib3fv","_vertexAttrib4f","_vertexAttrib4fv","__proto__","method","_initStateManager","TextureManager","_uploadedTextureSources","textureSourceHashmap","usedMemory","_nativeFreeTextureSource","_nativeUploadTextureSource","addToLookupMap","freeUnusedTextureSources","_cleanupLookupMap","remainingTextureSources","ts","allowCleanup","_freeManagedTextureSource","managed","clearNativeTexture","TextureThrottler","_remove","_sources","_data","_processItem","MAX_UPLOAD_TIME_PER_FRAME","CoreContext","createCoreRenderState","_renderTexturePool","_renderTextureId","_zSorts","_freeRenderTexture","_render","_update","_performForcedZSorts","_fillRenderState","pixels","Uint8Array","readPixels","_performRender","execute","prec","_createRenderTexture","maxAge","limit","createRenderTexture","freeRenderTexture","copyRenderTexture","TransitionSettings","_timingFunction","getTimingFunction","timingFunction","TransitionManager","progress","isRunning","transitionSettings","MultiSpline","_clear","_pe","_idp","_f","_v","_lv","_s","_ve","_sme","_se","_length","def","0","defaultSmoothness","lv","pe","idp","sm","pi","ni","nc","getRgbaComponents","pc","ve","sme","se","getSplineRgbaValueFunction","getSplineValueFunction","_add","_getItem","p1","p2","i2","s1","s2","dp","helpers","getSplineHelpers","calculateSpline","cv1","cv2","getArgbNumber","csy","cex","cey","yd","AnimationActionSettings","animationSettings","_selector","_props","_propSetters","_resetValue","_hasResetValue","_hasColorProperty","getValue","getAnimatedElements","sv","getResetValue","hasColorProperty","selector","resetValue","rv","parse","prop","isAnimationActionSettings","AnimationSettings","_actions","repeat","repeatOffset","repeatDelay","autostop","stopMethod","STOP_METHODS","FADE","_stopTimingFunction","_stopTimingFunctionImpl","stopDuration","stopDelay","actions","aas","action","stopTimingFunction","stopTimingFunctionImpl","REVERSE","FORWARD","IMMEDIATE","ONETOTWO","Animation","STATES","IDLE","_repeatsLeft","_stopDelayLeft","_stopP","PLAYING","checkActive","PAUSED","STOPPING","FINISHED","play","STOPPED","isActive","_progress","_stopProgress","_getStopDuration","_progressStopTransition","AnimationManager","RectangleTexture","Stage","_setOptions","_lastGcFrame","platformType","PlatformLoader","isWebglSupported","createWebGLContext","createCanvasContext","_mode","_options","_renderer","setClearColor","startTime","currentTime","_updateSourceTextures","opt","app","startLoop","stopLoop","_updatingFrame","getHrTime","fixedDt","processSome","nextFrame","getRgbaComponentsNormalized","memoryUsageBefore","gcTextureMemory","gcRenderTextureMemory","freeUnusedRenderTextures","serviceprovider","addServiceProvider","Application","_temp_options","booting","__updateFocusCounter","__keypressTimers","updateFocusSettings","__keymap","registerKeydownHandler","_receiveKeydown","registerKeyupHandler","_receiveKeyup","__options","38","40","37","39","13","8","27","setApplication","__updateFocus","notOverridden","__updateFocusRec","updateFocusId","__updateFocusId","newFocusPath","__getFocusPath","newFocusedComponent","prevFocusedComponent","_focus","debug","_unfocus","_focusChange","focusedComponent","focusSettings","defaultSetFocusSettings","_setFocusSettings","defaultHandleFocusSettings","_handleFocusSettings","__prevFocusSettings","prevSettings","focused","prevFocused","nextFocus","_getFocused","newParts","focusPath","events","_getMostSpecificHandledMember","keyCode","hasTimer","longpress","focusTopDownEvent","focusBottomUpEvent","consumer","_startLongpressTimer","clearTimeout","lookup","timeout","setTimeout","_destroyed","_destroy","timer","StaticCanvasTexture","_factory","_lookupId","content","factory","Tools","canvasFactory","radius","strokeWidth","strokeColor","fillColor","getCanvasTexture","createRoundRect","imageSmoothingEnabled","moveTo","lineTo","arcTo","strokeStyle","stroke","blur","createShadowRect","url","createSvg","img","ObjMerger","__mf","aks","bks","ai","bi","aksl","aIndex","curIndex","akey","bv","av","isMf","merge","ObjectListProxy","ObjectListWrapper","wrapper","_wrapper","NoiseTexture","noise","random","REPEAT","NEAREST","HtmlTexture","_htmlElement","_scale","htmlElement","html","innerHTML","firstElementChild","html2canvas","getPreloadArea","appendChild","backgroundColor","removeChild","_preloadArea","attachShadow","style","opacity","pointerEvents","display","top","overflow","body","ListItems","checkStarted","_reloadVisibleElements","_started","setIndex","_index","ri","realIndex","LinearBlurShader","_direction","_kernelRadius","redraw","kernelRadius","uniform1i","BoxBlurShader","BlurShader","_amount","C2dFastBlurComponent","Textwrap","C2dBlurShader","Content","_textwrap","sel","_paddingX","_paddingY","_multiSpline","0.25","0.5","0.75","1","_updateBlurSize","paddingX","paddingY","_amountToKernelRadius","getSpline","WebGLFastBlurComponent","Layers","L0","L1","L2","L3","Result","FastBlurOutputShader","_layers","_output","filterShaders","_setLayerTexture","getLayerContents","getLayer","steps","step","fw","fh","otherTextureSource","_buildLayers","_a","_otherTextureSource","uniform1f","TEXTURE1","BloomBaseShader","SmoothScaleComponent","ContentWrap","Scale","_smoothScale","_iterations","smoothScale","its","_setIterations","scalers","useScalers","contentWrap","WebGLGrayscaleShader","WebGLDefaultShader","C2dGrayscaleShader","C2dDefaultShader","DitheringShader","_noiseTexture","_graining","_random","graining","getElementWidth","getElementHeight","getVertexAttribPointerOffset","CircularPushShader","_inputValue","_maxDerivative","_normalizedValue","_offset","_aspectRatio","_offsetX","buckets","aspectRatio","inputValue","maxDerivative","_buckets","_values","_getValues","full","_shiftBuckets","_valuesTexture","ALPHA","InversionShader","OutlineShader","_width","_col","_color","uniform4fv","ddw","dw","ddh","dh","PixelateShader","_size","WebGLPixelateShaderImpl","RadialFilterShader","_radius","_cutoff","cutoff","RoundedRectangleShader","_stroke","_fillColor","_getNormalizedColor","_strokeColor","num","renderPrecision","VignetteShader","_magnitude","_intensity","intensity","magnitude","SpinnerShader","_period","_angle","_smooth","_backgroundColor","_time","period","angle","HoleShader","RadialGradientShader","_radiusX","_radiusY","radiusX","radiusY","_rawColor","rtc","getNormalRenderTextureCoords","Light3dShader","_strength","_ambient","_fudge","_rx","_ry","_z","NaN","_pivotZ","_lightY","_lightZ","vr","rz","atan2","uniform3fv","lightY","lightZ","strength","ambient","fudge","rx","ry","pivotZ","PerspectiveShader","lightning","shaders","Grayscale","BoxBlur","Dithering","CircularPush","Inversion","LinearBlur","Outline","Pixelate","RadialFilter","RoundedRectangle","Hole","Vignette","Spinner","RadialGradient","Light3d","Perspective","Blur","StaticTexture","components","FastBlurComponent","Wrap","BloomComponent","BloomBase","BorderComponent","Borders","Top","Right","Bottom","Left","_borderTop","_borderRight","_borderBottom","_borderLeft","borderWidth","borderWidthTop","borderWidthRight","borderWidthBottom","borderWidthLeft","colorBorder","colorBorderTop","colorBorderRight","colorBorderBottom","colorBorderLeft","borderTop","borderRight","borderBottom","borderLeft","borders","ListComponent","_visibleItems","_scrollTransitionSettings","_itemSize","_viewportScrollOffset","_itemScrollOffset","_roll","_rollMin","_rollMax","_progressAnimation","_invertDirection","itemList","_scrollTransition","immediate","closest","nElements","diff","viewportSize","scrollDelta","ps","wasVisible","invisibleItem","getWrapper","itemSize","viewportScrollOffset","itemScrollOffset","scrollTransitionSettings","scrollTransition","progressAnimation","roll","rollMin","rollMax","invertDirection","tools","lng"],"mappings":"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"}